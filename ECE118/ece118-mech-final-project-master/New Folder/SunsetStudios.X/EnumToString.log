[DEBUG]2022-05-26 16:55:20,022: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 16:55:20,022: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 16:55:20,023: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 16:55:20,025: None
[DEBUG]2022-05-26 16:55:20,025: None
[DEBUG]2022-05-26 16:55:20,026: None
[DEBUG]2022-05-26 16:55:20,026: None
[DEBUG]2022-05-26 16:55:20,026: None
[DEBUG]2022-05-26 16:55:20,027: None
[DEBUG]2022-05-26 16:55:20,027: None
[DEBUG]2022-05-26 16:55:20,027: None
[DEBUG]2022-05-26 16:55:20,027: None
[DEBUG]2022-05-26 16:55:20,028: None
[DEBUG]2022-05-26 16:55:20,028: None
[DEBUG]2022-05-26 16:55:20,028: None
[DEBUG]2022-05-26 16:55:20,028: None
[DEBUG]2022-05-26 16:55:20,028: None
[DEBUG]2022-05-26 16:55:20,028: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:20,028: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:20,028: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:20,028: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:20,028: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:20,028: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:20,029: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:20,029: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:20,029: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:20,029: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:20,029: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:20,029: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:20,029: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:20,029: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:20,029: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:20,029: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:20,029: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:20,029: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:20,030: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:20,030: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:20,030: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:20,030: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:20,030: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:20,030: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:20,030: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:20,030: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:20,030: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:20,030: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:20,030: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:20,030: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:20,030: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:20,030: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:20,031: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:20,031: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:20,031: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:20,031: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:20,031: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:20,031: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:20,031: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:20,032: None
[DEBUG]2022-05-26 16:55:20,032: None
[DEBUG]2022-05-26 16:55:20,032: None
[DEBUG]2022-05-26 16:55:20,032: None
[DEBUG]2022-05-26 16:55:20,032: None
[DEBUG]2022-05-26 16:55:20,032: None
[DEBUG]2022-05-26 16:55:20,032: None
[DEBUG]2022-05-26 16:55:20,032: None
[DEBUG]2022-05-26 16:55:20,033: None
[DEBUG]2022-05-26 16:55:20,033: None
[DEBUG]2022-05-26 16:55:20,033: None
[DEBUG]2022-05-26 16:55:20,033: None
[DEBUG]2022-05-26 16:55:20,033: None
[DEBUG]2022-05-26 16:55:20,033: None
[DEBUG]2022-05-26 16:55:20,033: None
[DEBUG]2022-05-26 16:55:20,033: None
[DEBUG]2022-05-26 16:55:20,033: None
[DEBUG]2022-05-26 16:55:20,034: None
[DEBUG]2022-05-26 16:55:20,034: None
[DEBUG]2022-05-26 16:55:20,034: None
[DEBUG]2022-05-26 16:55:20,034: None
[DEBUG]2022-05-26 16:55:20,034: None
[DEBUG]2022-05-26 16:55:20,034: None
[DEBUG]2022-05-26 16:55:20,034: None
[DEBUG]2022-05-26 16:55:20,034: None
[DEBUG]2022-05-26 16:55:20,034: None
[DEBUG]2022-05-26 16:55:20,034: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,035: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,036: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,037: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:20,038: None
[DEBUG]2022-05-26 16:55:55,207: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 16:55:55,208: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 16:55:55,208: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 16:55:55,211: None
[DEBUG]2022-05-26 16:55:55,211: None
[DEBUG]2022-05-26 16:55:55,212: None
[DEBUG]2022-05-26 16:55:55,212: None
[DEBUG]2022-05-26 16:55:55,212: None
[DEBUG]2022-05-26 16:55:55,212: None
[DEBUG]2022-05-26 16:55:55,212: None
[DEBUG]2022-05-26 16:55:55,212: None
[DEBUG]2022-05-26 16:55:55,212: None
[DEBUG]2022-05-26 16:55:55,213: None
[DEBUG]2022-05-26 16:55:55,213: None
[DEBUG]2022-05-26 16:55:55,213: None
[DEBUG]2022-05-26 16:55:55,213: None
[DEBUG]2022-05-26 16:55:55,213: None
[DEBUG]2022-05-26 16:55:55,214: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:55,214: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:55,214: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:55,214: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:55,214: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:55,214: <re.Match object; span=(2010, 2078), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 16:55:55,214: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:55,214: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:55,214: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:55,214: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:55,214: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:55,214: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 16:55:55,214: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:55,214: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:55,214: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:55,214: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:55,214: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:55,214: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 16:55:55,216: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:55,216: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:55,216: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:55,216: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:55,216: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:55,216: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:55,216: <re.Match object; span=(1568, 1645), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 16:55:55,216: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:55,216: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:55,216: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:55,216: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:55,216: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:55,216: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:55,216: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 16:55:55,217: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:55,217: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:55,217: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:55,217: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:55,217: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:55,217: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:55,217: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,218: None
[DEBUG]2022-05-26 16:55:55,219: None
[DEBUG]2022-05-26 16:55:55,219: None
[DEBUG]2022-05-26 16:55:55,219: None
[DEBUG]2022-05-26 16:55:55,219: None
[DEBUG]2022-05-26 16:55:55,219: None
[DEBUG]2022-05-26 16:55:55,219: None
[DEBUG]2022-05-26 16:55:55,219: None
[DEBUG]2022-05-26 16:55:55,219: None
[DEBUG]2022-05-26 16:55:55,219: None
[DEBUG]2022-05-26 16:55:55,219: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,220: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,221: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,222: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 16:55:55,223: None
[DEBUG]2022-05-26 17:00:57,892: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:00:57,893: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:00:57,893: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:00:57,895: None
[DEBUG]2022-05-26 17:00:57,895: None
[DEBUG]2022-05-26 17:00:57,896: None
[DEBUG]2022-05-26 17:00:57,896: None
[DEBUG]2022-05-26 17:00:57,896: None
[DEBUG]2022-05-26 17:00:57,896: None
[DEBUG]2022-05-26 17:00:57,896: None
[DEBUG]2022-05-26 17:00:57,896: None
[DEBUG]2022-05-26 17:00:57,896: None
[DEBUG]2022-05-26 17:00:57,898: None
[DEBUG]2022-05-26 17:00:57,898: None
[DEBUG]2022-05-26 17:00:57,898: None
[DEBUG]2022-05-26 17:00:57,898: None
[DEBUG]2022-05-26 17:00:57,898: None
[DEBUG]2022-05-26 17:00:57,899: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:00:57,899: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:00:57,899: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:00:57,899: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:00:57,899: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:00:57,899: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:00:57,900: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:00:57,900: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:00:57,900: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:00:57,900: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:00:57,900: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:00:57,900: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:00:57,900: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:00:57,900: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:00:57,900: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:00:57,900: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:00:57,900: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:00:57,900: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:00:57,902: None
[DEBUG]2022-05-26 17:00:57,902: None
[DEBUG]2022-05-26 17:00:57,902: None
[DEBUG]2022-05-26 17:00:57,902: None
[DEBUG]2022-05-26 17:00:57,902: None
[DEBUG]2022-05-26 17:00:57,902: None
[DEBUG]2022-05-26 17:00:57,902: None
[DEBUG]2022-05-26 17:00:57,903: None
[DEBUG]2022-05-26 17:00:57,903: None
[DEBUG]2022-05-26 17:00:57,903: None
[DEBUG]2022-05-26 17:00:57,903: None
[DEBUG]2022-05-26 17:00:57,903: None
[DEBUG]2022-05-26 17:00:57,903: None
[DEBUG]2022-05-26 17:00:57,903: None
[DEBUG]2022-05-26 17:00:57,903: None
[DEBUG]2022-05-26 17:00:57,904: None
[DEBUG]2022-05-26 17:00:57,904: None
[DEBUG]2022-05-26 17:00:57,904: None
[DEBUG]2022-05-26 17:00:57,904: None
[DEBUG]2022-05-26 17:00:57,904: None
[DEBUG]2022-05-26 17:00:57,904: None
[DEBUG]2022-05-26 17:00:57,904: None
[DEBUG]2022-05-26 17:00:57,904: None
[DEBUG]2022-05-26 17:00:57,904: None
[DEBUG]2022-05-26 17:00:57,905: None
[DEBUG]2022-05-26 17:00:57,905: None
[DEBUG]2022-05-26 17:00:57,905: None
[DEBUG]2022-05-26 17:00:57,905: None
[DEBUG]2022-05-26 17:00:57,905: None
[DEBUG]2022-05-26 17:00:57,905: None
[DEBUG]2022-05-26 17:00:57,905: None
[DEBUG]2022-05-26 17:00:57,905: None
[DEBUG]2022-05-26 17:00:57,905: None
[DEBUG]2022-05-26 17:00:57,905: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,906: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,907: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,908: None
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,909: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:00:57,910: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,109: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:01:50,109: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:01:50,109: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:01:50,112: None
[DEBUG]2022-05-26 17:01:50,112: None
[DEBUG]2022-05-26 17:01:50,113: None
[DEBUG]2022-05-26 17:01:50,113: None
[DEBUG]2022-05-26 17:01:50,113: None
[DEBUG]2022-05-26 17:01:50,114: None
[DEBUG]2022-05-26 17:01:50,114: None
[DEBUG]2022-05-26 17:01:50,114: None
[DEBUG]2022-05-26 17:01:50,114: None
[DEBUG]2022-05-26 17:01:50,115: None
[DEBUG]2022-05-26 17:01:50,115: None
[DEBUG]2022-05-26 17:01:50,115: None
[DEBUG]2022-05-26 17:01:50,115: None
[DEBUG]2022-05-26 17:01:50,115: None
[DEBUG]2022-05-26 17:01:50,116: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:01:50,116: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:01:50,116: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:01:50,116: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:01:50,116: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:01:50,116: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:01:50,116: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:01:50,116: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:01:50,116: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:01:50,116: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:01:50,116: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:01:50,116: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:01:50,116: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:01:50,116: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:01:50,116: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:01:50,116: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:01:50,116: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:01:50,116: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:01:50,118: None
[DEBUG]2022-05-26 17:01:50,118: None
[DEBUG]2022-05-26 17:01:50,118: None
[DEBUG]2022-05-26 17:01:50,118: None
[DEBUG]2022-05-26 17:01:50,118: None
[DEBUG]2022-05-26 17:01:50,118: None
[DEBUG]2022-05-26 17:01:50,118: None
[DEBUG]2022-05-26 17:01:50,119: None
[DEBUG]2022-05-26 17:01:50,119: None
[DEBUG]2022-05-26 17:01:50,119: None
[DEBUG]2022-05-26 17:01:50,119: None
[DEBUG]2022-05-26 17:01:50,119: None
[DEBUG]2022-05-26 17:01:50,119: None
[DEBUG]2022-05-26 17:01:50,119: None
[DEBUG]2022-05-26 17:01:50,119: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,120: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,121: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,122: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,123: None
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,124: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:01:50,125: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,179: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:02:05,179: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:02:05,179: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:02:05,182: None
[DEBUG]2022-05-26 17:02:05,182: None
[DEBUG]2022-05-26 17:02:05,182: None
[DEBUG]2022-05-26 17:02:05,182: None
[DEBUG]2022-05-26 17:02:05,182: None
[DEBUG]2022-05-26 17:02:05,183: None
[DEBUG]2022-05-26 17:02:05,183: None
[DEBUG]2022-05-26 17:02:05,183: None
[DEBUG]2022-05-26 17:02:05,183: None
[DEBUG]2022-05-26 17:02:05,184: None
[DEBUG]2022-05-26 17:02:05,184: None
[DEBUG]2022-05-26 17:02:05,184: None
[DEBUG]2022-05-26 17:02:05,184: None
[DEBUG]2022-05-26 17:02:05,184: None
[DEBUG]2022-05-26 17:02:05,185: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:05,185: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:05,185: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:05,185: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:05,185: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:05,185: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:05,185: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:05,185: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:05,185: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:05,185: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:05,185: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:05,185: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:05,185: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:05,185: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:05,185: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:05,185: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:05,185: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:05,185: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:05,187: None
[DEBUG]2022-05-26 17:02:05,187: None
[DEBUG]2022-05-26 17:02:05,187: None
[DEBUG]2022-05-26 17:02:05,187: None
[DEBUG]2022-05-26 17:02:05,187: None
[DEBUG]2022-05-26 17:02:05,187: None
[DEBUG]2022-05-26 17:02:05,187: None
[DEBUG]2022-05-26 17:02:05,188: None
[DEBUG]2022-05-26 17:02:05,188: None
[DEBUG]2022-05-26 17:02:05,188: None
[DEBUG]2022-05-26 17:02:05,188: None
[DEBUG]2022-05-26 17:02:05,188: None
[DEBUG]2022-05-26 17:02:05,188: None
[DEBUG]2022-05-26 17:02:05,188: None
[DEBUG]2022-05-26 17:02:05,188: None
[DEBUG]2022-05-26 17:02:05,189: None
[DEBUG]2022-05-26 17:02:05,189: None
[DEBUG]2022-05-26 17:02:05,189: None
[DEBUG]2022-05-26 17:02:05,189: None
[DEBUG]2022-05-26 17:02:05,189: None
[DEBUG]2022-05-26 17:02:05,189: None
[DEBUG]2022-05-26 17:02:05,189: None
[DEBUG]2022-05-26 17:02:05,189: None
[DEBUG]2022-05-26 17:02:05,189: None
[DEBUG]2022-05-26 17:02:05,190: None
[DEBUG]2022-05-26 17:02:05,190: None
[DEBUG]2022-05-26 17:02:05,190: None
[DEBUG]2022-05-26 17:02:05,190: None
[DEBUG]2022-05-26 17:02:05,190: None
[DEBUG]2022-05-26 17:02:05,190: None
[DEBUG]2022-05-26 17:02:05,190: None
[DEBUG]2022-05-26 17:02:05,190: None
[DEBUG]2022-05-26 17:02:05,190: None
[DEBUG]2022-05-26 17:02:05,190: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,191: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,192: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,193: None
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,194: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,195: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:05,196: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,745: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:02:21,745: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:02:21,745: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:02:21,748: None
[DEBUG]2022-05-26 17:02:21,748: None
[DEBUG]2022-05-26 17:02:21,748: None
[DEBUG]2022-05-26 17:02:21,748: None
[DEBUG]2022-05-26 17:02:21,748: None
[DEBUG]2022-05-26 17:02:21,749: None
[DEBUG]2022-05-26 17:02:21,749: None
[DEBUG]2022-05-26 17:02:21,749: None
[DEBUG]2022-05-26 17:02:21,749: None
[DEBUG]2022-05-26 17:02:21,750: None
[DEBUG]2022-05-26 17:02:21,750: None
[DEBUG]2022-05-26 17:02:21,750: None
[DEBUG]2022-05-26 17:02:21,750: None
[DEBUG]2022-05-26 17:02:21,750: None
[DEBUG]2022-05-26 17:02:21,751: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:21,751: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:21,751: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:21,751: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:21,751: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:21,751: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:21,751: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:21,751: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:21,751: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:21,751: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:21,751: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:21,751: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:21,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:21,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:21,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:21,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:21,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:21,752: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:21,753: None
[DEBUG]2022-05-26 17:02:21,753: None
[DEBUG]2022-05-26 17:02:21,753: None
[DEBUG]2022-05-26 17:02:21,753: None
[DEBUG]2022-05-26 17:02:21,753: None
[DEBUG]2022-05-26 17:02:21,753: None
[DEBUG]2022-05-26 17:02:21,753: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,754: None
[DEBUG]2022-05-26 17:02:21,755: None
[DEBUG]2022-05-26 17:02:21,755: None
[DEBUG]2022-05-26 17:02:21,755: None
[DEBUG]2022-05-26 17:02:21,755: None
[DEBUG]2022-05-26 17:02:21,755: None
[DEBUG]2022-05-26 17:02:21,755: None
[DEBUG]2022-05-26 17:02:21,755: None
[DEBUG]2022-05-26 17:02:21,755: None
[DEBUG]2022-05-26 17:02:21,755: None
[DEBUG]2022-05-26 17:02:21,755: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,756: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,757: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,758: None
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,759: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:21,760: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,954: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:02:33,954: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:02:33,954: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:02:33,957: None
[DEBUG]2022-05-26 17:02:33,957: None
[DEBUG]2022-05-26 17:02:33,957: None
[DEBUG]2022-05-26 17:02:33,957: None
[DEBUG]2022-05-26 17:02:33,957: None
[DEBUG]2022-05-26 17:02:33,958: None
[DEBUG]2022-05-26 17:02:33,958: None
[DEBUG]2022-05-26 17:02:33,958: None
[DEBUG]2022-05-26 17:02:33,958: None
[DEBUG]2022-05-26 17:02:33,959: None
[DEBUG]2022-05-26 17:02:33,959: None
[DEBUG]2022-05-26 17:02:33,959: None
[DEBUG]2022-05-26 17:02:33,959: None
[DEBUG]2022-05-26 17:02:33,959: None
[DEBUG]2022-05-26 17:02:33,960: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:33,960: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:33,960: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:33,960: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:33,960: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:33,960: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:02:33,960: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:33,960: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:33,960: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:33,960: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:33,960: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:33,960: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:02:33,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:33,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:33,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:33,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:33,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:33,960: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:02:33,961: None
[DEBUG]2022-05-26 17:02:33,961: None
[DEBUG]2022-05-26 17:02:33,961: None
[DEBUG]2022-05-26 17:02:33,961: None
[DEBUG]2022-05-26 17:02:33,961: None
[DEBUG]2022-05-26 17:02:33,961: None
[DEBUG]2022-05-26 17:02:33,961: None
[DEBUG]2022-05-26 17:02:33,962: None
[DEBUG]2022-05-26 17:02:33,962: None
[DEBUG]2022-05-26 17:02:33,962: None
[DEBUG]2022-05-26 17:02:33,962: None
[DEBUG]2022-05-26 17:02:33,962: None
[DEBUG]2022-05-26 17:02:33,962: None
[DEBUG]2022-05-26 17:02:33,962: None
[DEBUG]2022-05-26 17:02:33,962: None
[DEBUG]2022-05-26 17:02:33,963: None
[DEBUG]2022-05-26 17:02:33,963: None
[DEBUG]2022-05-26 17:02:33,963: None
[DEBUG]2022-05-26 17:02:33,963: None
[DEBUG]2022-05-26 17:02:33,963: None
[DEBUG]2022-05-26 17:02:33,963: None
[DEBUG]2022-05-26 17:02:33,963: None
[DEBUG]2022-05-26 17:02:33,963: None
[DEBUG]2022-05-26 17:02:33,963: None
[DEBUG]2022-05-26 17:02:33,964: None
[DEBUG]2022-05-26 17:02:33,964: None
[DEBUG]2022-05-26 17:02:33,964: None
[DEBUG]2022-05-26 17:02:33,964: None
[DEBUG]2022-05-26 17:02:33,964: None
[DEBUG]2022-05-26 17:02:33,964: None
[DEBUG]2022-05-26 17:02:33,964: None
[DEBUG]2022-05-26 17:02:33,964: None
[DEBUG]2022-05-26 17:02:33,964: None
[DEBUG]2022-05-26 17:02:33,964: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,965: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,966: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,967: None
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,968: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:02:33,969: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,158: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:08:05,158: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:08:05,158: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:08:05,160: None
[DEBUG]2022-05-26 17:08:05,160: None
[DEBUG]2022-05-26 17:08:05,161: None
[DEBUG]2022-05-26 17:08:05,161: None
[DEBUG]2022-05-26 17:08:05,161: None
[DEBUG]2022-05-26 17:08:05,162: None
[DEBUG]2022-05-26 17:08:05,162: None
[DEBUG]2022-05-26 17:08:05,162: None
[DEBUG]2022-05-26 17:08:05,162: None
[DEBUG]2022-05-26 17:08:05,163: None
[DEBUG]2022-05-26 17:08:05,163: None
[DEBUG]2022-05-26 17:08:05,163: None
[DEBUG]2022-05-26 17:08:05,163: None
[DEBUG]2022-05-26 17:08:05,163: None
[DEBUG]2022-05-26 17:08:05,163: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:05,163: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:05,163: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:05,163: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:05,163: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:05,163: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:05,164: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:05,164: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:05,164: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:05,164: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:05,164: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:05,164: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:05,164: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:05,164: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:05,164: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:05,164: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:05,164: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:05,164: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:05,165: None
[DEBUG]2022-05-26 17:08:05,165: None
[DEBUG]2022-05-26 17:08:05,165: None
[DEBUG]2022-05-26 17:08:05,165: None
[DEBUG]2022-05-26 17:08:05,165: None
[DEBUG]2022-05-26 17:08:05,165: None
[DEBUG]2022-05-26 17:08:05,165: None
[DEBUG]2022-05-26 17:08:05,166: None
[DEBUG]2022-05-26 17:08:05,166: None
[DEBUG]2022-05-26 17:08:05,166: None
[DEBUG]2022-05-26 17:08:05,166: None
[DEBUG]2022-05-26 17:08:05,166: None
[DEBUG]2022-05-26 17:08:05,166: None
[DEBUG]2022-05-26 17:08:05,166: None
[DEBUG]2022-05-26 17:08:05,166: None
[DEBUG]2022-05-26 17:08:05,167: None
[DEBUG]2022-05-26 17:08:05,167: None
[DEBUG]2022-05-26 17:08:05,167: None
[DEBUG]2022-05-26 17:08:05,167: None
[DEBUG]2022-05-26 17:08:05,167: None
[DEBUG]2022-05-26 17:08:05,167: None
[DEBUG]2022-05-26 17:08:05,167: None
[DEBUG]2022-05-26 17:08:05,167: None
[DEBUG]2022-05-26 17:08:05,167: None
[DEBUG]2022-05-26 17:08:05,168: None
[DEBUG]2022-05-26 17:08:05,168: None
[DEBUG]2022-05-26 17:08:05,168: None
[DEBUG]2022-05-26 17:08:05,168: None
[DEBUG]2022-05-26 17:08:05,168: None
[DEBUG]2022-05-26 17:08:05,168: None
[DEBUG]2022-05-26 17:08:05,168: None
[DEBUG]2022-05-26 17:08:05,168: None
[DEBUG]2022-05-26 17:08:05,168: None
[DEBUG]2022-05-26 17:08:05,168: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,170: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,172: None
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,173: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:05,174: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,943: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:08:43,944: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:08:43,944: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:08:43,946: None
[DEBUG]2022-05-26 17:08:43,946: None
[DEBUG]2022-05-26 17:08:43,947: None
[DEBUG]2022-05-26 17:08:43,947: None
[DEBUG]2022-05-26 17:08:43,947: None
[DEBUG]2022-05-26 17:08:43,948: None
[DEBUG]2022-05-26 17:08:43,948: None
[DEBUG]2022-05-26 17:08:43,948: None
[DEBUG]2022-05-26 17:08:43,948: None
[DEBUG]2022-05-26 17:08:43,949: None
[DEBUG]2022-05-26 17:08:43,949: None
[DEBUG]2022-05-26 17:08:43,949: None
[DEBUG]2022-05-26 17:08:43,949: None
[DEBUG]2022-05-26 17:08:43,949: None
[DEBUG]2022-05-26 17:08:43,950: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:43,950: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:43,950: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:43,950: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:43,950: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:43,950: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:08:43,950: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:43,950: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:43,950: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:43,950: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:43,950: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:43,950: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:08:43,950: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:43,950: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:43,950: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:43,950: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:43,950: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:43,950: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:08:43,951: None
[DEBUG]2022-05-26 17:08:43,951: None
[DEBUG]2022-05-26 17:08:43,951: None
[DEBUG]2022-05-26 17:08:43,951: None
[DEBUG]2022-05-26 17:08:43,951: None
[DEBUG]2022-05-26 17:08:43,951: None
[DEBUG]2022-05-26 17:08:43,951: None
[DEBUG]2022-05-26 17:08:43,952: None
[DEBUG]2022-05-26 17:08:43,952: None
[DEBUG]2022-05-26 17:08:43,952: None
[DEBUG]2022-05-26 17:08:43,952: None
[DEBUG]2022-05-26 17:08:43,952: None
[DEBUG]2022-05-26 17:08:43,952: None
[DEBUG]2022-05-26 17:08:43,952: None
[DEBUG]2022-05-26 17:08:43,952: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,953: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,954: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,955: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,956: None
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,957: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,958: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:08:43,959: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,876: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:12:40,876: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:12:40,876: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:12:40,878: None
[DEBUG]2022-05-26 17:12:40,878: None
[DEBUG]2022-05-26 17:12:40,879: None
[DEBUG]2022-05-26 17:12:40,879: None
[DEBUG]2022-05-26 17:12:40,879: None
[DEBUG]2022-05-26 17:12:40,880: None
[DEBUG]2022-05-26 17:12:40,880: None
[DEBUG]2022-05-26 17:12:40,880: None
[DEBUG]2022-05-26 17:12:40,880: None
[DEBUG]2022-05-26 17:12:40,881: None
[DEBUG]2022-05-26 17:12:40,881: None
[DEBUG]2022-05-26 17:12:40,881: None
[DEBUG]2022-05-26 17:12:40,881: None
[DEBUG]2022-05-26 17:12:40,881: None
[DEBUG]2022-05-26 17:12:40,882: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:12:40,882: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:12:40,882: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:12:40,882: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:12:40,882: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:12:40,882: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:12:40,883: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:12:40,883: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:12:40,883: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:12:40,883: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:12:40,883: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:12:40,883: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:12:40,883: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:12:40,883: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:12:40,883: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:12:40,883: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:12:40,883: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:12:40,883: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:12:40,884: None
[DEBUG]2022-05-26 17:12:40,884: None
[DEBUG]2022-05-26 17:12:40,884: None
[DEBUG]2022-05-26 17:12:40,884: None
[DEBUG]2022-05-26 17:12:40,884: None
[DEBUG]2022-05-26 17:12:40,884: None
[DEBUG]2022-05-26 17:12:40,884: None
[DEBUG]2022-05-26 17:12:40,885: None
[DEBUG]2022-05-26 17:12:40,885: None
[DEBUG]2022-05-26 17:12:40,885: None
[DEBUG]2022-05-26 17:12:40,885: None
[DEBUG]2022-05-26 17:12:40,885: None
[DEBUG]2022-05-26 17:12:40,885: None
[DEBUG]2022-05-26 17:12:40,885: None
[DEBUG]2022-05-26 17:12:40,885: None
[DEBUG]2022-05-26 17:12:40,887: None
[DEBUG]2022-05-26 17:12:40,887: None
[DEBUG]2022-05-26 17:12:40,887: None
[DEBUG]2022-05-26 17:12:40,887: None
[DEBUG]2022-05-26 17:12:40,887: None
[DEBUG]2022-05-26 17:12:40,887: None
[DEBUG]2022-05-26 17:12:40,887: None
[DEBUG]2022-05-26 17:12:40,887: None
[DEBUG]2022-05-26 17:12:40,887: None
[DEBUG]2022-05-26 17:12:40,888: None
[DEBUG]2022-05-26 17:12:40,888: None
[DEBUG]2022-05-26 17:12:40,888: None
[DEBUG]2022-05-26 17:12:40,888: None
[DEBUG]2022-05-26 17:12:40,888: None
[DEBUG]2022-05-26 17:12:40,888: None
[DEBUG]2022-05-26 17:12:40,888: None
[DEBUG]2022-05-26 17:12:40,888: None
[DEBUG]2022-05-26 17:12:40,888: None
[DEBUG]2022-05-26 17:12:40,888: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,889: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,890: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,891: None
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,892: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,893: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,894: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:12:40,895: None
[DEBUG]2022-05-26 17:13:01,499: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:13:01,499: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:13:01,499: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:13:01,501: None
[DEBUG]2022-05-26 17:13:01,501: None
[DEBUG]2022-05-26 17:13:01,502: None
[DEBUG]2022-05-26 17:13:01,502: None
[DEBUG]2022-05-26 17:13:01,502: None
[DEBUG]2022-05-26 17:13:01,503: None
[DEBUG]2022-05-26 17:13:01,503: None
[DEBUG]2022-05-26 17:13:01,503: None
[DEBUG]2022-05-26 17:13:01,503: None
[DEBUG]2022-05-26 17:13:01,504: None
[DEBUG]2022-05-26 17:13:01,504: None
[DEBUG]2022-05-26 17:13:01,504: None
[DEBUG]2022-05-26 17:13:01,504: None
[DEBUG]2022-05-26 17:13:01,504: None
[DEBUG]2022-05-26 17:13:01,504: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:01,504: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:01,504: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:01,504: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:01,504: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:01,504: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:01,505: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:01,505: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:01,505: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:01,505: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:01,505: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:01,505: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:01,505: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:01,505: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:01,505: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:01,505: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:01,505: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:01,505: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:01,506: None
[DEBUG]2022-05-26 17:13:01,506: None
[DEBUG]2022-05-26 17:13:01,506: None
[DEBUG]2022-05-26 17:13:01,506: None
[DEBUG]2022-05-26 17:13:01,506: None
[DEBUG]2022-05-26 17:13:01,506: None
[DEBUG]2022-05-26 17:13:01,506: None
[DEBUG]2022-05-26 17:13:01,507: None
[DEBUG]2022-05-26 17:13:01,507: None
[DEBUG]2022-05-26 17:13:01,507: None
[DEBUG]2022-05-26 17:13:01,507: None
[DEBUG]2022-05-26 17:13:01,507: None
[DEBUG]2022-05-26 17:13:01,507: None
[DEBUG]2022-05-26 17:13:01,507: None
[DEBUG]2022-05-26 17:13:01,507: None
[DEBUG]2022-05-26 17:13:01,508: None
[DEBUG]2022-05-26 17:13:01,508: None
[DEBUG]2022-05-26 17:13:01,508: None
[DEBUG]2022-05-26 17:13:01,508: None
[DEBUG]2022-05-26 17:13:01,508: None
[DEBUG]2022-05-26 17:13:01,508: None
[DEBUG]2022-05-26 17:13:01,508: None
[DEBUG]2022-05-26 17:13:01,508: None
[DEBUG]2022-05-26 17:13:01,508: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,509: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,510: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,511: None
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,512: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,513: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:01,514: None
[DEBUG]2022-05-26 17:13:54,369: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:13:54,369: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:13:54,369: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:13:54,371: None
[DEBUG]2022-05-26 17:13:54,371: None
[DEBUG]2022-05-26 17:13:54,372: None
[DEBUG]2022-05-26 17:13:54,372: None
[DEBUG]2022-05-26 17:13:54,372: None
[DEBUG]2022-05-26 17:13:54,373: None
[DEBUG]2022-05-26 17:13:54,373: None
[DEBUG]2022-05-26 17:13:54,373: None
[DEBUG]2022-05-26 17:13:54,373: None
[DEBUG]2022-05-26 17:13:54,374: None
[DEBUG]2022-05-26 17:13:54,374: None
[DEBUG]2022-05-26 17:13:54,374: None
[DEBUG]2022-05-26 17:13:54,374: None
[DEBUG]2022-05-26 17:13:54,374: None
[DEBUG]2022-05-26 17:13:54,374: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:54,374: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:54,374: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:54,374: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:54,374: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:54,374: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:13:54,375: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:54,375: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:54,375: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:54,375: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:54,375: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:54,375: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:13:54,375: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:54,375: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:54,375: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:54,375: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:54,375: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:54,375: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:13:54,376: None
[DEBUG]2022-05-26 17:13:54,376: None
[DEBUG]2022-05-26 17:13:54,376: None
[DEBUG]2022-05-26 17:13:54,376: None
[DEBUG]2022-05-26 17:13:54,376: None
[DEBUG]2022-05-26 17:13:54,376: None
[DEBUG]2022-05-26 17:13:54,376: None
[DEBUG]2022-05-26 17:13:54,377: None
[DEBUG]2022-05-26 17:13:54,377: None
[DEBUG]2022-05-26 17:13:54,377: None
[DEBUG]2022-05-26 17:13:54,377: None
[DEBUG]2022-05-26 17:13:54,377: None
[DEBUG]2022-05-26 17:13:54,377: None
[DEBUG]2022-05-26 17:13:54,377: None
[DEBUG]2022-05-26 17:13:54,377: None
[DEBUG]2022-05-26 17:13:54,378: None
[DEBUG]2022-05-26 17:13:54,378: None
[DEBUG]2022-05-26 17:13:54,378: None
[DEBUG]2022-05-26 17:13:54,378: None
[DEBUG]2022-05-26 17:13:54,378: None
[DEBUG]2022-05-26 17:13:54,378: None
[DEBUG]2022-05-26 17:13:54,378: None
[DEBUG]2022-05-26 17:13:54,378: None
[DEBUG]2022-05-26 17:13:54,378: None
[DEBUG]2022-05-26 17:13:54,380: None
[DEBUG]2022-05-26 17:13:54,380: None
[DEBUG]2022-05-26 17:13:54,380: None
[DEBUG]2022-05-26 17:13:54,380: None
[DEBUG]2022-05-26 17:13:54,380: None
[DEBUG]2022-05-26 17:13:54,380: None
[DEBUG]2022-05-26 17:13:54,380: None
[DEBUG]2022-05-26 17:13:54,380: None
[DEBUG]2022-05-26 17:13:54,380: None
[DEBUG]2022-05-26 17:13:54,380: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,382: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,383: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,385: None
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,386: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:13:54,388: None
[DEBUG]2022-05-26 17:14:55,932: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:14:55,932: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:14:55,932: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:14:55,934: None
[DEBUG]2022-05-26 17:14:55,934: None
[DEBUG]2022-05-26 17:14:55,935: None
[DEBUG]2022-05-26 17:14:55,935: None
[DEBUG]2022-05-26 17:14:55,935: None
[DEBUG]2022-05-26 17:14:55,936: None
[DEBUG]2022-05-26 17:14:55,936: None
[DEBUG]2022-05-26 17:14:55,936: None
[DEBUG]2022-05-26 17:14:55,936: None
[DEBUG]2022-05-26 17:14:55,936: None
[DEBUG]2022-05-26 17:14:55,936: None
[DEBUG]2022-05-26 17:14:55,936: None
[DEBUG]2022-05-26 17:14:55,936: None
[DEBUG]2022-05-26 17:14:55,936: None
[DEBUG]2022-05-26 17:14:55,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:14:55,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:14:55,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:14:55,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:14:55,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:14:55,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:14:55,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:14:55,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:14:55,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:14:55,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:14:55,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:14:55,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:14:55,938: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:14:55,938: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:14:55,938: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:14:55,938: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:14:55,938: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:14:55,938: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:14:55,939: None
[DEBUG]2022-05-26 17:14:55,939: None
[DEBUG]2022-05-26 17:14:55,939: None
[DEBUG]2022-05-26 17:14:55,939: None
[DEBUG]2022-05-26 17:14:55,939: None
[DEBUG]2022-05-26 17:14:55,939: None
[DEBUG]2022-05-26 17:14:55,939: None
[DEBUG]2022-05-26 17:14:55,940: None
[DEBUG]2022-05-26 17:14:55,940: None
[DEBUG]2022-05-26 17:14:55,940: None
[DEBUG]2022-05-26 17:14:55,940: None
[DEBUG]2022-05-26 17:14:55,940: None
[DEBUG]2022-05-26 17:14:55,940: None
[DEBUG]2022-05-26 17:14:55,940: None
[DEBUG]2022-05-26 17:14:55,940: None
[DEBUG]2022-05-26 17:14:55,941: None
[DEBUG]2022-05-26 17:14:55,941: None
[DEBUG]2022-05-26 17:14:55,941: None
[DEBUG]2022-05-26 17:14:55,941: None
[DEBUG]2022-05-26 17:14:55,941: None
[DEBUG]2022-05-26 17:14:55,941: None
[DEBUG]2022-05-26 17:14:55,941: None
[DEBUG]2022-05-26 17:14:55,941: None
[DEBUG]2022-05-26 17:14:55,941: None
[DEBUG]2022-05-26 17:14:55,942: None
[DEBUG]2022-05-26 17:14:55,942: None
[DEBUG]2022-05-26 17:14:55,942: None
[DEBUG]2022-05-26 17:14:55,942: None
[DEBUG]2022-05-26 17:14:55,942: None
[DEBUG]2022-05-26 17:14:55,942: None
[DEBUG]2022-05-26 17:14:55,942: None
[DEBUG]2022-05-26 17:14:55,942: None
[DEBUG]2022-05-26 17:14:55,942: None
[DEBUG]2022-05-26 17:14:55,942: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,943: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,945: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,946: None
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,948: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,949: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:14:55,950: None
[DEBUG]2022-05-26 17:15:55,965: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:15:55,965: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:15:55,965: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:15:55,967: None
[DEBUG]2022-05-26 17:15:55,967: None
[DEBUG]2022-05-26 17:15:55,968: None
[DEBUG]2022-05-26 17:15:55,968: None
[DEBUG]2022-05-26 17:15:55,968: None
[DEBUG]2022-05-26 17:15:55,969: None
[DEBUG]2022-05-26 17:15:55,969: None
[DEBUG]2022-05-26 17:15:55,969: None
[DEBUG]2022-05-26 17:15:55,969: None
[DEBUG]2022-05-26 17:15:55,970: None
[DEBUG]2022-05-26 17:15:55,970: None
[DEBUG]2022-05-26 17:15:55,970: None
[DEBUG]2022-05-26 17:15:55,970: None
[DEBUG]2022-05-26 17:15:55,970: None
[DEBUG]2022-05-26 17:15:55,971: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:15:55,971: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:15:55,971: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:15:55,971: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:15:55,971: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:15:55,971: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:15:55,972: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:15:55,972: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:15:55,972: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:15:55,972: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:15:55,972: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:15:55,972: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:15:55,972: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:15:55,972: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:15:55,972: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:15:55,972: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:15:55,972: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:15:55,972: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:15:55,973: None
[DEBUG]2022-05-26 17:15:55,973: None
[DEBUG]2022-05-26 17:15:55,973: None
[DEBUG]2022-05-26 17:15:55,973: None
[DEBUG]2022-05-26 17:15:55,973: None
[DEBUG]2022-05-26 17:15:55,973: None
[DEBUG]2022-05-26 17:15:55,973: None
[DEBUG]2022-05-26 17:15:55,974: None
[DEBUG]2022-05-26 17:15:55,974: None
[DEBUG]2022-05-26 17:15:55,974: None
[DEBUG]2022-05-26 17:15:55,974: None
[DEBUG]2022-05-26 17:15:55,974: None
[DEBUG]2022-05-26 17:15:55,974: None
[DEBUG]2022-05-26 17:15:55,974: None
[DEBUG]2022-05-26 17:15:55,974: None
[DEBUG]2022-05-26 17:15:55,975: None
[DEBUG]2022-05-26 17:15:55,975: None
[DEBUG]2022-05-26 17:15:55,975: None
[DEBUG]2022-05-26 17:15:55,975: None
[DEBUG]2022-05-26 17:15:55,975: None
[DEBUG]2022-05-26 17:15:55,975: None
[DEBUG]2022-05-26 17:15:55,975: None
[DEBUG]2022-05-26 17:15:55,975: None
[DEBUG]2022-05-26 17:15:55,975: None
[DEBUG]2022-05-26 17:15:55,976: None
[DEBUG]2022-05-26 17:15:55,976: None
[DEBUG]2022-05-26 17:15:55,976: None
[DEBUG]2022-05-26 17:15:55,976: None
[DEBUG]2022-05-26 17:15:55,976: None
[DEBUG]2022-05-26 17:15:55,976: None
[DEBUG]2022-05-26 17:15:55,976: None
[DEBUG]2022-05-26 17:15:55,976: None
[DEBUG]2022-05-26 17:15:55,976: None
[DEBUG]2022-05-26 17:15:55,976: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,978: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,979: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,980: None
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,982: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,983: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,984: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:15:55,986: None
[DEBUG]2022-05-26 17:17:45,582: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:17:45,583: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:17:45,583: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:17:45,585: None
[DEBUG]2022-05-26 17:17:45,585: None
[DEBUG]2022-05-26 17:17:45,585: None
[DEBUG]2022-05-26 17:17:45,585: None
[DEBUG]2022-05-26 17:17:45,585: None
[DEBUG]2022-05-26 17:17:45,586: None
[DEBUG]2022-05-26 17:17:45,586: None
[DEBUG]2022-05-26 17:17:45,586: None
[DEBUG]2022-05-26 17:17:45,586: None
[DEBUG]2022-05-26 17:17:45,587: None
[DEBUG]2022-05-26 17:17:45,587: None
[DEBUG]2022-05-26 17:17:45,587: None
[DEBUG]2022-05-26 17:17:45,587: None
[DEBUG]2022-05-26 17:17:45,587: None
[DEBUG]2022-05-26 17:17:45,587: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:17:45,587: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:17:45,587: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:17:45,587: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:17:45,587: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:17:45,587: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:17:45,588: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:17:45,588: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:17:45,588: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:17:45,588: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:17:45,588: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:17:45,588: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:17:45,588: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:17:45,588: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:17:45,588: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:17:45,588: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:17:45,588: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:17:45,588: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:17:45,589: None
[DEBUG]2022-05-26 17:17:45,589: None
[DEBUG]2022-05-26 17:17:45,589: None
[DEBUG]2022-05-26 17:17:45,589: None
[DEBUG]2022-05-26 17:17:45,589: None
[DEBUG]2022-05-26 17:17:45,589: None
[DEBUG]2022-05-26 17:17:45,589: None
[DEBUG]2022-05-26 17:17:45,590: None
[DEBUG]2022-05-26 17:17:45,590: None
[DEBUG]2022-05-26 17:17:45,590: None
[DEBUG]2022-05-26 17:17:45,590: None
[DEBUG]2022-05-26 17:17:45,590: None
[DEBUG]2022-05-26 17:17:45,590: None
[DEBUG]2022-05-26 17:17:45,590: None
[DEBUG]2022-05-26 17:17:45,590: None
[DEBUG]2022-05-26 17:17:45,591: None
[DEBUG]2022-05-26 17:17:45,591: None
[DEBUG]2022-05-26 17:17:45,591: None
[DEBUG]2022-05-26 17:17:45,591: None
[DEBUG]2022-05-26 17:17:45,591: None
[DEBUG]2022-05-26 17:17:45,591: None
[DEBUG]2022-05-26 17:17:45,591: None
[DEBUG]2022-05-26 17:17:45,591: None
[DEBUG]2022-05-26 17:17:45,591: None
[DEBUG]2022-05-26 17:17:45,592: None
[DEBUG]2022-05-26 17:17:45,592: None
[DEBUG]2022-05-26 17:17:45,592: None
[DEBUG]2022-05-26 17:17:45,592: None
[DEBUG]2022-05-26 17:17:45,592: None
[DEBUG]2022-05-26 17:17:45,592: None
[DEBUG]2022-05-26 17:17:45,592: None
[DEBUG]2022-05-26 17:17:45,592: None
[DEBUG]2022-05-26 17:17:45,592: None
[DEBUG]2022-05-26 17:17:45,592: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,593: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,594: None
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,595: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,596: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,597: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:17:45,598: None
[DEBUG]2022-05-26 17:18:35,178: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:18:35,178: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:18:35,178: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:18:35,180: None
[DEBUG]2022-05-26 17:18:35,180: None
[DEBUG]2022-05-26 17:18:35,181: None
[DEBUG]2022-05-26 17:18:35,181: None
[DEBUG]2022-05-26 17:18:35,181: None
[DEBUG]2022-05-26 17:18:35,182: None
[DEBUG]2022-05-26 17:18:35,182: None
[DEBUG]2022-05-26 17:18:35,182: None
[DEBUG]2022-05-26 17:18:35,182: None
[DEBUG]2022-05-26 17:18:35,182: None
[DEBUG]2022-05-26 17:18:35,182: None
[DEBUG]2022-05-26 17:18:35,182: None
[DEBUG]2022-05-26 17:18:35,182: None
[DEBUG]2022-05-26 17:18:35,182: None
[DEBUG]2022-05-26 17:18:35,183: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:18:35,183: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:18:35,183: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:18:35,183: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:18:35,183: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:18:35,183: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:18:35,183: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:18:35,183: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:18:35,183: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:18:35,183: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:18:35,183: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:18:35,183: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:18:35,183: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:18:35,183: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:18:35,183: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:18:35,183: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:18:35,183: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:18:35,183: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:18:35,184: None
[DEBUG]2022-05-26 17:18:35,184: None
[DEBUG]2022-05-26 17:18:35,184: None
[DEBUG]2022-05-26 17:18:35,184: None
[DEBUG]2022-05-26 17:18:35,184: None
[DEBUG]2022-05-26 17:18:35,184: None
[DEBUG]2022-05-26 17:18:35,184: None
[DEBUG]2022-05-26 17:18:35,185: None
[DEBUG]2022-05-26 17:18:35,185: None
[DEBUG]2022-05-26 17:18:35,185: None
[DEBUG]2022-05-26 17:18:35,185: None
[DEBUG]2022-05-26 17:18:35,185: None
[DEBUG]2022-05-26 17:18:35,185: None
[DEBUG]2022-05-26 17:18:35,185: None
[DEBUG]2022-05-26 17:18:35,185: None
[DEBUG]2022-05-26 17:18:35,186: None
[DEBUG]2022-05-26 17:18:35,186: None
[DEBUG]2022-05-26 17:18:35,186: None
[DEBUG]2022-05-26 17:18:35,186: None
[DEBUG]2022-05-26 17:18:35,186: None
[DEBUG]2022-05-26 17:18:35,186: None
[DEBUG]2022-05-26 17:18:35,186: None
[DEBUG]2022-05-26 17:18:35,186: None
[DEBUG]2022-05-26 17:18:35,186: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,187: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,188: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,189: None
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,191: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,192: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,193: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,195: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,196: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,197: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:18:35,198: None
[DEBUG]2022-05-26 17:20:24,215: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:20:24,215: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:20:24,215: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:20:24,219: None
[DEBUG]2022-05-26 17:20:24,219: None
[DEBUG]2022-05-26 17:20:24,220: None
[DEBUG]2022-05-26 17:20:24,220: None
[DEBUG]2022-05-26 17:20:24,220: None
[DEBUG]2022-05-26 17:20:24,221: None
[DEBUG]2022-05-26 17:20:24,221: None
[DEBUG]2022-05-26 17:20:24,221: None
[DEBUG]2022-05-26 17:20:24,221: None
[DEBUG]2022-05-26 17:20:24,221: None
[DEBUG]2022-05-26 17:20:24,221: None
[DEBUG]2022-05-26 17:20:24,221: None
[DEBUG]2022-05-26 17:20:24,221: None
[DEBUG]2022-05-26 17:20:24,221: None
[DEBUG]2022-05-26 17:20:24,222: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:20:24,222: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:20:24,222: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:20:24,222: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:20:24,222: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:20:24,222: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:20:24,223: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:20:24,223: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:20:24,223: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:20:24,223: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:20:24,223: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:20:24,223: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:20:24,223: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:20:24,223: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:20:24,223: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:20:24,223: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:20:24,223: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:20:24,223: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:20:24,225: None
[DEBUG]2022-05-26 17:20:24,225: None
[DEBUG]2022-05-26 17:20:24,225: None
[DEBUG]2022-05-26 17:20:24,225: None
[DEBUG]2022-05-26 17:20:24,225: None
[DEBUG]2022-05-26 17:20:24,225: None
[DEBUG]2022-05-26 17:20:24,225: None
[DEBUG]2022-05-26 17:20:24,226: None
[DEBUG]2022-05-26 17:20:24,226: None
[DEBUG]2022-05-26 17:20:24,226: None
[DEBUG]2022-05-26 17:20:24,226: None
[DEBUG]2022-05-26 17:20:24,226: None
[DEBUG]2022-05-26 17:20:24,226: None
[DEBUG]2022-05-26 17:20:24,226: None
[DEBUG]2022-05-26 17:20:24,226: None
[DEBUG]2022-05-26 17:20:24,228: None
[DEBUG]2022-05-26 17:20:24,228: None
[DEBUG]2022-05-26 17:20:24,228: None
[DEBUG]2022-05-26 17:20:24,228: None
[DEBUG]2022-05-26 17:20:24,228: None
[DEBUG]2022-05-26 17:20:24,228: None
[DEBUG]2022-05-26 17:20:24,228: None
[DEBUG]2022-05-26 17:20:24,228: None
[DEBUG]2022-05-26 17:20:24,228: None
[DEBUG]2022-05-26 17:20:24,229: None
[DEBUG]2022-05-26 17:20:24,229: None
[DEBUG]2022-05-26 17:20:24,229: None
[DEBUG]2022-05-26 17:20:24,229: None
[DEBUG]2022-05-26 17:20:24,229: None
[DEBUG]2022-05-26 17:20:24,229: None
[DEBUG]2022-05-26 17:20:24,229: None
[DEBUG]2022-05-26 17:20:24,229: None
[DEBUG]2022-05-26 17:20:24,229: None
[DEBUG]2022-05-26 17:20:24,229: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,230: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,231: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,233: None
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,234: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,235: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,236: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,237: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,239: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,241: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,242: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,243: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,245: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:20:24,246: None
[DEBUG]2022-05-26 17:21:44,611: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:21:44,612: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:21:44,612: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:21:44,614: None
[DEBUG]2022-05-26 17:21:44,614: None
[DEBUG]2022-05-26 17:21:44,614: None
[DEBUG]2022-05-26 17:21:44,614: None
[DEBUG]2022-05-26 17:21:44,614: None
[DEBUG]2022-05-26 17:21:44,615: None
[DEBUG]2022-05-26 17:21:44,615: None
[DEBUG]2022-05-26 17:21:44,615: None
[DEBUG]2022-05-26 17:21:44,615: None
[DEBUG]2022-05-26 17:21:44,616: None
[DEBUG]2022-05-26 17:21:44,616: None
[DEBUG]2022-05-26 17:21:44,616: None
[DEBUG]2022-05-26 17:21:44,616: None
[DEBUG]2022-05-26 17:21:44,616: None
[DEBUG]2022-05-26 17:21:44,616: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:21:44,616: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:21:44,616: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:21:44,616: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:21:44,616: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:21:44,616: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:21:44,617: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:21:44,617: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:21:44,617: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:21:44,617: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:21:44,617: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:21:44,617: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:21:44,617: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:21:44,617: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:21:44,617: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:21:44,617: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:21:44,617: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:21:44,617: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,618: None
[DEBUG]2022-05-26 17:21:44,619: None
[DEBUG]2022-05-26 17:21:44,619: None
[DEBUG]2022-05-26 17:21:44,619: None
[DEBUG]2022-05-26 17:21:44,619: None
[DEBUG]2022-05-26 17:21:44,619: None
[DEBUG]2022-05-26 17:21:44,619: None
[DEBUG]2022-05-26 17:21:44,619: None
[DEBUG]2022-05-26 17:21:44,619: None
[DEBUG]2022-05-26 17:21:44,619: None
[DEBUG]2022-05-26 17:21:44,620: None
[DEBUG]2022-05-26 17:21:44,620: None
[DEBUG]2022-05-26 17:21:44,620: None
[DEBUG]2022-05-26 17:21:44,620: None
[DEBUG]2022-05-26 17:21:44,620: None
[DEBUG]2022-05-26 17:21:44,620: None
[DEBUG]2022-05-26 17:21:44,620: None
[DEBUG]2022-05-26 17:21:44,620: None
[DEBUG]2022-05-26 17:21:44,620: None
[DEBUG]2022-05-26 17:21:44,620: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,621: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,622: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,623: None
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,624: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,625: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,626: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,627: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,628: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,629: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,630: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,632: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:21:44,634: None
[DEBUG]2022-05-26 17:22:28,289: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:22:28,289: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:22:28,289: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:22:28,292: None
[DEBUG]2022-05-26 17:22:28,292: None
[DEBUG]2022-05-26 17:22:28,293: None
[DEBUG]2022-05-26 17:22:28,293: None
[DEBUG]2022-05-26 17:22:28,293: None
[DEBUG]2022-05-26 17:22:28,294: None
[DEBUG]2022-05-26 17:22:28,294: None
[DEBUG]2022-05-26 17:22:28,294: None
[DEBUG]2022-05-26 17:22:28,294: None
[DEBUG]2022-05-26 17:22:28,295: None
[DEBUG]2022-05-26 17:22:28,295: None
[DEBUG]2022-05-26 17:22:28,295: None
[DEBUG]2022-05-26 17:22:28,295: None
[DEBUG]2022-05-26 17:22:28,295: None
[DEBUG]2022-05-26 17:22:28,296: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:28,296: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:28,296: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:28,296: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:28,296: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:28,296: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:28,297: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:28,297: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:28,297: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:28,297: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:28,297: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:28,297: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:28,297: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:28,297: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:28,297: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:28,297: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:28,297: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:28,297: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:28,299: None
[DEBUG]2022-05-26 17:22:28,299: None
[DEBUG]2022-05-26 17:22:28,299: None
[DEBUG]2022-05-26 17:22:28,299: None
[DEBUG]2022-05-26 17:22:28,299: None
[DEBUG]2022-05-26 17:22:28,299: None
[DEBUG]2022-05-26 17:22:28,299: None
[DEBUG]2022-05-26 17:22:28,300: None
[DEBUG]2022-05-26 17:22:28,300: None
[DEBUG]2022-05-26 17:22:28,300: None
[DEBUG]2022-05-26 17:22:28,300: None
[DEBUG]2022-05-26 17:22:28,300: None
[DEBUG]2022-05-26 17:22:28,300: None
[DEBUG]2022-05-26 17:22:28,300: None
[DEBUG]2022-05-26 17:22:28,300: None
[DEBUG]2022-05-26 17:22:28,301: None
[DEBUG]2022-05-26 17:22:28,301: None
[DEBUG]2022-05-26 17:22:28,301: None
[DEBUG]2022-05-26 17:22:28,301: None
[DEBUG]2022-05-26 17:22:28,301: None
[DEBUG]2022-05-26 17:22:28,301: None
[DEBUG]2022-05-26 17:22:28,301: None
[DEBUG]2022-05-26 17:22:28,301: None
[DEBUG]2022-05-26 17:22:28,301: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,302: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,304: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,305: None
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,306: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,309: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,310: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,312: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,314: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,315: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,316: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,317: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:28,319: None
[DEBUG]2022-05-26 17:22:59,565: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:22:59,565: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:22:59,565: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:22:59,567: None
[DEBUG]2022-05-26 17:22:59,567: None
[DEBUG]2022-05-26 17:22:59,568: None
[DEBUG]2022-05-26 17:22:59,568: None
[DEBUG]2022-05-26 17:22:59,568: None
[DEBUG]2022-05-26 17:22:59,569: None
[DEBUG]2022-05-26 17:22:59,569: None
[DEBUG]2022-05-26 17:22:59,569: None
[DEBUG]2022-05-26 17:22:59,569: None
[DEBUG]2022-05-26 17:22:59,569: None
[DEBUG]2022-05-26 17:22:59,569: None
[DEBUG]2022-05-26 17:22:59,569: None
[DEBUG]2022-05-26 17:22:59,569: None
[DEBUG]2022-05-26 17:22:59,569: None
[DEBUG]2022-05-26 17:22:59,570: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:59,570: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:59,570: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:59,570: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:59,570: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:59,570: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:22:59,571: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:59,571: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:59,571: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:59,571: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:59,571: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:59,571: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:22:59,571: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:59,571: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:59,571: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:59,571: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:59,571: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:59,571: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:22:59,572: None
[DEBUG]2022-05-26 17:22:59,572: None
[DEBUG]2022-05-26 17:22:59,572: None
[DEBUG]2022-05-26 17:22:59,572: None
[DEBUG]2022-05-26 17:22:59,572: None
[DEBUG]2022-05-26 17:22:59,572: None
[DEBUG]2022-05-26 17:22:59,572: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,573: None
[DEBUG]2022-05-26 17:22:59,574: None
[DEBUG]2022-05-26 17:22:59,574: None
[DEBUG]2022-05-26 17:22:59,574: None
[DEBUG]2022-05-26 17:22:59,574: None
[DEBUG]2022-05-26 17:22:59,574: None
[DEBUG]2022-05-26 17:22:59,574: None
[DEBUG]2022-05-26 17:22:59,574: None
[DEBUG]2022-05-26 17:22:59,574: None
[DEBUG]2022-05-26 17:22:59,574: None
[DEBUG]2022-05-26 17:22:59,574: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,575: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,576: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,577: None
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,578: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: ['InitPSubState', 'SubFirstState']
[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,579: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
};


[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,580: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,581: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,582: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,583: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,584: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,586: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:22:59,587: None
[DEBUG]2022-05-26 17:24:02,144: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:24:02,144: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:24:02,144: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:24:02,147: None
[DEBUG]2022-05-26 17:24:02,147: None
[DEBUG]2022-05-26 17:24:02,147: None
[DEBUG]2022-05-26 17:24:02,147: None
[DEBUG]2022-05-26 17:24:02,147: None
[DEBUG]2022-05-26 17:24:02,148: None
[DEBUG]2022-05-26 17:24:02,148: None
[DEBUG]2022-05-26 17:24:02,148: None
[DEBUG]2022-05-26 17:24:02,148: None
[DEBUG]2022-05-26 17:24:02,148: None
[DEBUG]2022-05-26 17:24:02,148: None
[DEBUG]2022-05-26 17:24:02,148: None
[DEBUG]2022-05-26 17:24:02,148: None
[DEBUG]2022-05-26 17:24:02,148: None
[DEBUG]2022-05-26 17:24:02,149: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:02,149: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:02,149: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:02,149: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:02,149: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:02,149: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:02,150: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:02,150: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:02,150: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:02,150: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:02,150: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:02,150: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:02,150: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:02,150: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:02,150: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:02,150: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:02,150: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:02,150: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:02,151: None
[DEBUG]2022-05-26 17:24:02,151: None
[DEBUG]2022-05-26 17:24:02,151: None
[DEBUG]2022-05-26 17:24:02,151: None
[DEBUG]2022-05-26 17:24:02,151: None
[DEBUG]2022-05-26 17:24:02,151: None
[DEBUG]2022-05-26 17:24:02,151: None
[DEBUG]2022-05-26 17:24:02,152: None
[DEBUG]2022-05-26 17:24:02,152: None
[DEBUG]2022-05-26 17:24:02,152: None
[DEBUG]2022-05-26 17:24:02,152: None
[DEBUG]2022-05-26 17:24:02,152: None
[DEBUG]2022-05-26 17:24:02,152: None
[DEBUG]2022-05-26 17:24:02,152: None
[DEBUG]2022-05-26 17:24:02,152: None
[DEBUG]2022-05-26 17:24:02,153: None
[DEBUG]2022-05-26 17:24:02,153: None
[DEBUG]2022-05-26 17:24:02,153: None
[DEBUG]2022-05-26 17:24:02,153: None
[DEBUG]2022-05-26 17:24:02,153: None
[DEBUG]2022-05-26 17:24:02,153: None
[DEBUG]2022-05-26 17:24:02,153: None
[DEBUG]2022-05-26 17:24:02,153: None
[DEBUG]2022-05-26 17:24:02,153: None
[DEBUG]2022-05-26 17:24:02,154: None
[DEBUG]2022-05-26 17:24:02,154: None
[DEBUG]2022-05-26 17:24:02,154: None
[DEBUG]2022-05-26 17:24:02,154: None
[DEBUG]2022-05-26 17:24:02,154: None
[DEBUG]2022-05-26 17:24:02,154: None
[DEBUG]2022-05-26 17:24:02,154: None
[DEBUG]2022-05-26 17:24:02,154: None
[DEBUG]2022-05-26 17:24:02,154: None
[DEBUG]2022-05-26 17:24:02,154: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,155: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,156: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,157: None
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,158: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,159: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,161: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,162: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,164: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,165: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,167: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,168: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:02,171: None
[DEBUG]2022-05-26 17:24:15,488: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:24:15,488: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:24:15,488: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:24:15,491: None
[DEBUG]2022-05-26 17:24:15,491: None
[DEBUG]2022-05-26 17:24:15,491: None
[DEBUG]2022-05-26 17:24:15,491: None
[DEBUG]2022-05-26 17:24:15,491: None
[DEBUG]2022-05-26 17:24:15,492: None
[DEBUG]2022-05-26 17:24:15,492: None
[DEBUG]2022-05-26 17:24:15,492: None
[DEBUG]2022-05-26 17:24:15,492: None
[DEBUG]2022-05-26 17:24:15,493: None
[DEBUG]2022-05-26 17:24:15,493: None
[DEBUG]2022-05-26 17:24:15,493: None
[DEBUG]2022-05-26 17:24:15,493: None
[DEBUG]2022-05-26 17:24:15,493: None
[DEBUG]2022-05-26 17:24:15,493: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:15,493: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:15,493: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:15,493: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:15,493: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:15,493: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:24:15,494: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:15,494: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:15,494: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:15,494: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:15,494: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:15,494: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:24:15,494: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:15,494: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:15,494: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:15,494: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:15,494: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:15,494: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:24:15,495: None
[DEBUG]2022-05-26 17:24:15,495: None
[DEBUG]2022-05-26 17:24:15,495: None
[DEBUG]2022-05-26 17:24:15,495: None
[DEBUG]2022-05-26 17:24:15,495: None
[DEBUG]2022-05-26 17:24:15,495: None
[DEBUG]2022-05-26 17:24:15,495: None
[DEBUG]2022-05-26 17:24:15,496: None
[DEBUG]2022-05-26 17:24:15,496: None
[DEBUG]2022-05-26 17:24:15,496: None
[DEBUG]2022-05-26 17:24:15,496: None
[DEBUG]2022-05-26 17:24:15,496: None
[DEBUG]2022-05-26 17:24:15,496: None
[DEBUG]2022-05-26 17:24:15,496: None
[DEBUG]2022-05-26 17:24:15,496: None
[DEBUG]2022-05-26 17:24:15,497: None
[DEBUG]2022-05-26 17:24:15,497: None
[DEBUG]2022-05-26 17:24:15,497: None
[DEBUG]2022-05-26 17:24:15,497: None
[DEBUG]2022-05-26 17:24:15,497: None
[DEBUG]2022-05-26 17:24:15,497: None
[DEBUG]2022-05-26 17:24:15,497: None
[DEBUG]2022-05-26 17:24:15,497: None
[DEBUG]2022-05-26 17:24:15,497: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,498: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,499: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,500: None
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,502: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,503: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,504: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,505: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,507: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,508: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,509: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,511: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:24:15,512: None
[DEBUG]2022-05-26 17:26:12,970: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:26:12,971: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:26:12,971: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:26:12,973: None
[DEBUG]2022-05-26 17:26:12,973: None
[DEBUG]2022-05-26 17:26:12,973: None
[DEBUG]2022-05-26 17:26:12,973: None
[DEBUG]2022-05-26 17:26:12,973: None
[DEBUG]2022-05-26 17:26:12,974: None
[DEBUG]2022-05-26 17:26:12,974: None
[DEBUG]2022-05-26 17:26:12,974: None
[DEBUG]2022-05-26 17:26:12,974: None
[DEBUG]2022-05-26 17:26:12,975: None
[DEBUG]2022-05-26 17:26:12,975: None
[DEBUG]2022-05-26 17:26:12,975: None
[DEBUG]2022-05-26 17:26:12,975: None
[DEBUG]2022-05-26 17:26:12,975: None
[DEBUG]2022-05-26 17:26:12,975: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:26:12,975: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:26:12,975: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:26:12,975: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:26:12,975: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:26:12,975: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:26:12,976: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:26:12,976: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:26:12,976: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:26:12,976: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:26:12,976: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:26:12,976: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:26:12,976: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:26:12,976: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:26:12,976: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:26:12,976: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:26:12,976: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:26:12,976: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:26:12,977: None
[DEBUG]2022-05-26 17:26:12,977: None
[DEBUG]2022-05-26 17:26:12,977: None
[DEBUG]2022-05-26 17:26:12,977: None
[DEBUG]2022-05-26 17:26:12,977: None
[DEBUG]2022-05-26 17:26:12,977: None
[DEBUG]2022-05-26 17:26:12,977: None
[DEBUG]2022-05-26 17:26:12,979: None
[DEBUG]2022-05-26 17:26:12,979: None
[DEBUG]2022-05-26 17:26:12,979: None
[DEBUG]2022-05-26 17:26:12,979: None
[DEBUG]2022-05-26 17:26:12,979: None
[DEBUG]2022-05-26 17:26:12,979: None
[DEBUG]2022-05-26 17:26:12,979: None
[DEBUG]2022-05-26 17:26:12,979: None
[DEBUG]2022-05-26 17:26:12,980: None
[DEBUG]2022-05-26 17:26:12,980: None
[DEBUG]2022-05-26 17:26:12,980: None
[DEBUG]2022-05-26 17:26:12,980: None
[DEBUG]2022-05-26 17:26:12,980: None
[DEBUG]2022-05-26 17:26:12,980: None
[DEBUG]2022-05-26 17:26:12,980: None
[DEBUG]2022-05-26 17:26:12,980: None
[DEBUG]2022-05-26 17:26:12,980: None
[DEBUG]2022-05-26 17:26:12,981: None
[DEBUG]2022-05-26 17:26:12,981: None
[DEBUG]2022-05-26 17:26:12,981: None
[DEBUG]2022-05-26 17:26:12,981: None
[DEBUG]2022-05-26 17:26:12,981: None
[DEBUG]2022-05-26 17:26:12,981: None
[DEBUG]2022-05-26 17:26:12,981: None
[DEBUG]2022-05-26 17:26:12,981: None
[DEBUG]2022-05-26 17:26:12,981: None
[DEBUG]2022-05-26 17:26:12,981: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,982: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,984: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,988: None
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: <re.Match object; span=(1564, 1637), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,989: ['InitPSubState', 'IdleBumpState']
[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,990: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
};


[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,991: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,992: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,994: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,995: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,997: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:12,998: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:26:13,000: None
[DEBUG]2022-05-26 17:28:40,021: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:28:40,021: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:28:40,021: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:28:40,023: None
[DEBUG]2022-05-26 17:28:40,023: None
[DEBUG]2022-05-26 17:28:40,024: None
[DEBUG]2022-05-26 17:28:40,024: None
[DEBUG]2022-05-26 17:28:40,024: None
[DEBUG]2022-05-26 17:28:40,025: None
[DEBUG]2022-05-26 17:28:40,025: None
[DEBUG]2022-05-26 17:28:40,025: None
[DEBUG]2022-05-26 17:28:40,025: None
[DEBUG]2022-05-26 17:28:40,025: None
[DEBUG]2022-05-26 17:28:40,025: None
[DEBUG]2022-05-26 17:28:40,025: None
[DEBUG]2022-05-26 17:28:40,025: None
[DEBUG]2022-05-26 17:28:40,025: None
[DEBUG]2022-05-26 17:28:40,026: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:28:40,026: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:28:40,026: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:28:40,026: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:28:40,026: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:28:40,026: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:28:40,026: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:28:40,026: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:28:40,026: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:28:40,026: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:28:40,026: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:28:40,026: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:28:40,027: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:28:40,027: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:28:40,027: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:28:40,027: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:28:40,027: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:28:40,027: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:28:40,027: None
[DEBUG]2022-05-26 17:28:40,027: None
[DEBUG]2022-05-26 17:28:40,027: None
[DEBUG]2022-05-26 17:28:40,027: None
[DEBUG]2022-05-26 17:28:40,027: None
[DEBUG]2022-05-26 17:28:40,027: None
[DEBUG]2022-05-26 17:28:40,027: None
[DEBUG]2022-05-26 17:28:40,028: None
[DEBUG]2022-05-26 17:28:40,028: None
[DEBUG]2022-05-26 17:28:40,028: None
[DEBUG]2022-05-26 17:28:40,028: None
[DEBUG]2022-05-26 17:28:40,028: None
[DEBUG]2022-05-26 17:28:40,028: None
[DEBUG]2022-05-26 17:28:40,028: None
[DEBUG]2022-05-26 17:28:40,028: None
[DEBUG]2022-05-26 17:28:40,029: None
[DEBUG]2022-05-26 17:28:40,029: None
[DEBUG]2022-05-26 17:28:40,029: None
[DEBUG]2022-05-26 17:28:40,029: None
[DEBUG]2022-05-26 17:28:40,029: None
[DEBUG]2022-05-26 17:28:40,029: None
[DEBUG]2022-05-26 17:28:40,029: None
[DEBUG]2022-05-26 17:28:40,029: None
[DEBUG]2022-05-26 17:28:40,029: None
[DEBUG]2022-05-26 17:28:40,030: None
[DEBUG]2022-05-26 17:28:40,030: None
[DEBUG]2022-05-26 17:28:40,030: None
[DEBUG]2022-05-26 17:28:40,030: None
[DEBUG]2022-05-26 17:28:40,030: None
[DEBUG]2022-05-26 17:28:40,030: None
[DEBUG]2022-05-26 17:28:40,030: None
[DEBUG]2022-05-26 17:28:40,030: None
[DEBUG]2022-05-26 17:28:40,030: None
[DEBUG]2022-05-26 17:28:40,030: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,031: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,032: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,033: None
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: <re.Match object; span=(1564, 1666), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,034: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,035: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,037: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,038: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,039: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,040: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,041: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,043: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:28:40,044: None
[DEBUG]2022-05-26 17:29:05,532: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:29:05,532: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:29:05,532: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:29:05,534: None
[DEBUG]2022-05-26 17:29:05,534: None
[DEBUG]2022-05-26 17:29:05,535: None
[DEBUG]2022-05-26 17:29:05,535: None
[DEBUG]2022-05-26 17:29:05,535: None
[DEBUG]2022-05-26 17:29:05,535: None
[DEBUG]2022-05-26 17:29:05,535: None
[DEBUG]2022-05-26 17:29:05,535: None
[DEBUG]2022-05-26 17:29:05,535: None
[DEBUG]2022-05-26 17:29:05,536: None
[DEBUG]2022-05-26 17:29:05,536: None
[DEBUG]2022-05-26 17:29:05,536: None
[DEBUG]2022-05-26 17:29:05,536: None
[DEBUG]2022-05-26 17:29:05,536: None
[DEBUG]2022-05-26 17:29:05,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:05,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:05,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:05,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:05,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:05,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:05,537: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:05,537: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:05,537: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:05,537: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:05,537: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:05,537: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:05,537: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:05,537: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:05,537: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:05,537: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:05,537: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:05,537: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:05,538: None
[DEBUG]2022-05-26 17:29:05,538: None
[DEBUG]2022-05-26 17:29:05,538: None
[DEBUG]2022-05-26 17:29:05,538: None
[DEBUG]2022-05-26 17:29:05,538: None
[DEBUG]2022-05-26 17:29:05,538: None
[DEBUG]2022-05-26 17:29:05,538: None
[DEBUG]2022-05-26 17:29:05,539: None
[DEBUG]2022-05-26 17:29:05,539: None
[DEBUG]2022-05-26 17:29:05,539: None
[DEBUG]2022-05-26 17:29:05,539: None
[DEBUG]2022-05-26 17:29:05,539: None
[DEBUG]2022-05-26 17:29:05,539: None
[DEBUG]2022-05-26 17:29:05,539: None
[DEBUG]2022-05-26 17:29:05,539: None
[DEBUG]2022-05-26 17:29:05,540: None
[DEBUG]2022-05-26 17:29:05,540: None
[DEBUG]2022-05-26 17:29:05,540: None
[DEBUG]2022-05-26 17:29:05,540: None
[DEBUG]2022-05-26 17:29:05,540: None
[DEBUG]2022-05-26 17:29:05,540: None
[DEBUG]2022-05-26 17:29:05,540: None
[DEBUG]2022-05-26 17:29:05,540: None
[DEBUG]2022-05-26 17:29:05,540: None
[DEBUG]2022-05-26 17:29:05,541: None
[DEBUG]2022-05-26 17:29:05,541: None
[DEBUG]2022-05-26 17:29:05,541: None
[DEBUG]2022-05-26 17:29:05,541: None
[DEBUG]2022-05-26 17:29:05,541: None
[DEBUG]2022-05-26 17:29:05,541: None
[DEBUG]2022-05-26 17:29:05,541: None
[DEBUG]2022-05-26 17:29:05,541: None
[DEBUG]2022-05-26 17:29:05,541: None
[DEBUG]2022-05-26 17:29:05,541: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,542: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,543: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,544: None
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,545: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,546: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,547: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,548: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,549: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,550: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,551: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,553: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:05,555: None
[DEBUG]2022-05-26 17:29:17,481: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:29:17,481: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:29:17,481: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:29:17,484: None
[DEBUG]2022-05-26 17:29:17,484: None
[DEBUG]2022-05-26 17:29:17,485: None
[DEBUG]2022-05-26 17:29:17,485: None
[DEBUG]2022-05-26 17:29:17,485: None
[DEBUG]2022-05-26 17:29:17,487: None
[DEBUG]2022-05-26 17:29:17,487: None
[DEBUG]2022-05-26 17:29:17,487: None
[DEBUG]2022-05-26 17:29:17,487: None
[DEBUG]2022-05-26 17:29:17,488: None
[DEBUG]2022-05-26 17:29:17,488: None
[DEBUG]2022-05-26 17:29:17,488: None
[DEBUG]2022-05-26 17:29:17,488: None
[DEBUG]2022-05-26 17:29:17,488: None
[DEBUG]2022-05-26 17:29:17,489: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:17,489: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:17,489: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:17,489: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:17,489: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:17,489: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:29:17,490: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:17,490: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:17,490: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:17,490: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:17,490: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:17,490: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:29:17,490: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:17,490: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:17,490: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:17,490: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:17,490: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:17,490: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:29:17,492: None
[DEBUG]2022-05-26 17:29:17,492: None
[DEBUG]2022-05-26 17:29:17,492: None
[DEBUG]2022-05-26 17:29:17,492: None
[DEBUG]2022-05-26 17:29:17,492: None
[DEBUG]2022-05-26 17:29:17,492: None
[DEBUG]2022-05-26 17:29:17,492: None
[DEBUG]2022-05-26 17:29:17,494: None
[DEBUG]2022-05-26 17:29:17,494: None
[DEBUG]2022-05-26 17:29:17,494: None
[DEBUG]2022-05-26 17:29:17,494: None
[DEBUG]2022-05-26 17:29:17,494: None
[DEBUG]2022-05-26 17:29:17,494: None
[DEBUG]2022-05-26 17:29:17,494: None
[DEBUG]2022-05-26 17:29:17,494: None
[DEBUG]2022-05-26 17:29:17,495: None
[DEBUG]2022-05-26 17:29:17,495: None
[DEBUG]2022-05-26 17:29:17,495: None
[DEBUG]2022-05-26 17:29:17,495: None
[DEBUG]2022-05-26 17:29:17,495: None
[DEBUG]2022-05-26 17:29:17,495: None
[DEBUG]2022-05-26 17:29:17,495: None
[DEBUG]2022-05-26 17:29:17,495: None
[DEBUG]2022-05-26 17:29:17,495: None
[DEBUG]2022-05-26 17:29:17,497: None
[DEBUG]2022-05-26 17:29:17,497: None
[DEBUG]2022-05-26 17:29:17,497: None
[DEBUG]2022-05-26 17:29:17,497: None
[DEBUG]2022-05-26 17:29:17,497: None
[DEBUG]2022-05-26 17:29:17,497: None
[DEBUG]2022-05-26 17:29:17,497: None
[DEBUG]2022-05-26 17:29:17,497: None
[DEBUG]2022-05-26 17:29:17,497: None
[DEBUG]2022-05-26 17:29:17,497: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,498: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,499: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,501: None
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,504: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,505: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,507: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,509: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,510: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,511: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,512: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,513: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:29:17,515: None
[DEBUG]2022-05-26 17:30:59,328: <re.Match object; span=(1088, 2619), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:30:59,329: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'ENCODER_TICK', 'ENCODER_DONE', 'ENCODER_SET_TICKS', 'DRIVING', 'DRIVE_FORWARD_FULL', 'DRIVE_FORWARD_HALF', 'DRIVE_REVERSE_FULL', 'DRIVE_REVERSE_HALF', 'TANK_TURN_LEFT_90', 'PIVOT_TURN_LEFT_300', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:30:59,329: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"ENCODER_TICK",
	"ENCODER_DONE",
	"ENCODER_SET_TICKS",
	"DRIVING",
	"DRIVE_FORWARD_FULL",
	"DRIVE_FORWARD_HALF",
	"DRIVE_REVERSE_FULL",
	"DRIVE_REVERSE_HALF",
	"TANK_TURN_LEFT_90",
	"PIVOT_TURN_LEFT_300",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:30:59,332: None
[DEBUG]2022-05-26 17:30:59,332: None
[DEBUG]2022-05-26 17:30:59,333: None
[DEBUG]2022-05-26 17:30:59,333: None
[DEBUG]2022-05-26 17:30:59,333: None
[DEBUG]2022-05-26 17:30:59,334: None
[DEBUG]2022-05-26 17:30:59,334: None
[DEBUG]2022-05-26 17:30:59,334: None
[DEBUG]2022-05-26 17:30:59,334: None
[DEBUG]2022-05-26 17:30:59,335: None
[DEBUG]2022-05-26 17:30:59,335: None
[DEBUG]2022-05-26 17:30:59,335: None
[DEBUG]2022-05-26 17:30:59,335: None
[DEBUG]2022-05-26 17:30:59,335: None
[DEBUG]2022-05-26 17:30:59,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:30:59,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:30:59,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:30:59,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:30:59,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:30:59,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:30:59,336: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:30:59,336: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:30:59,336: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:30:59,336: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:30:59,336: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:30:59,336: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:30:59,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:30:59,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:30:59,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:30:59,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:30:59,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:30:59,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:30:59,337: None
[DEBUG]2022-05-26 17:30:59,337: None
[DEBUG]2022-05-26 17:30:59,337: None
[DEBUG]2022-05-26 17:30:59,337: None
[DEBUG]2022-05-26 17:30:59,337: None
[DEBUG]2022-05-26 17:30:59,337: None
[DEBUG]2022-05-26 17:30:59,337: None
[DEBUG]2022-05-26 17:30:59,338: None
[DEBUG]2022-05-26 17:30:59,338: None
[DEBUG]2022-05-26 17:30:59,338: None
[DEBUG]2022-05-26 17:30:59,338: None
[DEBUG]2022-05-26 17:30:59,338: None
[DEBUG]2022-05-26 17:30:59,338: None
[DEBUG]2022-05-26 17:30:59,338: None
[DEBUG]2022-05-26 17:30:59,338: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,339: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,341: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,342: None
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,343: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,344: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,345: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,346: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,348: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,350: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,351: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,353: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,354: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:30:59,355: None
[DEBUG]2022-05-26 17:31:59,302: <re.Match object; span=(1088, 2619), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:31:59,302: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'ENCODER_TICK', 'ENCODER_DONE', 'ENCODER_SET_TICKS', 'DRIVING', 'DRIVE_FORWARD_FULL', 'DRIVE_FORWARD_HALF', 'DRIVE_REVERSE_FULL', 'DRIVE_REVERSE_HALF', 'TANK_TURN_LEFT_90', 'PIVOT_TURN_LEFT_300', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:31:59,302: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"ENCODER_TICK",
	"ENCODER_DONE",
	"ENCODER_SET_TICKS",
	"DRIVING",
	"DRIVE_FORWARD_FULL",
	"DRIVE_FORWARD_HALF",
	"DRIVE_REVERSE_FULL",
	"DRIVE_REVERSE_HALF",
	"TANK_TURN_LEFT_90",
	"PIVOT_TURN_LEFT_300",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:31:59,305: None
[DEBUG]2022-05-26 17:31:59,305: None
[DEBUG]2022-05-26 17:31:59,306: None
[DEBUG]2022-05-26 17:31:59,306: None
[DEBUG]2022-05-26 17:31:59,306: None
[DEBUG]2022-05-26 17:31:59,306: None
[DEBUG]2022-05-26 17:31:59,306: None
[DEBUG]2022-05-26 17:31:59,306: None
[DEBUG]2022-05-26 17:31:59,306: None
[DEBUG]2022-05-26 17:31:59,307: None
[DEBUG]2022-05-26 17:31:59,307: None
[DEBUG]2022-05-26 17:31:59,307: None
[DEBUG]2022-05-26 17:31:59,307: None
[DEBUG]2022-05-26 17:31:59,307: None
[DEBUG]2022-05-26 17:31:59,308: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:31:59,308: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:31:59,308: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:31:59,308: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:31:59,308: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:31:59,308: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:31:59,308: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:31:59,308: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:31:59,308: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:31:59,308: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:31:59,308: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:31:59,308: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:31:59,308: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:31:59,308: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:31:59,308: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:31:59,308: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:31:59,308: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:31:59,308: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:31:59,310: None
[DEBUG]2022-05-26 17:31:59,310: None
[DEBUG]2022-05-26 17:31:59,310: None
[DEBUG]2022-05-26 17:31:59,310: None
[DEBUG]2022-05-26 17:31:59,310: None
[DEBUG]2022-05-26 17:31:59,310: None
[DEBUG]2022-05-26 17:31:59,310: None
[DEBUG]2022-05-26 17:31:59,311: None
[DEBUG]2022-05-26 17:31:59,311: None
[DEBUG]2022-05-26 17:31:59,311: None
[DEBUG]2022-05-26 17:31:59,311: None
[DEBUG]2022-05-26 17:31:59,311: None
[DEBUG]2022-05-26 17:31:59,311: None
[DEBUG]2022-05-26 17:31:59,311: None
[DEBUG]2022-05-26 17:31:59,311: None
[DEBUG]2022-05-26 17:31:59,312: None
[DEBUG]2022-05-26 17:31:59,312: None
[DEBUG]2022-05-26 17:31:59,312: None
[DEBUG]2022-05-26 17:31:59,312: None
[DEBUG]2022-05-26 17:31:59,312: None
[DEBUG]2022-05-26 17:31:59,312: None
[DEBUG]2022-05-26 17:31:59,312: None
[DEBUG]2022-05-26 17:31:59,312: None
[DEBUG]2022-05-26 17:31:59,312: None
[DEBUG]2022-05-26 17:31:59,313: None
[DEBUG]2022-05-26 17:31:59,313: None
[DEBUG]2022-05-26 17:31:59,313: None
[DEBUG]2022-05-26 17:31:59,313: None
[DEBUG]2022-05-26 17:31:59,313: None
[DEBUG]2022-05-26 17:31:59,313: None
[DEBUG]2022-05-26 17:31:59,313: None
[DEBUG]2022-05-26 17:31:59,313: None
[DEBUG]2022-05-26 17:31:59,313: None
[DEBUG]2022-05-26 17:31:59,313: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,315: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,316: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,317: None
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,318: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,319: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,320: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,321: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,322: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,324: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,325: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,326: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,327: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:31:59,329: None
[DEBUG]2022-05-26 17:32:31,031: <re.Match object; span=(1088, 2619), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:32:31,032: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'ENCODER_TICK', 'ENCODER_DONE', 'ENCODER_SET_TICKS', 'DRIVING', 'DRIVE_FORWARD_FULL', 'DRIVE_FORWARD_HALF', 'DRIVE_REVERSE_FULL', 'DRIVE_REVERSE_HALF', 'TANK_TURN_LEFT_90', 'PIVOT_TURN_LEFT_300', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:32:31,032: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"ENCODER_TICK",
	"ENCODER_DONE",
	"ENCODER_SET_TICKS",
	"DRIVING",
	"DRIVE_FORWARD_FULL",
	"DRIVE_FORWARD_HALF",
	"DRIVE_REVERSE_FULL",
	"DRIVE_REVERSE_HALF",
	"TANK_TURN_LEFT_90",
	"PIVOT_TURN_LEFT_300",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:32:31,034: None
[DEBUG]2022-05-26 17:32:31,034: None
[DEBUG]2022-05-26 17:32:31,035: None
[DEBUG]2022-05-26 17:32:31,035: None
[DEBUG]2022-05-26 17:32:31,035: None
[DEBUG]2022-05-26 17:32:31,035: None
[DEBUG]2022-05-26 17:32:31,035: None
[DEBUG]2022-05-26 17:32:31,035: None
[DEBUG]2022-05-26 17:32:31,035: None
[DEBUG]2022-05-26 17:32:31,036: None
[DEBUG]2022-05-26 17:32:31,036: None
[DEBUG]2022-05-26 17:32:31,036: None
[DEBUG]2022-05-26 17:32:31,036: None
[DEBUG]2022-05-26 17:32:31,036: None
[DEBUG]2022-05-26 17:32:31,037: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:31,037: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:31,037: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:31,037: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:31,037: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:31,037: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:31,037: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:31,037: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:31,037: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:31,037: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:31,037: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:31,037: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:31,037: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:31,037: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:31,037: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:31,037: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:31,037: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:31,037: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:31,038: None
[DEBUG]2022-05-26 17:32:31,038: None
[DEBUG]2022-05-26 17:32:31,038: None
[DEBUG]2022-05-26 17:32:31,038: None
[DEBUG]2022-05-26 17:32:31,038: None
[DEBUG]2022-05-26 17:32:31,038: None
[DEBUG]2022-05-26 17:32:31,038: None
[DEBUG]2022-05-26 17:32:31,039: None
[DEBUG]2022-05-26 17:32:31,039: None
[DEBUG]2022-05-26 17:32:31,039: None
[DEBUG]2022-05-26 17:32:31,039: None
[DEBUG]2022-05-26 17:32:31,039: None
[DEBUG]2022-05-26 17:32:31,039: None
[DEBUG]2022-05-26 17:32:31,039: None
[DEBUG]2022-05-26 17:32:31,039: None
[DEBUG]2022-05-26 17:32:31,040: None
[DEBUG]2022-05-26 17:32:31,040: None
[DEBUG]2022-05-26 17:32:31,040: None
[DEBUG]2022-05-26 17:32:31,040: None
[DEBUG]2022-05-26 17:32:31,040: None
[DEBUG]2022-05-26 17:32:31,040: None
[DEBUG]2022-05-26 17:32:31,040: None
[DEBUG]2022-05-26 17:32:31,040: None
[DEBUG]2022-05-26 17:32:31,040: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,041: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,042: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,043: None
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,044: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,045: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,046: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,047: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,048: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,049: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,050: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,051: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,052: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:31,054: None
[DEBUG]2022-05-26 17:32:37,095: <re.Match object; span=(1088, 2619), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:32:37,095: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'ENCODER_TICK', 'ENCODER_DONE', 'ENCODER_SET_TICKS', 'DRIVING', 'DRIVE_FORWARD_FULL', 'DRIVE_FORWARD_HALF', 'DRIVE_REVERSE_FULL', 'DRIVE_REVERSE_HALF', 'TANK_TURN_LEFT_90', 'PIVOT_TURN_LEFT_300', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:32:37,096: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"ENCODER_TICK",
	"ENCODER_DONE",
	"ENCODER_SET_TICKS",
	"DRIVING",
	"DRIVE_FORWARD_FULL",
	"DRIVE_FORWARD_HALF",
	"DRIVE_REVERSE_FULL",
	"DRIVE_REVERSE_HALF",
	"TANK_TURN_LEFT_90",
	"PIVOT_TURN_LEFT_300",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:32:37,097: None
[DEBUG]2022-05-26 17:32:37,097: None
[DEBUG]2022-05-26 17:32:37,098: None
[DEBUG]2022-05-26 17:32:37,098: None
[DEBUG]2022-05-26 17:32:37,098: None
[DEBUG]2022-05-26 17:32:37,099: None
[DEBUG]2022-05-26 17:32:37,099: None
[DEBUG]2022-05-26 17:32:37,099: None
[DEBUG]2022-05-26 17:32:37,099: None
[DEBUG]2022-05-26 17:32:37,100: None
[DEBUG]2022-05-26 17:32:37,100: None
[DEBUG]2022-05-26 17:32:37,100: None
[DEBUG]2022-05-26 17:32:37,100: None
[DEBUG]2022-05-26 17:32:37,100: None
[DEBUG]2022-05-26 17:32:37,100: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:37,100: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:37,100: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:37,100: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:37,100: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:37,100: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:32:37,101: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:37,101: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:37,101: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:37,101: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:37,101: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:37,101: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:32:37,101: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:37,101: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:37,101: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:37,101: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:37,101: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:37,101: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:32:37,102: None
[DEBUG]2022-05-26 17:32:37,102: None
[DEBUG]2022-05-26 17:32:37,102: None
[DEBUG]2022-05-26 17:32:37,102: None
[DEBUG]2022-05-26 17:32:37,102: None
[DEBUG]2022-05-26 17:32:37,102: None
[DEBUG]2022-05-26 17:32:37,102: None
[DEBUG]2022-05-26 17:32:37,103: None
[DEBUG]2022-05-26 17:32:37,103: None
[DEBUG]2022-05-26 17:32:37,103: None
[DEBUG]2022-05-26 17:32:37,103: None
[DEBUG]2022-05-26 17:32:37,103: None
[DEBUG]2022-05-26 17:32:37,103: None
[DEBUG]2022-05-26 17:32:37,103: None
[DEBUG]2022-05-26 17:32:37,103: None
[DEBUG]2022-05-26 17:32:37,104: None
[DEBUG]2022-05-26 17:32:37,104: None
[DEBUG]2022-05-26 17:32:37,104: None
[DEBUG]2022-05-26 17:32:37,104: None
[DEBUG]2022-05-26 17:32:37,104: None
[DEBUG]2022-05-26 17:32:37,104: None
[DEBUG]2022-05-26 17:32:37,104: None
[DEBUG]2022-05-26 17:32:37,104: None
[DEBUG]2022-05-26 17:32:37,104: None
[DEBUG]2022-05-26 17:32:37,105: None
[DEBUG]2022-05-26 17:32:37,105: None
[DEBUG]2022-05-26 17:32:37,105: None
[DEBUG]2022-05-26 17:32:37,105: None
[DEBUG]2022-05-26 17:32:37,105: None
[DEBUG]2022-05-26 17:32:37,105: None
[DEBUG]2022-05-26 17:32:37,105: None
[DEBUG]2022-05-26 17:32:37,105: None
[DEBUG]2022-05-26 17:32:37,105: None
[DEBUG]2022-05-26 17:32:37,105: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,106: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,107: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,108: None
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,109: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,110: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,111: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,112: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,113: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,114: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,116: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,117: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:32:37,119: None
[DEBUG]2022-05-26 17:33:53,347: <re.Match object; span=(1088, 2619), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:33:53,347: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'ENCODER_TICK', 'ENCODER_DONE', 'ENCODER_SET_TICKS', 'DRIVING', 'DRIVE_FORWARD_FULL', 'DRIVE_FORWARD_HALF', 'DRIVE_REVERSE_FULL', 'DRIVE_REVERSE_HALF', 'TANK_TURN_LEFT_90', 'PIVOT_TURN_LEFT_300', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:33:53,347: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"ENCODER_TICK",
	"ENCODER_DONE",
	"ENCODER_SET_TICKS",
	"DRIVING",
	"DRIVE_FORWARD_FULL",
	"DRIVE_FORWARD_HALF",
	"DRIVE_REVERSE_FULL",
	"DRIVE_REVERSE_HALF",
	"TANK_TURN_LEFT_90",
	"PIVOT_TURN_LEFT_300",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:33:53,349: None
[DEBUG]2022-05-26 17:33:53,349: None
[DEBUG]2022-05-26 17:33:53,350: None
[DEBUG]2022-05-26 17:33:53,350: None
[DEBUG]2022-05-26 17:33:53,350: None
[DEBUG]2022-05-26 17:33:53,350: None
[DEBUG]2022-05-26 17:33:53,350: None
[DEBUG]2022-05-26 17:33:53,350: None
[DEBUG]2022-05-26 17:33:53,350: None
[DEBUG]2022-05-26 17:33:53,351: None
[DEBUG]2022-05-26 17:33:53,351: None
[DEBUG]2022-05-26 17:33:53,351: None
[DEBUG]2022-05-26 17:33:53,351: None
[DEBUG]2022-05-26 17:33:53,351: None
[DEBUG]2022-05-26 17:33:53,352: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:33:53,352: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:33:53,352: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:33:53,352: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:33:53,352: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:33:53,352: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:33:53,352: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:33:53,352: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:33:53,352: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:33:53,352: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:33:53,352: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:33:53,352: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:33:53,352: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:33:53,352: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:33:53,352: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:33:53,352: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:33:53,352: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:33:53,352: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:33:53,353: None
[DEBUG]2022-05-26 17:33:53,353: None
[DEBUG]2022-05-26 17:33:53,353: None
[DEBUG]2022-05-26 17:33:53,353: None
[DEBUG]2022-05-26 17:33:53,353: None
[DEBUG]2022-05-26 17:33:53,353: None
[DEBUG]2022-05-26 17:33:53,353: None
[DEBUG]2022-05-26 17:33:53,354: None
[DEBUG]2022-05-26 17:33:53,354: None
[DEBUG]2022-05-26 17:33:53,354: None
[DEBUG]2022-05-26 17:33:53,354: None
[DEBUG]2022-05-26 17:33:53,354: None
[DEBUG]2022-05-26 17:33:53,354: None
[DEBUG]2022-05-26 17:33:53,354: None
[DEBUG]2022-05-26 17:33:53,354: None
[DEBUG]2022-05-26 17:33:53,355: None
[DEBUG]2022-05-26 17:33:53,355: None
[DEBUG]2022-05-26 17:33:53,355: None
[DEBUG]2022-05-26 17:33:53,355: None
[DEBUG]2022-05-26 17:33:53,355: None
[DEBUG]2022-05-26 17:33:53,355: None
[DEBUG]2022-05-26 17:33:53,355: None
[DEBUG]2022-05-26 17:33:53,355: None
[DEBUG]2022-05-26 17:33:53,355: None
[DEBUG]2022-05-26 17:33:53,356: None
[DEBUG]2022-05-26 17:33:53,356: None
[DEBUG]2022-05-26 17:33:53,356: None
[DEBUG]2022-05-26 17:33:53,356: None
[DEBUG]2022-05-26 17:33:53,356: None
[DEBUG]2022-05-26 17:33:53,356: None
[DEBUG]2022-05-26 17:33:53,356: None
[DEBUG]2022-05-26 17:33:53,356: None
[DEBUG]2022-05-26 17:33:53,356: None
[DEBUG]2022-05-26 17:33:53,356: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,357: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,358: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,359: None
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,361: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,362: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,363: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,364: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,365: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,366: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,367: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,369: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:33:53,371: None
[DEBUG]2022-05-26 17:34:36,375: <re.Match object; span=(1088, 2619), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:34:36,375: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'ENCODER_TICK', 'ENCODER_DONE', 'ENCODER_SET_TICKS', 'DRIVING', 'DRIVE_FORWARD_FULL', 'DRIVE_FORWARD_HALF', 'DRIVE_REVERSE_FULL', 'DRIVE_REVERSE_HALF', 'TANK_TURN_LEFT_90', 'PIVOT_TURN_LEFT_300', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:34:36,375: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"ENCODER_TICK",
	"ENCODER_DONE",
	"ENCODER_SET_TICKS",
	"DRIVING",
	"DRIVE_FORWARD_FULL",
	"DRIVE_FORWARD_HALF",
	"DRIVE_REVERSE_FULL",
	"DRIVE_REVERSE_HALF",
	"TANK_TURN_LEFT_90",
	"PIVOT_TURN_LEFT_300",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:34:36,377: None
[DEBUG]2022-05-26 17:34:36,377: None
[DEBUG]2022-05-26 17:34:36,378: None
[DEBUG]2022-05-26 17:34:36,378: None
[DEBUG]2022-05-26 17:34:36,378: None
[DEBUG]2022-05-26 17:34:36,379: None
[DEBUG]2022-05-26 17:34:36,379: None
[DEBUG]2022-05-26 17:34:36,379: None
[DEBUG]2022-05-26 17:34:36,379: None
[DEBUG]2022-05-26 17:34:36,379: None
[DEBUG]2022-05-26 17:34:36,379: None
[DEBUG]2022-05-26 17:34:36,379: None
[DEBUG]2022-05-26 17:34:36,379: None
[DEBUG]2022-05-26 17:34:36,379: None
[DEBUG]2022-05-26 17:34:36,380: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:34:36,380: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:34:36,380: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:34:36,380: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:34:36,380: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:34:36,380: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:34:36,380: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:34:36,380: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:34:36,380: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:34:36,380: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:34:36,380: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:34:36,380: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:34:36,380: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:34:36,380: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:34:36,380: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:34:36,380: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:34:36,380: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:34:36,380: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:34:36,381: None
[DEBUG]2022-05-26 17:34:36,381: None
[DEBUG]2022-05-26 17:34:36,381: None
[DEBUG]2022-05-26 17:34:36,381: None
[DEBUG]2022-05-26 17:34:36,381: None
[DEBUG]2022-05-26 17:34:36,381: None
[DEBUG]2022-05-26 17:34:36,381: None
[DEBUG]2022-05-26 17:34:36,382: None
[DEBUG]2022-05-26 17:34:36,382: None
[DEBUG]2022-05-26 17:34:36,382: None
[DEBUG]2022-05-26 17:34:36,382: None
[DEBUG]2022-05-26 17:34:36,382: None
[DEBUG]2022-05-26 17:34:36,382: None
[DEBUG]2022-05-26 17:34:36,382: None
[DEBUG]2022-05-26 17:34:36,382: None
[DEBUG]2022-05-26 17:34:36,383: None
[DEBUG]2022-05-26 17:34:36,383: None
[DEBUG]2022-05-26 17:34:36,383: None
[DEBUG]2022-05-26 17:34:36,383: None
[DEBUG]2022-05-26 17:34:36,383: None
[DEBUG]2022-05-26 17:34:36,383: None
[DEBUG]2022-05-26 17:34:36,383: None
[DEBUG]2022-05-26 17:34:36,383: None
[DEBUG]2022-05-26 17:34:36,383: None
[DEBUG]2022-05-26 17:34:36,384: None
[DEBUG]2022-05-26 17:34:36,384: None
[DEBUG]2022-05-26 17:34:36,384: None
[DEBUG]2022-05-26 17:34:36,384: None
[DEBUG]2022-05-26 17:34:36,384: None
[DEBUG]2022-05-26 17:34:36,384: None
[DEBUG]2022-05-26 17:34:36,384: None
[DEBUG]2022-05-26 17:34:36,384: None
[DEBUG]2022-05-26 17:34:36,384: None
[DEBUG]2022-05-26 17:34:36,384: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,385: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,386: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,387: None
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,388: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,389: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,390: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,392: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,393: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,401: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,402: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,403: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:34:36,404: None
[DEBUG]2022-05-26 17:35:38,662: <re.Match object; span=(1088, 2203), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:35:38,663: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:35:38,663: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:35:38,667: None
[DEBUG]2022-05-26 17:35:38,667: None
[DEBUG]2022-05-26 17:35:38,669: None
[DEBUG]2022-05-26 17:35:38,669: None
[DEBUG]2022-05-26 17:35:38,669: None
[DEBUG]2022-05-26 17:35:38,670: None
[DEBUG]2022-05-26 17:35:38,670: None
[DEBUG]2022-05-26 17:35:38,670: None
[DEBUG]2022-05-26 17:35:38,670: None
[DEBUG]2022-05-26 17:35:38,671: None
[DEBUG]2022-05-26 17:35:38,671: None
[DEBUG]2022-05-26 17:35:38,671: None
[DEBUG]2022-05-26 17:35:38,671: None
[DEBUG]2022-05-26 17:35:38,671: None
[DEBUG]2022-05-26 17:35:38,673: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:35:38,673: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:35:38,673: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:35:38,673: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:35:38,673: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:35:38,673: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:35:38,674: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:35:38,674: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:35:38,674: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:35:38,674: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:35:38,674: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:35:38,674: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:35:38,674: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:35:38,674: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:35:38,674: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:35:38,674: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:35:38,674: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:35:38,674: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:35:38,676: None
[DEBUG]2022-05-26 17:35:38,676: None
[DEBUG]2022-05-26 17:35:38,676: None
[DEBUG]2022-05-26 17:35:38,676: None
[DEBUG]2022-05-26 17:35:38,676: None
[DEBUG]2022-05-26 17:35:38,676: None
[DEBUG]2022-05-26 17:35:38,676: None
[DEBUG]2022-05-26 17:35:38,678: None
[DEBUG]2022-05-26 17:35:38,678: None
[DEBUG]2022-05-26 17:35:38,678: None
[DEBUG]2022-05-26 17:35:38,678: None
[DEBUG]2022-05-26 17:35:38,678: None
[DEBUG]2022-05-26 17:35:38,678: None
[DEBUG]2022-05-26 17:35:38,678: None
[DEBUG]2022-05-26 17:35:38,678: None
[DEBUG]2022-05-26 17:35:38,679: None
[DEBUG]2022-05-26 17:35:38,679: None
[DEBUG]2022-05-26 17:35:38,679: None
[DEBUG]2022-05-26 17:35:38,679: None
[DEBUG]2022-05-26 17:35:38,679: None
[DEBUG]2022-05-26 17:35:38,679: None
[DEBUG]2022-05-26 17:35:38,679: None
[DEBUG]2022-05-26 17:35:38,679: None
[DEBUG]2022-05-26 17:35:38,679: None
[DEBUG]2022-05-26 17:35:38,681: None
[DEBUG]2022-05-26 17:35:38,681: None
[DEBUG]2022-05-26 17:35:38,681: None
[DEBUG]2022-05-26 17:35:38,681: None
[DEBUG]2022-05-26 17:35:38,681: None
[DEBUG]2022-05-26 17:35:38,681: None
[DEBUG]2022-05-26 17:35:38,681: None
[DEBUG]2022-05-26 17:35:38,681: None
[DEBUG]2022-05-26 17:35:38,681: None
[DEBUG]2022-05-26 17:35:38,681: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,682: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,684: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,686: None
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,687: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,688: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,690: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,691: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,693: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,695: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,697: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,699: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,701: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:35:38,703: None
[DEBUG]2022-05-26 17:36:18,771: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:36:18,771: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:36:18,771: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:36:18,776: None
[DEBUG]2022-05-26 17:36:18,776: None
[DEBUG]2022-05-26 17:36:18,777: None
[DEBUG]2022-05-26 17:36:18,777: None
[DEBUG]2022-05-26 17:36:18,777: None
[DEBUG]2022-05-26 17:36:18,778: None
[DEBUG]2022-05-26 17:36:18,778: None
[DEBUG]2022-05-26 17:36:18,778: None
[DEBUG]2022-05-26 17:36:18,778: None
[DEBUG]2022-05-26 17:36:18,780: None
[DEBUG]2022-05-26 17:36:18,780: None
[DEBUG]2022-05-26 17:36:18,780: None
[DEBUG]2022-05-26 17:36:18,780: None
[DEBUG]2022-05-26 17:36:18,780: None
[DEBUG]2022-05-26 17:36:18,781: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:18,781: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:18,781: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:18,781: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:18,781: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:18,781: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:18,781: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:18,781: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:18,781: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:18,781: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:18,781: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:18,781: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:18,782: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:18,782: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:18,782: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:18,782: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:18,782: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:18,782: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:18,784: None
[DEBUG]2022-05-26 17:36:18,784: None
[DEBUG]2022-05-26 17:36:18,784: None
[DEBUG]2022-05-26 17:36:18,784: None
[DEBUG]2022-05-26 17:36:18,784: None
[DEBUG]2022-05-26 17:36:18,784: None
[DEBUG]2022-05-26 17:36:18,784: None
[DEBUG]2022-05-26 17:36:18,785: None
[DEBUG]2022-05-26 17:36:18,785: None
[DEBUG]2022-05-26 17:36:18,785: None
[DEBUG]2022-05-26 17:36:18,785: None
[DEBUG]2022-05-26 17:36:18,785: None
[DEBUG]2022-05-26 17:36:18,785: None
[DEBUG]2022-05-26 17:36:18,785: None
[DEBUG]2022-05-26 17:36:18,785: None
[DEBUG]2022-05-26 17:36:18,787: None
[DEBUG]2022-05-26 17:36:18,787: None
[DEBUG]2022-05-26 17:36:18,787: None
[DEBUG]2022-05-26 17:36:18,787: None
[DEBUG]2022-05-26 17:36:18,787: None
[DEBUG]2022-05-26 17:36:18,787: None
[DEBUG]2022-05-26 17:36:18,787: None
[DEBUG]2022-05-26 17:36:18,787: None
[DEBUG]2022-05-26 17:36:18,787: None
[DEBUG]2022-05-26 17:36:18,790: None
[DEBUG]2022-05-26 17:36:18,790: None
[DEBUG]2022-05-26 17:36:18,790: None
[DEBUG]2022-05-26 17:36:18,790: None
[DEBUG]2022-05-26 17:36:18,790: None
[DEBUG]2022-05-26 17:36:18,790: None
[DEBUG]2022-05-26 17:36:18,790: None
[DEBUG]2022-05-26 17:36:18,790: None
[DEBUG]2022-05-26 17:36:18,790: None
[DEBUG]2022-05-26 17:36:18,790: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,792: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,793: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,795: None
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,797: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,798: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,799: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,801: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,804: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,805: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,807: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,809: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,811: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:18,814: None
[DEBUG]2022-05-26 17:36:36,933: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:36:36,933: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:36:36,933: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:36:36,935: None
[DEBUG]2022-05-26 17:36:36,935: None
[DEBUG]2022-05-26 17:36:36,936: None
[DEBUG]2022-05-26 17:36:36,936: None
[DEBUG]2022-05-26 17:36:36,936: None
[DEBUG]2022-05-26 17:36:36,937: None
[DEBUG]2022-05-26 17:36:36,937: None
[DEBUG]2022-05-26 17:36:36,937: None
[DEBUG]2022-05-26 17:36:36,937: None
[DEBUG]2022-05-26 17:36:36,937: None
[DEBUG]2022-05-26 17:36:36,937: None
[DEBUG]2022-05-26 17:36:36,937: None
[DEBUG]2022-05-26 17:36:36,937: None
[DEBUG]2022-05-26 17:36:36,937: None
[DEBUG]2022-05-26 17:36:36,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:36,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:36,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:36,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:36,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:36,938: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:36:36,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:36,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:36,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:36,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:36,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:36,938: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:36:36,939: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:36,939: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:36,939: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:36,939: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:36,939: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:36,939: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:36:36,940: None
[DEBUG]2022-05-26 17:36:36,940: None
[DEBUG]2022-05-26 17:36:36,940: None
[DEBUG]2022-05-26 17:36:36,940: None
[DEBUG]2022-05-26 17:36:36,940: None
[DEBUG]2022-05-26 17:36:36,940: None
[DEBUG]2022-05-26 17:36:36,940: None
[DEBUG]2022-05-26 17:36:36,941: None
[DEBUG]2022-05-26 17:36:36,941: None
[DEBUG]2022-05-26 17:36:36,941: None
[DEBUG]2022-05-26 17:36:36,941: None
[DEBUG]2022-05-26 17:36:36,941: None
[DEBUG]2022-05-26 17:36:36,941: None
[DEBUG]2022-05-26 17:36:36,941: None
[DEBUG]2022-05-26 17:36:36,941: None
[DEBUG]2022-05-26 17:36:36,942: None
[DEBUG]2022-05-26 17:36:36,942: None
[DEBUG]2022-05-26 17:36:36,942: None
[DEBUG]2022-05-26 17:36:36,942: None
[DEBUG]2022-05-26 17:36:36,942: None
[DEBUG]2022-05-26 17:36:36,942: None
[DEBUG]2022-05-26 17:36:36,942: None
[DEBUG]2022-05-26 17:36:36,942: None
[DEBUG]2022-05-26 17:36:36,942: None
[DEBUG]2022-05-26 17:36:36,943: None
[DEBUG]2022-05-26 17:36:36,943: None
[DEBUG]2022-05-26 17:36:36,943: None
[DEBUG]2022-05-26 17:36:36,943: None
[DEBUG]2022-05-26 17:36:36,943: None
[DEBUG]2022-05-26 17:36:36,943: None
[DEBUG]2022-05-26 17:36:36,943: None
[DEBUG]2022-05-26 17:36:36,943: None
[DEBUG]2022-05-26 17:36:36,943: None
[DEBUG]2022-05-26 17:36:36,943: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,944: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,946: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: None
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,947: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,948: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,949: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,951: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,952: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,953: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,955: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,956: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:36:36,958: None
[DEBUG]2022-05-26 17:37:47,490: <re.Match object; span=(1088, 1817), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:37:47,491: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:37:47,491: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:37:47,492: None
[DEBUG]2022-05-26 17:37:47,492: None
[DEBUG]2022-05-26 17:37:47,493: None
[DEBUG]2022-05-26 17:37:47,493: None
[DEBUG]2022-05-26 17:37:47,493: None
[DEBUG]2022-05-26 17:37:47,494: None
[DEBUG]2022-05-26 17:37:47,494: None
[DEBUG]2022-05-26 17:37:47,494: None
[DEBUG]2022-05-26 17:37:47,494: None
[DEBUG]2022-05-26 17:37:47,494: None
[DEBUG]2022-05-26 17:37:47,494: None
[DEBUG]2022-05-26 17:37:47,494: None
[DEBUG]2022-05-26 17:37:47,494: None
[DEBUG]2022-05-26 17:37:47,494: None
[DEBUG]2022-05-26 17:37:47,495: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:37:47,495: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:37:47,495: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:37:47,495: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:37:47,495: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:37:47,495: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:37:47,495: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:37:47,495: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:37:47,495: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:37:47,495: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:37:47,495: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:37:47,495: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:37:47,496: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:37:47,496: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:37:47,496: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:37:47,496: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:37:47,496: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:37:47,496: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:37:47,496: None
[DEBUG]2022-05-26 17:37:47,496: None
[DEBUG]2022-05-26 17:37:47,496: None
[DEBUG]2022-05-26 17:37:47,496: None
[DEBUG]2022-05-26 17:37:47,496: None
[DEBUG]2022-05-26 17:37:47,496: None
[DEBUG]2022-05-26 17:37:47,496: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,498: None
[DEBUG]2022-05-26 17:37:47,499: None
[DEBUG]2022-05-26 17:37:47,499: None
[DEBUG]2022-05-26 17:37:47,499: None
[DEBUG]2022-05-26 17:37:47,499: None
[DEBUG]2022-05-26 17:37:47,499: None
[DEBUG]2022-05-26 17:37:47,499: None
[DEBUG]2022-05-26 17:37:47,499: None
[DEBUG]2022-05-26 17:37:47,499: None
[DEBUG]2022-05-26 17:37:47,499: None
[DEBUG]2022-05-26 17:37:47,499: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,500: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,501: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,502: None
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,503: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,504: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,506: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,507: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,509: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,511: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,512: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,515: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:37:47,517: None
[DEBUG]2022-05-26 17:39:38,470: <re.Match object; span=(1088, 1830), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:39:38,470: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:39:38,470: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:39:38,472: None
[DEBUG]2022-05-26 17:39:38,472: None
[DEBUG]2022-05-26 17:39:38,473: None
[DEBUG]2022-05-26 17:39:38,473: None
[DEBUG]2022-05-26 17:39:38,473: None
[DEBUG]2022-05-26 17:39:38,474: None
[DEBUG]2022-05-26 17:39:38,474: None
[DEBUG]2022-05-26 17:39:38,474: None
[DEBUG]2022-05-26 17:39:38,474: None
[DEBUG]2022-05-26 17:39:38,487: None
[DEBUG]2022-05-26 17:39:38,487: None
[DEBUG]2022-05-26 17:39:38,487: None
[DEBUG]2022-05-26 17:39:38,487: None
[DEBUG]2022-05-26 17:39:38,487: None
[DEBUG]2022-05-26 17:39:38,488: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:39:38,488: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:39:38,488: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:39:38,488: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:39:38,488: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:39:38,488: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:39:38,488: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:39:38,488: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:39:38,488: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:39:38,488: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:39:38,488: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:39:38,488: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:39:38,488: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:39:38,488: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:39:38,488: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:39:38,488: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:39:38,488: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:39:38,488: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,490: None
[DEBUG]2022-05-26 17:39:38,491: None
[DEBUG]2022-05-26 17:39:38,491: None
[DEBUG]2022-05-26 17:39:38,491: None
[DEBUG]2022-05-26 17:39:38,491: None
[DEBUG]2022-05-26 17:39:38,491: None
[DEBUG]2022-05-26 17:39:38,491: None
[DEBUG]2022-05-26 17:39:38,491: None
[DEBUG]2022-05-26 17:39:38,491: None
[DEBUG]2022-05-26 17:39:38,491: None
[DEBUG]2022-05-26 17:39:38,492: None
[DEBUG]2022-05-26 17:39:38,492: None
[DEBUG]2022-05-26 17:39:38,492: None
[DEBUG]2022-05-26 17:39:38,492: None
[DEBUG]2022-05-26 17:39:38,492: None
[DEBUG]2022-05-26 17:39:38,492: None
[DEBUG]2022-05-26 17:39:38,492: None
[DEBUG]2022-05-26 17:39:38,492: None
[DEBUG]2022-05-26 17:39:38,492: None
[DEBUG]2022-05-26 17:39:38,492: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,493: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,494: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,495: None
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,496: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,497: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,498: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,499: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,500: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,501: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,502: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,504: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:39:38,505: None
[DEBUG]2022-05-26 17:40:44,406: <re.Match object; span=(1088, 1841), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:40:44,407: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FR_PRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:40:44,407: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FR_PRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:40:44,409: None
[DEBUG]2022-05-26 17:40:44,409: None
[DEBUG]2022-05-26 17:40:44,410: None
[DEBUG]2022-05-26 17:40:44,410: None
[DEBUG]2022-05-26 17:40:44,410: None
[DEBUG]2022-05-26 17:40:44,411: None
[DEBUG]2022-05-26 17:40:44,411: None
[DEBUG]2022-05-26 17:40:44,411: None
[DEBUG]2022-05-26 17:40:44,411: None
[DEBUG]2022-05-26 17:40:44,412: None
[DEBUG]2022-05-26 17:40:44,412: None
[DEBUG]2022-05-26 17:40:44,412: None
[DEBUG]2022-05-26 17:40:44,412: None
[DEBUG]2022-05-26 17:40:44,412: None
[DEBUG]2022-05-26 17:40:44,412: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:40:44,412: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:40:44,412: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:40:44,412: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:40:44,412: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:40:44,412: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:40:44,413: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:40:44,413: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:40:44,413: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:40:44,413: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:40:44,413: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:40:44,413: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:40:44,413: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:40:44,413: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:40:44,413: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:40:44,413: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:40:44,413: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:40:44,413: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,414: None
[DEBUG]2022-05-26 17:40:44,415: None
[DEBUG]2022-05-26 17:40:44,415: None
[DEBUG]2022-05-26 17:40:44,415: None
[DEBUG]2022-05-26 17:40:44,415: None
[DEBUG]2022-05-26 17:40:44,415: None
[DEBUG]2022-05-26 17:40:44,415: None
[DEBUG]2022-05-26 17:40:44,415: None
[DEBUG]2022-05-26 17:40:44,415: None
[DEBUG]2022-05-26 17:40:44,415: None
[DEBUG]2022-05-26 17:40:44,416: None
[DEBUG]2022-05-26 17:40:44,416: None
[DEBUG]2022-05-26 17:40:44,416: None
[DEBUG]2022-05-26 17:40:44,416: None
[DEBUG]2022-05-26 17:40:44,416: None
[DEBUG]2022-05-26 17:40:44,416: None
[DEBUG]2022-05-26 17:40:44,416: None
[DEBUG]2022-05-26 17:40:44,416: None
[DEBUG]2022-05-26 17:40:44,416: None
[DEBUG]2022-05-26 17:40:44,416: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,417: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,418: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: None
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,419: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,420: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,421: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,422: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,423: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,424: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,425: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,426: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,427: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:40:44,429: None
[DEBUG]2022-05-26 17:41:33,080: <re.Match object; span=(1088, 1889), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:41:33,081: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FR_PRESSED', 'FL_PRESSED', 'RR_PRESSED', 'RL_PRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:41:33,081: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FR_PRESSED",
	"FL_PRESSED",
	"RR_PRESSED",
	"RL_PRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:41:33,085: None
[DEBUG]2022-05-26 17:41:33,085: None
[DEBUG]2022-05-26 17:41:33,086: None
[DEBUG]2022-05-26 17:41:33,086: None
[DEBUG]2022-05-26 17:41:33,086: None
[DEBUG]2022-05-26 17:41:33,087: None
[DEBUG]2022-05-26 17:41:33,087: None
[DEBUG]2022-05-26 17:41:33,087: None
[DEBUG]2022-05-26 17:41:33,087: None
[DEBUG]2022-05-26 17:41:33,087: None
[DEBUG]2022-05-26 17:41:33,087: None
[DEBUG]2022-05-26 17:41:33,087: None
[DEBUG]2022-05-26 17:41:33,087: None
[DEBUG]2022-05-26 17:41:33,087: None
[DEBUG]2022-05-26 17:41:33,088: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:41:33,088: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:41:33,088: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:41:33,088: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:41:33,088: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:41:33,088: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:41:33,089: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:41:33,089: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:41:33,089: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:41:33,089: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:41:33,089: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:41:33,089: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:41:33,089: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:41:33,089: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:41:33,089: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:41:33,089: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:41:33,089: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:41:33,089: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:41:33,091: None
[DEBUG]2022-05-26 17:41:33,091: None
[DEBUG]2022-05-26 17:41:33,091: None
[DEBUG]2022-05-26 17:41:33,091: None
[DEBUG]2022-05-26 17:41:33,091: None
[DEBUG]2022-05-26 17:41:33,091: None
[DEBUG]2022-05-26 17:41:33,091: None
[DEBUG]2022-05-26 17:41:33,092: None
[DEBUG]2022-05-26 17:41:33,092: None
[DEBUG]2022-05-26 17:41:33,092: None
[DEBUG]2022-05-26 17:41:33,092: None
[DEBUG]2022-05-26 17:41:33,092: None
[DEBUG]2022-05-26 17:41:33,092: None
[DEBUG]2022-05-26 17:41:33,092: None
[DEBUG]2022-05-26 17:41:33,092: None
[DEBUG]2022-05-26 17:41:33,093: None
[DEBUG]2022-05-26 17:41:33,093: None
[DEBUG]2022-05-26 17:41:33,093: None
[DEBUG]2022-05-26 17:41:33,093: None
[DEBUG]2022-05-26 17:41:33,093: None
[DEBUG]2022-05-26 17:41:33,093: None
[DEBUG]2022-05-26 17:41:33,093: None
[DEBUG]2022-05-26 17:41:33,093: None
[DEBUG]2022-05-26 17:41:33,093: None
[DEBUG]2022-05-26 17:41:33,094: None
[DEBUG]2022-05-26 17:41:33,094: None
[DEBUG]2022-05-26 17:41:33,094: None
[DEBUG]2022-05-26 17:41:33,094: None
[DEBUG]2022-05-26 17:41:33,094: None
[DEBUG]2022-05-26 17:41:33,094: None
[DEBUG]2022-05-26 17:41:33,094: None
[DEBUG]2022-05-26 17:41:33,094: None
[DEBUG]2022-05-26 17:41:33,094: None
[DEBUG]2022-05-26 17:41:33,094: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,096: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,097: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,099: None
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,101: <re.Match object; span=(1596, 1698), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: ['InitPSubState', 'IdleBumpState', 'DriveForward2in']
[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,102: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
};


[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,103: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,104: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,105: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,107: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,108: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,109: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:41:33,111: None
[DEBUG]2022-05-26 17:48:01,657: <re.Match object; span=(1088, 1889), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:48:01,657: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FR_PRESSED', 'FL_PRESSED', 'RR_PRESSED', 'RL_PRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:48:01,657: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FR_PRESSED",
	"FL_PRESSED",
	"RR_PRESSED",
	"RL_PRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:48:01,660: None
[DEBUG]2022-05-26 17:48:01,660: None
[DEBUG]2022-05-26 17:48:01,660: None
[DEBUG]2022-05-26 17:48:01,660: None
[DEBUG]2022-05-26 17:48:01,660: None
[DEBUG]2022-05-26 17:48:01,661: None
[DEBUG]2022-05-26 17:48:01,661: None
[DEBUG]2022-05-26 17:48:01,661: None
[DEBUG]2022-05-26 17:48:01,661: None
[DEBUG]2022-05-26 17:48:01,662: None
[DEBUG]2022-05-26 17:48:01,662: None
[DEBUG]2022-05-26 17:48:01,662: None
[DEBUG]2022-05-26 17:48:01,662: None
[DEBUG]2022-05-26 17:48:01,662: None
[DEBUG]2022-05-26 17:48:01,663: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:48:01,663: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:48:01,663: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:48:01,663: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:48:01,663: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:48:01,663: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:48:01,663: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:48:01,663: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:48:01,663: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:48:01,663: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:48:01,663: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:48:01,663: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:48:01,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:48:01,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:48:01,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:48:01,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:48:01,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:48:01,663: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:48:01,664: None
[DEBUG]2022-05-26 17:48:01,664: None
[DEBUG]2022-05-26 17:48:01,664: None
[DEBUG]2022-05-26 17:48:01,664: None
[DEBUG]2022-05-26 17:48:01,664: None
[DEBUG]2022-05-26 17:48:01,664: None
[DEBUG]2022-05-26 17:48:01,664: None
[DEBUG]2022-05-26 17:48:01,665: None
[DEBUG]2022-05-26 17:48:01,665: None
[DEBUG]2022-05-26 17:48:01,665: None
[DEBUG]2022-05-26 17:48:01,665: None
[DEBUG]2022-05-26 17:48:01,665: None
[DEBUG]2022-05-26 17:48:01,665: None
[DEBUG]2022-05-26 17:48:01,665: None
[DEBUG]2022-05-26 17:48:01,665: None
[DEBUG]2022-05-26 17:48:01,666: None
[DEBUG]2022-05-26 17:48:01,666: None
[DEBUG]2022-05-26 17:48:01,666: None
[DEBUG]2022-05-26 17:48:01,666: None
[DEBUG]2022-05-26 17:48:01,666: None
[DEBUG]2022-05-26 17:48:01,666: None
[DEBUG]2022-05-26 17:48:01,666: None
[DEBUG]2022-05-26 17:48:01,666: None
[DEBUG]2022-05-26 17:48:01,666: None
[DEBUG]2022-05-26 17:48:01,667: None
[DEBUG]2022-05-26 17:48:01,667: None
[DEBUG]2022-05-26 17:48:01,667: None
[DEBUG]2022-05-26 17:48:01,667: None
[DEBUG]2022-05-26 17:48:01,667: None
[DEBUG]2022-05-26 17:48:01,667: None
[DEBUG]2022-05-26 17:48:01,667: None
[DEBUG]2022-05-26 17:48:01,667: None
[DEBUG]2022-05-26 17:48:01,667: None
[DEBUG]2022-05-26 17:48:01,667: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,668: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,669: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,670: None
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,671: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,672: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,675: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,677: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,679: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,680: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,683: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,685: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:48:01,687: None
[DEBUG]2022-05-26 17:50:14,531: <re.Match object; span=(1088, 1949), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:50:14,531: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FR_PRESSED', 'FL_PRESSED', 'RR_PRESSED', 'RL_PRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:50:14,531: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FR_PRESSED",
	"FL_PRESSED",
	"RR_PRESSED",
	"RL_PRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:50:14,534: None
[DEBUG]2022-05-26 17:50:14,534: None
[DEBUG]2022-05-26 17:50:14,535: None
[DEBUG]2022-05-26 17:50:14,535: None
[DEBUG]2022-05-26 17:50:14,535: None
[DEBUG]2022-05-26 17:50:14,536: None
[DEBUG]2022-05-26 17:50:14,536: None
[DEBUG]2022-05-26 17:50:14,536: None
[DEBUG]2022-05-26 17:50:14,536: None
[DEBUG]2022-05-26 17:50:14,537: None
[DEBUG]2022-05-26 17:50:14,537: None
[DEBUG]2022-05-26 17:50:14,537: None
[DEBUG]2022-05-26 17:50:14,537: None
[DEBUG]2022-05-26 17:50:14,537: None
[DEBUG]2022-05-26 17:50:14,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:50:14,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:50:14,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:50:14,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:50:14,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:50:14,537: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:50:14,538: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:50:14,538: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:50:14,538: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:50:14,538: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:50:14,538: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:50:14,538: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:50:14,538: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:50:14,538: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:50:14,538: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:50:14,538: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:50:14,538: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:50:14,538: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:50:14,539: None
[DEBUG]2022-05-26 17:50:14,539: None
[DEBUG]2022-05-26 17:50:14,539: None
[DEBUG]2022-05-26 17:50:14,539: None
[DEBUG]2022-05-26 17:50:14,539: None
[DEBUG]2022-05-26 17:50:14,539: None
[DEBUG]2022-05-26 17:50:14,539: None
[DEBUG]2022-05-26 17:50:14,540: None
[DEBUG]2022-05-26 17:50:14,540: None
[DEBUG]2022-05-26 17:50:14,540: None
[DEBUG]2022-05-26 17:50:14,540: None
[DEBUG]2022-05-26 17:50:14,540: None
[DEBUG]2022-05-26 17:50:14,540: None
[DEBUG]2022-05-26 17:50:14,540: None
[DEBUG]2022-05-26 17:50:14,540: None
[DEBUG]2022-05-26 17:50:14,541: None
[DEBUG]2022-05-26 17:50:14,541: None
[DEBUG]2022-05-26 17:50:14,541: None
[DEBUG]2022-05-26 17:50:14,541: None
[DEBUG]2022-05-26 17:50:14,541: None
[DEBUG]2022-05-26 17:50:14,541: None
[DEBUG]2022-05-26 17:50:14,541: None
[DEBUG]2022-05-26 17:50:14,541: None
[DEBUG]2022-05-26 17:50:14,541: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,542: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,543: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,545: None
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,546: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,547: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,548: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,549: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,550: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,552: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,553: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,555: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:50:14,556: None
[DEBUG]2022-05-26 17:53:07,328: <re.Match object; span=(1088, 2021), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:53:07,328: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:53:07,328: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:53:07,332: None
[DEBUG]2022-05-26 17:53:07,332: None
[DEBUG]2022-05-26 17:53:07,333: None
[DEBUG]2022-05-26 17:53:07,333: None
[DEBUG]2022-05-26 17:53:07,333: None
[DEBUG]2022-05-26 17:53:07,333: None
[DEBUG]2022-05-26 17:53:07,333: None
[DEBUG]2022-05-26 17:53:07,333: None
[DEBUG]2022-05-26 17:53:07,333: None
[DEBUG]2022-05-26 17:53:07,334: None
[DEBUG]2022-05-26 17:53:07,334: None
[DEBUG]2022-05-26 17:53:07,334: None
[DEBUG]2022-05-26 17:53:07,334: None
[DEBUG]2022-05-26 17:53:07,334: None
[DEBUG]2022-05-26 17:53:07,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:53:07,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:53:07,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:53:07,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:53:07,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:53:07,335: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:53:07,335: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:53:07,335: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:53:07,335: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:53:07,335: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:53:07,335: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:53:07,335: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:53:07,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:53:07,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:53:07,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:53:07,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:53:07,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:53:07,336: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:53:07,337: None
[DEBUG]2022-05-26 17:53:07,337: None
[DEBUG]2022-05-26 17:53:07,337: None
[DEBUG]2022-05-26 17:53:07,337: None
[DEBUG]2022-05-26 17:53:07,337: None
[DEBUG]2022-05-26 17:53:07,337: None
[DEBUG]2022-05-26 17:53:07,337: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,338: None
[DEBUG]2022-05-26 17:53:07,339: None
[DEBUG]2022-05-26 17:53:07,339: None
[DEBUG]2022-05-26 17:53:07,339: None
[DEBUG]2022-05-26 17:53:07,339: None
[DEBUG]2022-05-26 17:53:07,339: None
[DEBUG]2022-05-26 17:53:07,339: None
[DEBUG]2022-05-26 17:53:07,339: None
[DEBUG]2022-05-26 17:53:07,339: None
[DEBUG]2022-05-26 17:53:07,339: None
[DEBUG]2022-05-26 17:53:07,339: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,340: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,341: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,342: None
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,343: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,344: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,345: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,346: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,347: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,348: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,349: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,350: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:53:07,352: None
[DEBUG]2022-05-26 17:59:09,835: <re.Match object; span=(1088, 2021), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 17:59:09,835: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 17:59:09,835: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 17:59:09,838: None
[DEBUG]2022-05-26 17:59:09,838: None
[DEBUG]2022-05-26 17:59:09,838: None
[DEBUG]2022-05-26 17:59:09,838: None
[DEBUG]2022-05-26 17:59:09,838: None
[DEBUG]2022-05-26 17:59:09,839: None
[DEBUG]2022-05-26 17:59:09,839: None
[DEBUG]2022-05-26 17:59:09,839: None
[DEBUG]2022-05-26 17:59:09,839: None
[DEBUG]2022-05-26 17:59:09,840: None
[DEBUG]2022-05-26 17:59:09,840: None
[DEBUG]2022-05-26 17:59:09,840: None
[DEBUG]2022-05-26 17:59:09,840: None
[DEBUG]2022-05-26 17:59:09,840: None
[DEBUG]2022-05-26 17:59:09,841: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:59:09,841: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:59:09,841: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:59:09,841: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:59:09,841: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:59:09,841: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 17:59:09,841: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:59:09,841: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:59:09,841: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:59:09,841: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:59:09,841: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:59:09,841: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 17:59:09,841: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:59:09,841: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:59:09,841: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:59:09,841: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:59:09,841: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:59:09,841: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 17:59:09,842: None
[DEBUG]2022-05-26 17:59:09,842: None
[DEBUG]2022-05-26 17:59:09,842: None
[DEBUG]2022-05-26 17:59:09,842: None
[DEBUG]2022-05-26 17:59:09,842: None
[DEBUG]2022-05-26 17:59:09,842: None
[DEBUG]2022-05-26 17:59:09,842: None
[DEBUG]2022-05-26 17:59:09,843: None
[DEBUG]2022-05-26 17:59:09,843: None
[DEBUG]2022-05-26 17:59:09,843: None
[DEBUG]2022-05-26 17:59:09,843: None
[DEBUG]2022-05-26 17:59:09,843: None
[DEBUG]2022-05-26 17:59:09,843: None
[DEBUG]2022-05-26 17:59:09,843: None
[DEBUG]2022-05-26 17:59:09,843: None
[DEBUG]2022-05-26 17:59:09,844: None
[DEBUG]2022-05-26 17:59:09,844: None
[DEBUG]2022-05-26 17:59:09,844: None
[DEBUG]2022-05-26 17:59:09,844: None
[DEBUG]2022-05-26 17:59:09,844: None
[DEBUG]2022-05-26 17:59:09,844: None
[DEBUG]2022-05-26 17:59:09,844: None
[DEBUG]2022-05-26 17:59:09,844: None
[DEBUG]2022-05-26 17:59:09,844: None
[DEBUG]2022-05-26 17:59:09,845: None
[DEBUG]2022-05-26 17:59:09,845: None
[DEBUG]2022-05-26 17:59:09,845: None
[DEBUG]2022-05-26 17:59:09,845: None
[DEBUG]2022-05-26 17:59:09,845: None
[DEBUG]2022-05-26 17:59:09,845: None
[DEBUG]2022-05-26 17:59:09,845: None
[DEBUG]2022-05-26 17:59:09,845: None
[DEBUG]2022-05-26 17:59:09,845: None
[DEBUG]2022-05-26 17:59:09,845: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,846: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,847: None
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,849: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,850: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,851: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,852: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,854: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,855: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,856: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,858: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 17:59:09,859: None
[DEBUG]2022-05-26 18:47:21,251: <re.Match object; span=(1088, 2021), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 18:47:21,251: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 18:47:21,252: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 18:47:21,253: None
[DEBUG]2022-05-26 18:47:21,253: None
[DEBUG]2022-05-26 18:47:21,254: None
[DEBUG]2022-05-26 18:47:21,254: None
[DEBUG]2022-05-26 18:47:21,254: None
[DEBUG]2022-05-26 18:47:21,255: None
[DEBUG]2022-05-26 18:47:21,255: None
[DEBUG]2022-05-26 18:47:21,255: None
[DEBUG]2022-05-26 18:47:21,255: None
[DEBUG]2022-05-26 18:47:21,256: None
[DEBUG]2022-05-26 18:47:21,256: None
[DEBUG]2022-05-26 18:47:21,256: None
[DEBUG]2022-05-26 18:47:21,256: None
[DEBUG]2022-05-26 18:47:21,256: None
[DEBUG]2022-05-26 18:47:21,257: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:47:21,257: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:47:21,257: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:47:21,257: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:47:21,257: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:47:21,257: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:47:21,257: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:47:21,257: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:47:21,257: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:47:21,257: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:47:21,257: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:47:21,257: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:47:21,257: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:47:21,257: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:47:21,257: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:47:21,257: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:47:21,257: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:47:21,257: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:47:21,258: None
[DEBUG]2022-05-26 18:47:21,258: None
[DEBUG]2022-05-26 18:47:21,258: None
[DEBUG]2022-05-26 18:47:21,258: None
[DEBUG]2022-05-26 18:47:21,258: None
[DEBUG]2022-05-26 18:47:21,258: None
[DEBUG]2022-05-26 18:47:21,258: None
[DEBUG]2022-05-26 18:47:21,259: None
[DEBUG]2022-05-26 18:47:21,259: None
[DEBUG]2022-05-26 18:47:21,259: None
[DEBUG]2022-05-26 18:47:21,259: None
[DEBUG]2022-05-26 18:47:21,259: None
[DEBUG]2022-05-26 18:47:21,259: None
[DEBUG]2022-05-26 18:47:21,259: None
[DEBUG]2022-05-26 18:47:21,259: None
[DEBUG]2022-05-26 18:47:21,260: None
[DEBUG]2022-05-26 18:47:21,260: None
[DEBUG]2022-05-26 18:47:21,260: None
[DEBUG]2022-05-26 18:47:21,260: None
[DEBUG]2022-05-26 18:47:21,260: None
[DEBUG]2022-05-26 18:47:21,260: None
[DEBUG]2022-05-26 18:47:21,260: None
[DEBUG]2022-05-26 18:47:21,260: None
[DEBUG]2022-05-26 18:47:21,260: None
[DEBUG]2022-05-26 18:47:21,261: None
[DEBUG]2022-05-26 18:47:21,261: None
[DEBUG]2022-05-26 18:47:21,261: None
[DEBUG]2022-05-26 18:47:21,261: None
[DEBUG]2022-05-26 18:47:21,261: None
[DEBUG]2022-05-26 18:47:21,261: None
[DEBUG]2022-05-26 18:47:21,261: None
[DEBUG]2022-05-26 18:47:21,261: None
[DEBUG]2022-05-26 18:47:21,261: None
[DEBUG]2022-05-26 18:47:21,261: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,262: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,264: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,265: None
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,266: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,267: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,268: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,270: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,271: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,272: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,273: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,274: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:47:21,276: None
[DEBUG]2022-05-26 18:52:23,560: <re.Match object; span=(1088, 2021), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 18:52:23,560: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 18:52:23,560: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 18:52:23,563: None
[DEBUG]2022-05-26 18:52:23,563: None
[DEBUG]2022-05-26 18:52:23,563: None
[DEBUG]2022-05-26 18:52:23,563: None
[DEBUG]2022-05-26 18:52:23,563: None
[DEBUG]2022-05-26 18:52:23,564: None
[DEBUG]2022-05-26 18:52:23,564: None
[DEBUG]2022-05-26 18:52:23,564: None
[DEBUG]2022-05-26 18:52:23,564: None
[DEBUG]2022-05-26 18:52:23,565: None
[DEBUG]2022-05-26 18:52:23,565: None
[DEBUG]2022-05-26 18:52:23,565: None
[DEBUG]2022-05-26 18:52:23,565: None
[DEBUG]2022-05-26 18:52:23,565: None
[DEBUG]2022-05-26 18:52:23,566: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:52:23,566: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:52:23,566: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:52:23,566: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:52:23,566: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:52:23,566: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:52:23,566: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:52:23,566: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:52:23,566: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:52:23,566: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:52:23,566: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:52:23,566: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:52:23,566: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:52:23,566: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:52:23,566: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:52:23,566: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:52:23,566: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:52:23,566: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:52:23,567: None
[DEBUG]2022-05-26 18:52:23,567: None
[DEBUG]2022-05-26 18:52:23,567: None
[DEBUG]2022-05-26 18:52:23,567: None
[DEBUG]2022-05-26 18:52:23,567: None
[DEBUG]2022-05-26 18:52:23,567: None
[DEBUG]2022-05-26 18:52:23,567: None
[DEBUG]2022-05-26 18:52:23,568: None
[DEBUG]2022-05-26 18:52:23,568: None
[DEBUG]2022-05-26 18:52:23,568: None
[DEBUG]2022-05-26 18:52:23,568: None
[DEBUG]2022-05-26 18:52:23,568: None
[DEBUG]2022-05-26 18:52:23,568: None
[DEBUG]2022-05-26 18:52:23,568: None
[DEBUG]2022-05-26 18:52:23,568: None
[DEBUG]2022-05-26 18:52:23,569: None
[DEBUG]2022-05-26 18:52:23,569: None
[DEBUG]2022-05-26 18:52:23,569: None
[DEBUG]2022-05-26 18:52:23,569: None
[DEBUG]2022-05-26 18:52:23,569: None
[DEBUG]2022-05-26 18:52:23,569: None
[DEBUG]2022-05-26 18:52:23,569: None
[DEBUG]2022-05-26 18:52:23,569: None
[DEBUG]2022-05-26 18:52:23,569: None
[DEBUG]2022-05-26 18:52:23,570: None
[DEBUG]2022-05-26 18:52:23,570: None
[DEBUG]2022-05-26 18:52:23,570: None
[DEBUG]2022-05-26 18:52:23,570: None
[DEBUG]2022-05-26 18:52:23,570: None
[DEBUG]2022-05-26 18:52:23,570: None
[DEBUG]2022-05-26 18:52:23,570: None
[DEBUG]2022-05-26 18:52:23,570: None
[DEBUG]2022-05-26 18:52:23,570: None
[DEBUG]2022-05-26 18:52:23,570: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,572: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,573: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,574: None
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,576: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,577: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,578: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,579: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,580: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,582: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,584: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,586: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:52:23,588: None
[DEBUG]2022-05-26 18:54:23,263: <re.Match object; span=(1088, 2211), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 18:54:23,264: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 18:54:23,264: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 18:54:23,267: None
[DEBUG]2022-05-26 18:54:23,267: None
[DEBUG]2022-05-26 18:54:23,268: None
[DEBUG]2022-05-26 18:54:23,268: None
[DEBUG]2022-05-26 18:54:23,268: None
[DEBUG]2022-05-26 18:54:23,269: None
[DEBUG]2022-05-26 18:54:23,269: None
[DEBUG]2022-05-26 18:54:23,269: None
[DEBUG]2022-05-26 18:54:23,269: None
[DEBUG]2022-05-26 18:54:23,270: None
[DEBUG]2022-05-26 18:54:23,270: None
[DEBUG]2022-05-26 18:54:23,270: None
[DEBUG]2022-05-26 18:54:23,270: None
[DEBUG]2022-05-26 18:54:23,270: None
[DEBUG]2022-05-26 18:54:23,271: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:54:23,271: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:54:23,271: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:54:23,271: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:54:23,271: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:54:23,271: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:54:23,271: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:54:23,271: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:54:23,271: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:54:23,271: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:54:23,271: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:54:23,271: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:54:23,271: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:54:23,271: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:54:23,271: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:54:23,271: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:54:23,271: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:54:23,271: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:54:23,272: None
[DEBUG]2022-05-26 18:54:23,272: None
[DEBUG]2022-05-26 18:54:23,272: None
[DEBUG]2022-05-26 18:54:23,272: None
[DEBUG]2022-05-26 18:54:23,272: None
[DEBUG]2022-05-26 18:54:23,272: None
[DEBUG]2022-05-26 18:54:23,272: None
[DEBUG]2022-05-26 18:54:23,273: None
[DEBUG]2022-05-26 18:54:23,273: None
[DEBUG]2022-05-26 18:54:23,273: None
[DEBUG]2022-05-26 18:54:23,273: None
[DEBUG]2022-05-26 18:54:23,273: None
[DEBUG]2022-05-26 18:54:23,273: None
[DEBUG]2022-05-26 18:54:23,273: None
[DEBUG]2022-05-26 18:54:23,273: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,274: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,275: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,276: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,277: None
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,279: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,280: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,282: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,285: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,287: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,288: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,290: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,291: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:54:23,293: None
[DEBUG]2022-05-26 18:55:19,753: <re.Match object; span=(1088, 2314), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 18:55:19,753: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 18:55:19,754: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 18:55:19,757: None
[DEBUG]2022-05-26 18:55:19,757: None
[DEBUG]2022-05-26 18:55:19,758: None
[DEBUG]2022-05-26 18:55:19,758: None
[DEBUG]2022-05-26 18:55:19,758: None
[DEBUG]2022-05-26 18:55:19,759: None
[DEBUG]2022-05-26 18:55:19,759: None
[DEBUG]2022-05-26 18:55:19,759: None
[DEBUG]2022-05-26 18:55:19,759: None
[DEBUG]2022-05-26 18:55:19,760: None
[DEBUG]2022-05-26 18:55:19,760: None
[DEBUG]2022-05-26 18:55:19,760: None
[DEBUG]2022-05-26 18:55:19,760: None
[DEBUG]2022-05-26 18:55:19,760: None
[DEBUG]2022-05-26 18:55:19,761: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:55:19,761: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:55:19,761: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:55:19,761: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:55:19,761: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:55:19,761: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:55:19,761: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:55:19,761: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:55:19,761: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:55:19,761: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:55:19,761: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:55:19,761: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:55:19,762: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:55:19,762: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:55:19,762: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:55:19,762: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:55:19,762: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:55:19,762: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:55:19,763: None
[DEBUG]2022-05-26 18:55:19,763: None
[DEBUG]2022-05-26 18:55:19,763: None
[DEBUG]2022-05-26 18:55:19,763: None
[DEBUG]2022-05-26 18:55:19,763: None
[DEBUG]2022-05-26 18:55:19,763: None
[DEBUG]2022-05-26 18:55:19,763: None
[DEBUG]2022-05-26 18:55:19,765: None
[DEBUG]2022-05-26 18:55:19,765: None
[DEBUG]2022-05-26 18:55:19,765: None
[DEBUG]2022-05-26 18:55:19,765: None
[DEBUG]2022-05-26 18:55:19,765: None
[DEBUG]2022-05-26 18:55:19,765: None
[DEBUG]2022-05-26 18:55:19,765: None
[DEBUG]2022-05-26 18:55:19,765: None
[DEBUG]2022-05-26 18:55:19,766: None
[DEBUG]2022-05-26 18:55:19,766: None
[DEBUG]2022-05-26 18:55:19,766: None
[DEBUG]2022-05-26 18:55:19,766: None
[DEBUG]2022-05-26 18:55:19,766: None
[DEBUG]2022-05-26 18:55:19,766: None
[DEBUG]2022-05-26 18:55:19,766: None
[DEBUG]2022-05-26 18:55:19,766: None
[DEBUG]2022-05-26 18:55:19,766: None
[DEBUG]2022-05-26 18:55:19,767: None
[DEBUG]2022-05-26 18:55:19,767: None
[DEBUG]2022-05-26 18:55:19,767: None
[DEBUG]2022-05-26 18:55:19,767: None
[DEBUG]2022-05-26 18:55:19,767: None
[DEBUG]2022-05-26 18:55:19,767: None
[DEBUG]2022-05-26 18:55:19,767: None
[DEBUG]2022-05-26 18:55:19,767: None
[DEBUG]2022-05-26 18:55:19,767: None
[DEBUG]2022-05-26 18:55:19,767: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,768: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,769: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,770: None
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,772: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,774: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,775: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,777: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,778: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,779: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,781: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:55:19,782: None
[DEBUG]2022-05-26 18:58:07,147: <re.Match object; span=(1088, 2314), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 18:58:07,147: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 18:58:07,147: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 18:58:07,149: None
[DEBUG]2022-05-26 18:58:07,149: None
[DEBUG]2022-05-26 18:58:07,150: None
[DEBUG]2022-05-26 18:58:07,150: None
[DEBUG]2022-05-26 18:58:07,150: None
[DEBUG]2022-05-26 18:58:07,150: None
[DEBUG]2022-05-26 18:58:07,150: None
[DEBUG]2022-05-26 18:58:07,150: None
[DEBUG]2022-05-26 18:58:07,150: None
[DEBUG]2022-05-26 18:58:07,151: None
[DEBUG]2022-05-26 18:58:07,151: None
[DEBUG]2022-05-26 18:58:07,151: None
[DEBUG]2022-05-26 18:58:07,151: None
[DEBUG]2022-05-26 18:58:07,151: None
[DEBUG]2022-05-26 18:58:07,152: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:58:07,152: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:58:07,152: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:58:07,152: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:58:07,152: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:58:07,152: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:58:07,152: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:58:07,152: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:58:07,152: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:58:07,152: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:58:07,152: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:58:07,152: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:58:07,152: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:58:07,152: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:58:07,152: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:58:07,152: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:58:07,152: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:58:07,152: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:58:07,153: None
[DEBUG]2022-05-26 18:58:07,153: None
[DEBUG]2022-05-26 18:58:07,153: None
[DEBUG]2022-05-26 18:58:07,153: None
[DEBUG]2022-05-26 18:58:07,153: None
[DEBUG]2022-05-26 18:58:07,153: None
[DEBUG]2022-05-26 18:58:07,153: None
[DEBUG]2022-05-26 18:58:07,154: None
[DEBUG]2022-05-26 18:58:07,154: None
[DEBUG]2022-05-26 18:58:07,154: None
[DEBUG]2022-05-26 18:58:07,154: None
[DEBUG]2022-05-26 18:58:07,154: None
[DEBUG]2022-05-26 18:58:07,154: None
[DEBUG]2022-05-26 18:58:07,154: None
[DEBUG]2022-05-26 18:58:07,154: None
[DEBUG]2022-05-26 18:58:07,155: None
[DEBUG]2022-05-26 18:58:07,155: None
[DEBUG]2022-05-26 18:58:07,155: None
[DEBUG]2022-05-26 18:58:07,155: None
[DEBUG]2022-05-26 18:58:07,155: None
[DEBUG]2022-05-26 18:58:07,155: None
[DEBUG]2022-05-26 18:58:07,155: None
[DEBUG]2022-05-26 18:58:07,155: None
[DEBUG]2022-05-26 18:58:07,155: None
[DEBUG]2022-05-26 18:58:07,156: None
[DEBUG]2022-05-26 18:58:07,156: None
[DEBUG]2022-05-26 18:58:07,156: None
[DEBUG]2022-05-26 18:58:07,156: None
[DEBUG]2022-05-26 18:58:07,156: None
[DEBUG]2022-05-26 18:58:07,156: None
[DEBUG]2022-05-26 18:58:07,156: None
[DEBUG]2022-05-26 18:58:07,156: None
[DEBUG]2022-05-26 18:58:07,156: None
[DEBUG]2022-05-26 18:58:07,156: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,157: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,158: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,159: None
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,160: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,161: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,162: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,163: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,164: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,165: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,166: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,167: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,169: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:58:07,171: None
[DEBUG]2022-05-26 18:59:03,190: <re.Match object; span=(1088, 2314), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 18:59:03,190: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 18:59:03,190: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 18:59:03,192: None
[DEBUG]2022-05-26 18:59:03,192: None
[DEBUG]2022-05-26 18:59:03,193: None
[DEBUG]2022-05-26 18:59:03,193: None
[DEBUG]2022-05-26 18:59:03,193: None
[DEBUG]2022-05-26 18:59:03,194: None
[DEBUG]2022-05-26 18:59:03,194: None
[DEBUG]2022-05-26 18:59:03,194: None
[DEBUG]2022-05-26 18:59:03,194: None
[DEBUG]2022-05-26 18:59:03,195: None
[DEBUG]2022-05-26 18:59:03,195: None
[DEBUG]2022-05-26 18:59:03,195: None
[DEBUG]2022-05-26 18:59:03,195: None
[DEBUG]2022-05-26 18:59:03,195: None
[DEBUG]2022-05-26 18:59:03,195: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:59:03,195: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:59:03,195: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:59:03,195: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:59:03,195: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:59:03,195: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 18:59:03,196: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:59:03,196: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:59:03,196: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:59:03,196: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:59:03,196: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:59:03,196: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 18:59:03,196: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:59:03,196: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:59:03,196: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:59:03,196: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:59:03,196: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:59:03,196: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 18:59:03,197: None
[DEBUG]2022-05-26 18:59:03,197: None
[DEBUG]2022-05-26 18:59:03,197: None
[DEBUG]2022-05-26 18:59:03,197: None
[DEBUG]2022-05-26 18:59:03,197: None
[DEBUG]2022-05-26 18:59:03,197: None
[DEBUG]2022-05-26 18:59:03,197: None
[DEBUG]2022-05-26 18:59:03,198: None
[DEBUG]2022-05-26 18:59:03,198: None
[DEBUG]2022-05-26 18:59:03,198: None
[DEBUG]2022-05-26 18:59:03,198: None
[DEBUG]2022-05-26 18:59:03,198: None
[DEBUG]2022-05-26 18:59:03,198: None
[DEBUG]2022-05-26 18:59:03,198: None
[DEBUG]2022-05-26 18:59:03,198: None
[DEBUG]2022-05-26 18:59:03,199: None
[DEBUG]2022-05-26 18:59:03,199: None
[DEBUG]2022-05-26 18:59:03,199: None
[DEBUG]2022-05-26 18:59:03,199: None
[DEBUG]2022-05-26 18:59:03,199: None
[DEBUG]2022-05-26 18:59:03,199: None
[DEBUG]2022-05-26 18:59:03,199: None
[DEBUG]2022-05-26 18:59:03,199: None
[DEBUG]2022-05-26 18:59:03,199: None
[DEBUG]2022-05-26 18:59:03,200: None
[DEBUG]2022-05-26 18:59:03,200: None
[DEBUG]2022-05-26 18:59:03,200: None
[DEBUG]2022-05-26 18:59:03,200: None
[DEBUG]2022-05-26 18:59:03,200: None
[DEBUG]2022-05-26 18:59:03,200: None
[DEBUG]2022-05-26 18:59:03,200: None
[DEBUG]2022-05-26 18:59:03,200: None
[DEBUG]2022-05-26 18:59:03,200: None
[DEBUG]2022-05-26 18:59:03,200: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,201: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,202: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,203: None
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,204: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,205: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,206: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,207: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,208: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,209: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,211: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,212: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,214: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,215: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 18:59:03,217: None
[DEBUG]2022-05-26 19:00:04,299: <re.Match object; span=(1088, 2314), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:00:04,299: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:00:04,299: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:00:04,301: None
[DEBUG]2022-05-26 19:00:04,301: None
[DEBUG]2022-05-26 19:00:04,302: None
[DEBUG]2022-05-26 19:00:04,302: None
[DEBUG]2022-05-26 19:00:04,302: None
[DEBUG]2022-05-26 19:00:04,302: None
[DEBUG]2022-05-26 19:00:04,302: None
[DEBUG]2022-05-26 19:00:04,302: None
[DEBUG]2022-05-26 19:00:04,302: None
[DEBUG]2022-05-26 19:00:04,303: None
[DEBUG]2022-05-26 19:00:04,303: None
[DEBUG]2022-05-26 19:00:04,303: None
[DEBUG]2022-05-26 19:00:04,303: None
[DEBUG]2022-05-26 19:00:04,303: None
[DEBUG]2022-05-26 19:00:04,304: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:00:04,304: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:00:04,304: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:00:04,304: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:00:04,304: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:00:04,304: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:00:04,304: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:00:04,304: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:00:04,304: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:00:04,304: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:00:04,304: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:00:04,304: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:00:04,304: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:00:04,304: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:00:04,304: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:00:04,304: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:00:04,304: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:00:04,304: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:00:04,305: None
[DEBUG]2022-05-26 19:00:04,305: None
[DEBUG]2022-05-26 19:00:04,305: None
[DEBUG]2022-05-26 19:00:04,305: None
[DEBUG]2022-05-26 19:00:04,305: None
[DEBUG]2022-05-26 19:00:04,305: None
[DEBUG]2022-05-26 19:00:04,305: None
[DEBUG]2022-05-26 19:00:04,306: None
[DEBUG]2022-05-26 19:00:04,306: None
[DEBUG]2022-05-26 19:00:04,306: None
[DEBUG]2022-05-26 19:00:04,306: None
[DEBUG]2022-05-26 19:00:04,306: None
[DEBUG]2022-05-26 19:00:04,306: None
[DEBUG]2022-05-26 19:00:04,306: None
[DEBUG]2022-05-26 19:00:04,306: None
[DEBUG]2022-05-26 19:00:04,307: None
[DEBUG]2022-05-26 19:00:04,307: None
[DEBUG]2022-05-26 19:00:04,307: None
[DEBUG]2022-05-26 19:00:04,307: None
[DEBUG]2022-05-26 19:00:04,307: None
[DEBUG]2022-05-26 19:00:04,307: None
[DEBUG]2022-05-26 19:00:04,307: None
[DEBUG]2022-05-26 19:00:04,307: None
[DEBUG]2022-05-26 19:00:04,307: None
[DEBUG]2022-05-26 19:00:04,308: None
[DEBUG]2022-05-26 19:00:04,308: None
[DEBUG]2022-05-26 19:00:04,308: None
[DEBUG]2022-05-26 19:00:04,308: None
[DEBUG]2022-05-26 19:00:04,308: None
[DEBUG]2022-05-26 19:00:04,308: None
[DEBUG]2022-05-26 19:00:04,308: None
[DEBUG]2022-05-26 19:00:04,308: None
[DEBUG]2022-05-26 19:00:04,308: None
[DEBUG]2022-05-26 19:00:04,308: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,309: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,310: None
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,311: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,312: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,313: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,314: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,315: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,316: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,317: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,319: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,320: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,321: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,323: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,324: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,325: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:00:04,327: None
[DEBUG]2022-05-26 19:03:06,160: <re.Match object; span=(1086, 2312), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:03:06,160: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:03:06,161: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:03:06,164: None
[DEBUG]2022-05-26 19:03:06,164: None
[DEBUG]2022-05-26 19:03:06,165: None
[DEBUG]2022-05-26 19:03:06,165: None
[DEBUG]2022-05-26 19:03:06,165: None
[DEBUG]2022-05-26 19:03:06,166: None
[DEBUG]2022-05-26 19:03:06,166: None
[DEBUG]2022-05-26 19:03:06,166: None
[DEBUG]2022-05-26 19:03:06,166: None
[DEBUG]2022-05-26 19:03:06,167: None
[DEBUG]2022-05-26 19:03:06,167: None
[DEBUG]2022-05-26 19:03:06,167: None
[DEBUG]2022-05-26 19:03:06,167: None
[DEBUG]2022-05-26 19:03:06,167: None
[DEBUG]2022-05-26 19:03:06,169: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:06,169: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:06,169: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:06,169: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:06,169: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:06,169: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:06,170: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:06,170: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:06,170: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:06,170: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:06,170: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:06,170: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:06,170: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:06,170: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:06,170: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:06,170: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:06,170: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:06,170: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:06,171: None
[DEBUG]2022-05-26 19:03:06,171: None
[DEBUG]2022-05-26 19:03:06,171: None
[DEBUG]2022-05-26 19:03:06,171: None
[DEBUG]2022-05-26 19:03:06,171: None
[DEBUG]2022-05-26 19:03:06,171: None
[DEBUG]2022-05-26 19:03:06,171: None
[DEBUG]2022-05-26 19:03:06,173: None
[DEBUG]2022-05-26 19:03:06,173: None
[DEBUG]2022-05-26 19:03:06,173: None
[DEBUG]2022-05-26 19:03:06,173: None
[DEBUG]2022-05-26 19:03:06,173: None
[DEBUG]2022-05-26 19:03:06,173: None
[DEBUG]2022-05-26 19:03:06,173: None
[DEBUG]2022-05-26 19:03:06,173: None
[DEBUG]2022-05-26 19:03:06,174: None
[DEBUG]2022-05-26 19:03:06,174: None
[DEBUG]2022-05-26 19:03:06,174: None
[DEBUG]2022-05-26 19:03:06,174: None
[DEBUG]2022-05-26 19:03:06,174: None
[DEBUG]2022-05-26 19:03:06,174: None
[DEBUG]2022-05-26 19:03:06,174: None
[DEBUG]2022-05-26 19:03:06,174: None
[DEBUG]2022-05-26 19:03:06,174: None
[DEBUG]2022-05-26 19:03:06,176: None
[DEBUG]2022-05-26 19:03:06,176: None
[DEBUG]2022-05-26 19:03:06,176: None
[DEBUG]2022-05-26 19:03:06,176: None
[DEBUG]2022-05-26 19:03:06,176: None
[DEBUG]2022-05-26 19:03:06,176: None
[DEBUG]2022-05-26 19:03:06,176: None
[DEBUG]2022-05-26 19:03:06,176: None
[DEBUG]2022-05-26 19:03:06,176: None
[DEBUG]2022-05-26 19:03:06,176: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,177: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,179: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,181: None
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,183: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,184: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,187: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,189: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,190: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,192: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,194: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,197: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,199: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,201: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,203: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,205: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,207: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:06,210: None
[DEBUG]2022-05-26 19:03:45,118: <re.Match object; span=(1081, 2307), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:03:45,118: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:03:45,118: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:03:45,120: None
[DEBUG]2022-05-26 19:03:45,120: None
[DEBUG]2022-05-26 19:03:45,121: None
[DEBUG]2022-05-26 19:03:45,121: None
[DEBUG]2022-05-26 19:03:45,121: None
[DEBUG]2022-05-26 19:03:45,121: None
[DEBUG]2022-05-26 19:03:45,121: None
[DEBUG]2022-05-26 19:03:45,121: None
[DEBUG]2022-05-26 19:03:45,121: None
[DEBUG]2022-05-26 19:03:45,122: None
[DEBUG]2022-05-26 19:03:45,122: None
[DEBUG]2022-05-26 19:03:45,122: None
[DEBUG]2022-05-26 19:03:45,122: None
[DEBUG]2022-05-26 19:03:45,122: None
[DEBUG]2022-05-26 19:03:45,123: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:45,123: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:45,123: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:45,123: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:45,123: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:45,123: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:03:45,123: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:45,123: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:45,123: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:45,123: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:45,123: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:45,123: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:03:45,123: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:45,123: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:45,123: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:45,123: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:45,123: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:45,123: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:03:45,124: None
[DEBUG]2022-05-26 19:03:45,124: None
[DEBUG]2022-05-26 19:03:45,124: None
[DEBUG]2022-05-26 19:03:45,124: None
[DEBUG]2022-05-26 19:03:45,124: None
[DEBUG]2022-05-26 19:03:45,124: None
[DEBUG]2022-05-26 19:03:45,124: None
[DEBUG]2022-05-26 19:03:45,125: None
[DEBUG]2022-05-26 19:03:45,125: None
[DEBUG]2022-05-26 19:03:45,125: None
[DEBUG]2022-05-26 19:03:45,125: None
[DEBUG]2022-05-26 19:03:45,125: None
[DEBUG]2022-05-26 19:03:45,125: None
[DEBUG]2022-05-26 19:03:45,125: None
[DEBUG]2022-05-26 19:03:45,125: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,126: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,127: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,128: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,129: None
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,130: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,131: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,132: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,133: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,134: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,135: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,136: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,138: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,139: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,140: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,141: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,142: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,144: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:03:45,145: None
[DEBUG]2022-05-26 19:06:14,479: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:06:14,479: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:06:14,479: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:06:14,482: None
[DEBUG]2022-05-26 19:06:14,482: None
[DEBUG]2022-05-26 19:06:14,483: None
[DEBUG]2022-05-26 19:06:14,483: None
[DEBUG]2022-05-26 19:06:14,483: None
[DEBUG]2022-05-26 19:06:14,484: None
[DEBUG]2022-05-26 19:06:14,484: None
[DEBUG]2022-05-26 19:06:14,484: None
[DEBUG]2022-05-26 19:06:14,484: None
[DEBUG]2022-05-26 19:06:14,485: None
[DEBUG]2022-05-26 19:06:14,485: None
[DEBUG]2022-05-26 19:06:14,485: None
[DEBUG]2022-05-26 19:06:14,485: None
[DEBUG]2022-05-26 19:06:14,485: None
[DEBUG]2022-05-26 19:06:14,485: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:06:14,485: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:06:14,485: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:06:14,485: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:06:14,485: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:06:14,485: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:06:14,486: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:06:14,486: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:06:14,486: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:06:14,486: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:06:14,486: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:06:14,486: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:06:14,486: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:06:14,486: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:06:14,486: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:06:14,486: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:06:14,486: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:06:14,486: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:06:14,487: None
[DEBUG]2022-05-26 19:06:14,487: None
[DEBUG]2022-05-26 19:06:14,487: None
[DEBUG]2022-05-26 19:06:14,487: None
[DEBUG]2022-05-26 19:06:14,487: None
[DEBUG]2022-05-26 19:06:14,487: None
[DEBUG]2022-05-26 19:06:14,487: None
[DEBUG]2022-05-26 19:06:14,488: None
[DEBUG]2022-05-26 19:06:14,488: None
[DEBUG]2022-05-26 19:06:14,488: None
[DEBUG]2022-05-26 19:06:14,488: None
[DEBUG]2022-05-26 19:06:14,488: None
[DEBUG]2022-05-26 19:06:14,488: None
[DEBUG]2022-05-26 19:06:14,488: None
[DEBUG]2022-05-26 19:06:14,488: None
[DEBUG]2022-05-26 19:06:14,489: None
[DEBUG]2022-05-26 19:06:14,489: None
[DEBUG]2022-05-26 19:06:14,489: None
[DEBUG]2022-05-26 19:06:14,489: None
[DEBUG]2022-05-26 19:06:14,489: None
[DEBUG]2022-05-26 19:06:14,489: None
[DEBUG]2022-05-26 19:06:14,489: None
[DEBUG]2022-05-26 19:06:14,489: None
[DEBUG]2022-05-26 19:06:14,489: None
[DEBUG]2022-05-26 19:06:14,490: None
[DEBUG]2022-05-26 19:06:14,490: None
[DEBUG]2022-05-26 19:06:14,490: None
[DEBUG]2022-05-26 19:06:14,490: None
[DEBUG]2022-05-26 19:06:14,490: None
[DEBUG]2022-05-26 19:06:14,490: None
[DEBUG]2022-05-26 19:06:14,490: None
[DEBUG]2022-05-26 19:06:14,490: None
[DEBUG]2022-05-26 19:06:14,490: None
[DEBUG]2022-05-26 19:06:14,490: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,491: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,492: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,493: None
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,494: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,495: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,496: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,497: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,498: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,499: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,500: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,501: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,503: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,504: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,505: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,507: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,509: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:06:14,510: None
[DEBUG]2022-05-26 19:08:46,427: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:08:46,428: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:08:46,428: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:08:46,430: None
[DEBUG]2022-05-26 19:08:46,430: None
[DEBUG]2022-05-26 19:08:46,430: None
[DEBUG]2022-05-26 19:08:46,430: None
[DEBUG]2022-05-26 19:08:46,430: None
[DEBUG]2022-05-26 19:08:46,431: None
[DEBUG]2022-05-26 19:08:46,431: None
[DEBUG]2022-05-26 19:08:46,431: None
[DEBUG]2022-05-26 19:08:46,431: None
[DEBUG]2022-05-26 19:08:46,432: None
[DEBUG]2022-05-26 19:08:46,432: None
[DEBUG]2022-05-26 19:08:46,432: None
[DEBUG]2022-05-26 19:08:46,432: None
[DEBUG]2022-05-26 19:08:46,432: None
[DEBUG]2022-05-26 19:08:46,432: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:08:46,432: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:08:46,432: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:08:46,432: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:08:46,432: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:08:46,432: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:08:46,433: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:08:46,433: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:08:46,433: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:08:46,433: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:08:46,433: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:08:46,433: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:08:46,433: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:08:46,433: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:08:46,433: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:08:46,433: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:08:46,433: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:08:46,433: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,434: None
[DEBUG]2022-05-26 19:08:46,435: None
[DEBUG]2022-05-26 19:08:46,435: None
[DEBUG]2022-05-26 19:08:46,435: None
[DEBUG]2022-05-26 19:08:46,435: None
[DEBUG]2022-05-26 19:08:46,435: None
[DEBUG]2022-05-26 19:08:46,435: None
[DEBUG]2022-05-26 19:08:46,435: None
[DEBUG]2022-05-26 19:08:46,435: None
[DEBUG]2022-05-26 19:08:46,435: None
[DEBUG]2022-05-26 19:08:46,436: None
[DEBUG]2022-05-26 19:08:46,436: None
[DEBUG]2022-05-26 19:08:46,436: None
[DEBUG]2022-05-26 19:08:46,436: None
[DEBUG]2022-05-26 19:08:46,436: None
[DEBUG]2022-05-26 19:08:46,436: None
[DEBUG]2022-05-26 19:08:46,436: None
[DEBUG]2022-05-26 19:08:46,436: None
[DEBUG]2022-05-26 19:08:46,436: None
[DEBUG]2022-05-26 19:08:46,436: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,437: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,438: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,439: None
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,440: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,441: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,442: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,443: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,444: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,445: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,446: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,447: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,448: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,449: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,451: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,454: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,455: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:08:46,457: None
[DEBUG]2022-05-26 19:12:48,036: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:12:48,036: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:12:48,036: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:12:48,039: None
[DEBUG]2022-05-26 19:12:48,039: None
[DEBUG]2022-05-26 19:12:48,040: None
[DEBUG]2022-05-26 19:12:48,040: None
[DEBUG]2022-05-26 19:12:48,040: None
[DEBUG]2022-05-26 19:12:48,040: None
[DEBUG]2022-05-26 19:12:48,040: None
[DEBUG]2022-05-26 19:12:48,040: None
[DEBUG]2022-05-26 19:12:48,040: None
[DEBUG]2022-05-26 19:12:48,041: None
[DEBUG]2022-05-26 19:12:48,041: None
[DEBUG]2022-05-26 19:12:48,041: None
[DEBUG]2022-05-26 19:12:48,041: None
[DEBUG]2022-05-26 19:12:48,041: None
[DEBUG]2022-05-26 19:12:48,042: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:12:48,042: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:12:48,042: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:12:48,042: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:12:48,042: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:12:48,042: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:12:48,042: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:12:48,042: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:12:48,042: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:12:48,042: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:12:48,042: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:12:48,042: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:12:48,043: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:12:48,043: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:12:48,043: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:12:48,043: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:12:48,043: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:12:48,043: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:12:48,044: None
[DEBUG]2022-05-26 19:12:48,044: None
[DEBUG]2022-05-26 19:12:48,044: None
[DEBUG]2022-05-26 19:12:48,044: None
[DEBUG]2022-05-26 19:12:48,044: None
[DEBUG]2022-05-26 19:12:48,044: None
[DEBUG]2022-05-26 19:12:48,044: None
[DEBUG]2022-05-26 19:12:48,045: None
[DEBUG]2022-05-26 19:12:48,045: None
[DEBUG]2022-05-26 19:12:48,045: None
[DEBUG]2022-05-26 19:12:48,045: None
[DEBUG]2022-05-26 19:12:48,045: None
[DEBUG]2022-05-26 19:12:48,045: None
[DEBUG]2022-05-26 19:12:48,045: None
[DEBUG]2022-05-26 19:12:48,045: None
[DEBUG]2022-05-26 19:12:48,046: None
[DEBUG]2022-05-26 19:12:48,046: None
[DEBUG]2022-05-26 19:12:48,046: None
[DEBUG]2022-05-26 19:12:48,046: None
[DEBUG]2022-05-26 19:12:48,046: None
[DEBUG]2022-05-26 19:12:48,046: None
[DEBUG]2022-05-26 19:12:48,046: None
[DEBUG]2022-05-26 19:12:48,046: None
[DEBUG]2022-05-26 19:12:48,046: None
[DEBUG]2022-05-26 19:12:48,047: None
[DEBUG]2022-05-26 19:12:48,047: None
[DEBUG]2022-05-26 19:12:48,047: None
[DEBUG]2022-05-26 19:12:48,047: None
[DEBUG]2022-05-26 19:12:48,047: None
[DEBUG]2022-05-26 19:12:48,047: None
[DEBUG]2022-05-26 19:12:48,047: None
[DEBUG]2022-05-26 19:12:48,047: None
[DEBUG]2022-05-26 19:12:48,047: None
[DEBUG]2022-05-26 19:12:48,047: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,048: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,049: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,050: None
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,052: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,053: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,054: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,055: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,057: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,059: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,061: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,062: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,063: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,064: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,066: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,067: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,068: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,070: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:12:48,072: None
[DEBUG]2022-05-26 19:13:11,115: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:13:11,115: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:13:11,115: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:13:11,117: None
[DEBUG]2022-05-26 19:13:11,117: None
[DEBUG]2022-05-26 19:13:11,118: None
[DEBUG]2022-05-26 19:13:11,118: None
[DEBUG]2022-05-26 19:13:11,118: None
[DEBUG]2022-05-26 19:13:11,118: None
[DEBUG]2022-05-26 19:13:11,118: None
[DEBUG]2022-05-26 19:13:11,118: None
[DEBUG]2022-05-26 19:13:11,118: None
[DEBUG]2022-05-26 19:13:11,119: None
[DEBUG]2022-05-26 19:13:11,119: None
[DEBUG]2022-05-26 19:13:11,119: None
[DEBUG]2022-05-26 19:13:11,119: None
[DEBUG]2022-05-26 19:13:11,119: None
[DEBUG]2022-05-26 19:13:11,120: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:13:11,120: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:13:11,120: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:13:11,120: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:13:11,120: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:13:11,120: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:13:11,120: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:13:11,120: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:13:11,120: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:13:11,120: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:13:11,120: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:13:11,120: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:13:11,120: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:13:11,120: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:13:11,120: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:13:11,120: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:13:11,120: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:13:11,120: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:13:11,121: None
[DEBUG]2022-05-26 19:13:11,121: None
[DEBUG]2022-05-26 19:13:11,121: None
[DEBUG]2022-05-26 19:13:11,121: None
[DEBUG]2022-05-26 19:13:11,121: None
[DEBUG]2022-05-26 19:13:11,121: None
[DEBUG]2022-05-26 19:13:11,121: None
[DEBUG]2022-05-26 19:13:11,122: None
[DEBUG]2022-05-26 19:13:11,122: None
[DEBUG]2022-05-26 19:13:11,122: None
[DEBUG]2022-05-26 19:13:11,122: None
[DEBUG]2022-05-26 19:13:11,122: None
[DEBUG]2022-05-26 19:13:11,122: None
[DEBUG]2022-05-26 19:13:11,122: None
[DEBUG]2022-05-26 19:13:11,122: None
[DEBUG]2022-05-26 19:13:11,123: None
[DEBUG]2022-05-26 19:13:11,123: None
[DEBUG]2022-05-26 19:13:11,123: None
[DEBUG]2022-05-26 19:13:11,123: None
[DEBUG]2022-05-26 19:13:11,123: None
[DEBUG]2022-05-26 19:13:11,123: None
[DEBUG]2022-05-26 19:13:11,123: None
[DEBUG]2022-05-26 19:13:11,123: None
[DEBUG]2022-05-26 19:13:11,123: None
[DEBUG]2022-05-26 19:13:11,124: None
[DEBUG]2022-05-26 19:13:11,124: None
[DEBUG]2022-05-26 19:13:11,124: None
[DEBUG]2022-05-26 19:13:11,124: None
[DEBUG]2022-05-26 19:13:11,124: None
[DEBUG]2022-05-26 19:13:11,124: None
[DEBUG]2022-05-26 19:13:11,124: None
[DEBUG]2022-05-26 19:13:11,124: None
[DEBUG]2022-05-26 19:13:11,124: None
[DEBUG]2022-05-26 19:13:11,124: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,125: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,126: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,127: None
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,129: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,130: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,131: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,132: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,133: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,134: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,136: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,137: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,139: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,140: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,142: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,143: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,145: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:13:11,147: None
[DEBUG]2022-05-26 19:18:28,860: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:18:28,860: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:18:28,860: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:18:28,862: None
[DEBUG]2022-05-26 19:18:28,862: None
[DEBUG]2022-05-26 19:18:28,863: None
[DEBUG]2022-05-26 19:18:28,863: None
[DEBUG]2022-05-26 19:18:28,863: None
[DEBUG]2022-05-26 19:18:28,864: None
[DEBUG]2022-05-26 19:18:28,864: None
[DEBUG]2022-05-26 19:18:28,864: None
[DEBUG]2022-05-26 19:18:28,864: None
[DEBUG]2022-05-26 19:18:28,864: None
[DEBUG]2022-05-26 19:18:28,864: None
[DEBUG]2022-05-26 19:18:28,864: None
[DEBUG]2022-05-26 19:18:28,864: None
[DEBUG]2022-05-26 19:18:28,864: None
[DEBUG]2022-05-26 19:18:28,865: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:18:28,865: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:18:28,865: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:18:28,865: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:18:28,865: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:18:28,865: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:18:28,865: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:18:28,865: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:18:28,865: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:18:28,865: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:18:28,865: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:18:28,865: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:18:28,866: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:18:28,866: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:18:28,866: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:18:28,866: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:18:28,866: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:18:28,866: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,867: None
[DEBUG]2022-05-26 19:18:28,868: None
[DEBUG]2022-05-26 19:18:28,868: None
[DEBUG]2022-05-26 19:18:28,868: None
[DEBUG]2022-05-26 19:18:28,868: None
[DEBUG]2022-05-26 19:18:28,868: None
[DEBUG]2022-05-26 19:18:28,868: None
[DEBUG]2022-05-26 19:18:28,868: None
[DEBUG]2022-05-26 19:18:28,868: None
[DEBUG]2022-05-26 19:18:28,868: None
[DEBUG]2022-05-26 19:18:28,869: None
[DEBUG]2022-05-26 19:18:28,869: None
[DEBUG]2022-05-26 19:18:28,869: None
[DEBUG]2022-05-26 19:18:28,869: None
[DEBUG]2022-05-26 19:18:28,869: None
[DEBUG]2022-05-26 19:18:28,869: None
[DEBUG]2022-05-26 19:18:28,869: None
[DEBUG]2022-05-26 19:18:28,869: None
[DEBUG]2022-05-26 19:18:28,869: None
[DEBUG]2022-05-26 19:18:28,869: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,870: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,871: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,872: None
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,873: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,874: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,875: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,876: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,877: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,878: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,879: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,882: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,883: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,885: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,886: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,887: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,889: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:18:28,890: None
[DEBUG]2022-05-26 19:20:26,008: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:20:26,008: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:20:26,008: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:20:26,011: None
[DEBUG]2022-05-26 19:20:26,011: None
[DEBUG]2022-05-26 19:20:26,012: None
[DEBUG]2022-05-26 19:20:26,012: None
[DEBUG]2022-05-26 19:20:26,012: None
[DEBUG]2022-05-26 19:20:26,013: None
[DEBUG]2022-05-26 19:20:26,013: None
[DEBUG]2022-05-26 19:20:26,013: None
[DEBUG]2022-05-26 19:20:26,013: None
[DEBUG]2022-05-26 19:20:26,014: None
[DEBUG]2022-05-26 19:20:26,014: None
[DEBUG]2022-05-26 19:20:26,014: None
[DEBUG]2022-05-26 19:20:26,014: None
[DEBUG]2022-05-26 19:20:26,014: None
[DEBUG]2022-05-26 19:20:26,015: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:20:26,015: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:20:26,015: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:20:26,015: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:20:26,015: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:20:26,015: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:20:26,015: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:20:26,015: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:20:26,015: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:20:26,015: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:20:26,015: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:20:26,015: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:20:26,015: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:20:26,015: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:20:26,015: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:20:26,015: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:20:26,015: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:20:26,015: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:20:26,017: None
[DEBUG]2022-05-26 19:20:26,017: None
[DEBUG]2022-05-26 19:20:26,017: None
[DEBUG]2022-05-26 19:20:26,017: None
[DEBUG]2022-05-26 19:20:26,017: None
[DEBUG]2022-05-26 19:20:26,017: None
[DEBUG]2022-05-26 19:20:26,017: None
[DEBUG]2022-05-26 19:20:26,018: None
[DEBUG]2022-05-26 19:20:26,018: None
[DEBUG]2022-05-26 19:20:26,018: None
[DEBUG]2022-05-26 19:20:26,018: None
[DEBUG]2022-05-26 19:20:26,018: None
[DEBUG]2022-05-26 19:20:26,018: None
[DEBUG]2022-05-26 19:20:26,018: None
[DEBUG]2022-05-26 19:20:26,018: None
[DEBUG]2022-05-26 19:20:26,019: None
[DEBUG]2022-05-26 19:20:26,019: None
[DEBUG]2022-05-26 19:20:26,019: None
[DEBUG]2022-05-26 19:20:26,019: None
[DEBUG]2022-05-26 19:20:26,019: None
[DEBUG]2022-05-26 19:20:26,019: None
[DEBUG]2022-05-26 19:20:26,019: None
[DEBUG]2022-05-26 19:20:26,019: None
[DEBUG]2022-05-26 19:20:26,019: None
[DEBUG]2022-05-26 19:20:26,020: None
[DEBUG]2022-05-26 19:20:26,020: None
[DEBUG]2022-05-26 19:20:26,020: None
[DEBUG]2022-05-26 19:20:26,020: None
[DEBUG]2022-05-26 19:20:26,020: None
[DEBUG]2022-05-26 19:20:26,020: None
[DEBUG]2022-05-26 19:20:26,020: None
[DEBUG]2022-05-26 19:20:26,020: None
[DEBUG]2022-05-26 19:20:26,020: None
[DEBUG]2022-05-26 19:20:26,020: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,021: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,022: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,023: None
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,024: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,025: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,026: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,027: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,028: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,029: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,031: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,032: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,033: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,034: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,036: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,037: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,047: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:20:26,049: None
[DEBUG]2022-05-26 19:22:31,416: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:22:31,416: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:22:31,416: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:22:31,418: None
[DEBUG]2022-05-26 19:22:31,418: None
[DEBUG]2022-05-26 19:22:31,419: None
[DEBUG]2022-05-26 19:22:31,419: None
[DEBUG]2022-05-26 19:22:31,419: None
[DEBUG]2022-05-26 19:22:31,419: None
[DEBUG]2022-05-26 19:22:31,419: None
[DEBUG]2022-05-26 19:22:31,419: None
[DEBUG]2022-05-26 19:22:31,419: None
[DEBUG]2022-05-26 19:22:31,420: None
[DEBUG]2022-05-26 19:22:31,420: None
[DEBUG]2022-05-26 19:22:31,420: None
[DEBUG]2022-05-26 19:22:31,420: None
[DEBUG]2022-05-26 19:22:31,420: None
[DEBUG]2022-05-26 19:22:31,421: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:22:31,421: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:22:31,421: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:22:31,421: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:22:31,421: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:22:31,421: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:22:31,421: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:22:31,421: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:22:31,421: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:22:31,421: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:22:31,421: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:22:31,421: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:22:31,421: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:22:31,421: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:22:31,421: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:22:31,421: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:22:31,421: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:22:31,421: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:22:31,422: None
[DEBUG]2022-05-26 19:22:31,422: None
[DEBUG]2022-05-26 19:22:31,422: None
[DEBUG]2022-05-26 19:22:31,422: None
[DEBUG]2022-05-26 19:22:31,422: None
[DEBUG]2022-05-26 19:22:31,422: None
[DEBUG]2022-05-26 19:22:31,422: None
[DEBUG]2022-05-26 19:22:31,423: None
[DEBUG]2022-05-26 19:22:31,423: None
[DEBUG]2022-05-26 19:22:31,423: None
[DEBUG]2022-05-26 19:22:31,423: None
[DEBUG]2022-05-26 19:22:31,423: None
[DEBUG]2022-05-26 19:22:31,423: None
[DEBUG]2022-05-26 19:22:31,423: None
[DEBUG]2022-05-26 19:22:31,423: None
[DEBUG]2022-05-26 19:22:31,425: None
[DEBUG]2022-05-26 19:22:31,425: None
[DEBUG]2022-05-26 19:22:31,425: None
[DEBUG]2022-05-26 19:22:31,425: None
[DEBUG]2022-05-26 19:22:31,425: None
[DEBUG]2022-05-26 19:22:31,425: None
[DEBUG]2022-05-26 19:22:31,425: None
[DEBUG]2022-05-26 19:22:31,425: None
[DEBUG]2022-05-26 19:22:31,425: None
[DEBUG]2022-05-26 19:22:31,426: None
[DEBUG]2022-05-26 19:22:31,426: None
[DEBUG]2022-05-26 19:22:31,426: None
[DEBUG]2022-05-26 19:22:31,426: None
[DEBUG]2022-05-26 19:22:31,426: None
[DEBUG]2022-05-26 19:22:31,426: None
[DEBUG]2022-05-26 19:22:31,426: None
[DEBUG]2022-05-26 19:22:31,426: None
[DEBUG]2022-05-26 19:22:31,426: None
[DEBUG]2022-05-26 19:22:31,426: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,428: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,429: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,431: None
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,432: <re.Match object; span=(1596, 1719), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,433: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,434: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,435: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,437: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,438: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,439: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,440: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,442: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,443: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,444: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,445: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,447: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,448: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:22:31,450: None
[DEBUG]2022-05-26 19:24:54,342: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:24:54,342: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:24:54,342: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:24:54,345: None
[DEBUG]2022-05-26 19:24:54,345: None
[DEBUG]2022-05-26 19:24:54,345: None
[DEBUG]2022-05-26 19:24:54,345: None
[DEBUG]2022-05-26 19:24:54,345: None
[DEBUG]2022-05-26 19:24:54,346: None
[DEBUG]2022-05-26 19:24:54,346: None
[DEBUG]2022-05-26 19:24:54,346: None
[DEBUG]2022-05-26 19:24:54,346: None
[DEBUG]2022-05-26 19:24:54,347: None
[DEBUG]2022-05-26 19:24:54,347: None
[DEBUG]2022-05-26 19:24:54,347: None
[DEBUG]2022-05-26 19:24:54,347: None
[DEBUG]2022-05-26 19:24:54,347: None
[DEBUG]2022-05-26 19:24:54,347: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:24:54,347: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:24:54,347: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:24:54,347: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:24:54,347: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:24:54,347: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:24:54,348: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:24:54,348: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:24:54,348: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:24:54,348: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:24:54,348: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:24:54,348: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:24:54,348: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:24:54,348: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:24:54,348: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:24:54,348: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:24:54,348: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:24:54,348: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:24:54,349: None
[DEBUG]2022-05-26 19:24:54,349: None
[DEBUG]2022-05-26 19:24:54,349: None
[DEBUG]2022-05-26 19:24:54,349: None
[DEBUG]2022-05-26 19:24:54,349: None
[DEBUG]2022-05-26 19:24:54,349: None
[DEBUG]2022-05-26 19:24:54,349: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,350: None
[DEBUG]2022-05-26 19:24:54,351: None
[DEBUG]2022-05-26 19:24:54,351: None
[DEBUG]2022-05-26 19:24:54,351: None
[DEBUG]2022-05-26 19:24:54,351: None
[DEBUG]2022-05-26 19:24:54,351: None
[DEBUG]2022-05-26 19:24:54,351: None
[DEBUG]2022-05-26 19:24:54,351: None
[DEBUG]2022-05-26 19:24:54,351: None
[DEBUG]2022-05-26 19:24:54,351: None
[DEBUG]2022-05-26 19:24:54,351: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,352: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,353: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,354: None
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,355: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,356: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,358: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,359: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,360: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,362: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,363: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,364: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,366: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,367: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,368: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,369: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,370: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:24:54,372: None
[DEBUG]2022-05-26 19:26:17,997: <re.Match object; span=(1081, 1957), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:26:17,998: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:26:17,998: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:26:18,000: None
[DEBUG]2022-05-26 19:26:18,000: None
[DEBUG]2022-05-26 19:26:18,000: None
[DEBUG]2022-05-26 19:26:18,000: None
[DEBUG]2022-05-26 19:26:18,000: None
[DEBUG]2022-05-26 19:26:18,001: None
[DEBUG]2022-05-26 19:26:18,001: None
[DEBUG]2022-05-26 19:26:18,001: None
[DEBUG]2022-05-26 19:26:18,001: None
[DEBUG]2022-05-26 19:26:18,002: None
[DEBUG]2022-05-26 19:26:18,002: None
[DEBUG]2022-05-26 19:26:18,002: None
[DEBUG]2022-05-26 19:26:18,002: None
[DEBUG]2022-05-26 19:26:18,002: None
[DEBUG]2022-05-26 19:26:18,003: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:18,003: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:18,003: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:18,003: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:18,003: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:18,003: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:18,003: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:18,003: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:18,003: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:18,003: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:18,003: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:18,003: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:18,003: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:18,003: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:18,003: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:18,003: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:18,003: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:18,003: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:18,004: None
[DEBUG]2022-05-26 19:26:18,004: None
[DEBUG]2022-05-26 19:26:18,004: None
[DEBUG]2022-05-26 19:26:18,004: None
[DEBUG]2022-05-26 19:26:18,004: None
[DEBUG]2022-05-26 19:26:18,004: None
[DEBUG]2022-05-26 19:26:18,004: None
[DEBUG]2022-05-26 19:26:18,005: None
[DEBUG]2022-05-26 19:26:18,005: None
[DEBUG]2022-05-26 19:26:18,005: None
[DEBUG]2022-05-26 19:26:18,005: None
[DEBUG]2022-05-26 19:26:18,005: None
[DEBUG]2022-05-26 19:26:18,005: None
[DEBUG]2022-05-26 19:26:18,005: None
[DEBUG]2022-05-26 19:26:18,005: None
[DEBUG]2022-05-26 19:26:18,006: None
[DEBUG]2022-05-26 19:26:18,006: None
[DEBUG]2022-05-26 19:26:18,006: None
[DEBUG]2022-05-26 19:26:18,006: None
[DEBUG]2022-05-26 19:26:18,006: None
[DEBUG]2022-05-26 19:26:18,006: None
[DEBUG]2022-05-26 19:26:18,006: None
[DEBUG]2022-05-26 19:26:18,006: None
[DEBUG]2022-05-26 19:26:18,006: None
[DEBUG]2022-05-26 19:26:18,007: None
[DEBUG]2022-05-26 19:26:18,007: None
[DEBUG]2022-05-26 19:26:18,007: None
[DEBUG]2022-05-26 19:26:18,007: None
[DEBUG]2022-05-26 19:26:18,007: None
[DEBUG]2022-05-26 19:26:18,007: None
[DEBUG]2022-05-26 19:26:18,007: None
[DEBUG]2022-05-26 19:26:18,007: None
[DEBUG]2022-05-26 19:26:18,007: None
[DEBUG]2022-05-26 19:26:18,007: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,008: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,009: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,010: None
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,011: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,012: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,013: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,015: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,016: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,017: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,018: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,019: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,020: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,022: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,023: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,024: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,026: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:18,028: None
[DEBUG]2022-05-26 19:26:44,866: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:26:44,867: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:26:44,867: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:26:44,870: None
[DEBUG]2022-05-26 19:26:44,870: None
[DEBUG]2022-05-26 19:26:44,870: None
[DEBUG]2022-05-26 19:26:44,870: None
[DEBUG]2022-05-26 19:26:44,870: None
[DEBUG]2022-05-26 19:26:44,871: None
[DEBUG]2022-05-26 19:26:44,871: None
[DEBUG]2022-05-26 19:26:44,871: None
[DEBUG]2022-05-26 19:26:44,871: None
[DEBUG]2022-05-26 19:26:44,872: None
[DEBUG]2022-05-26 19:26:44,872: None
[DEBUG]2022-05-26 19:26:44,872: None
[DEBUG]2022-05-26 19:26:44,872: None
[DEBUG]2022-05-26 19:26:44,872: None
[DEBUG]2022-05-26 19:26:44,873: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:44,873: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:44,873: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:44,873: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:44,873: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:44,873: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:26:44,873: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:44,873: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:44,873: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:44,873: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:44,873: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:44,873: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:26:44,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:44,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:44,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:44,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:44,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:44,873: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:26:44,874: None
[DEBUG]2022-05-26 19:26:44,874: None
[DEBUG]2022-05-26 19:26:44,874: None
[DEBUG]2022-05-26 19:26:44,874: None
[DEBUG]2022-05-26 19:26:44,874: None
[DEBUG]2022-05-26 19:26:44,874: None
[DEBUG]2022-05-26 19:26:44,874: None
[DEBUG]2022-05-26 19:26:44,875: None
[DEBUG]2022-05-26 19:26:44,875: None
[DEBUG]2022-05-26 19:26:44,875: None
[DEBUG]2022-05-26 19:26:44,875: None
[DEBUG]2022-05-26 19:26:44,875: None
[DEBUG]2022-05-26 19:26:44,875: None
[DEBUG]2022-05-26 19:26:44,875: None
[DEBUG]2022-05-26 19:26:44,875: None
[DEBUG]2022-05-26 19:26:44,876: None
[DEBUG]2022-05-26 19:26:44,876: None
[DEBUG]2022-05-26 19:26:44,876: None
[DEBUG]2022-05-26 19:26:44,876: None
[DEBUG]2022-05-26 19:26:44,876: None
[DEBUG]2022-05-26 19:26:44,876: None
[DEBUG]2022-05-26 19:26:44,876: None
[DEBUG]2022-05-26 19:26:44,876: None
[DEBUG]2022-05-26 19:26:44,876: None
[DEBUG]2022-05-26 19:26:44,877: None
[DEBUG]2022-05-26 19:26:44,877: None
[DEBUG]2022-05-26 19:26:44,877: None
[DEBUG]2022-05-26 19:26:44,877: None
[DEBUG]2022-05-26 19:26:44,877: None
[DEBUG]2022-05-26 19:26:44,877: None
[DEBUG]2022-05-26 19:26:44,877: None
[DEBUG]2022-05-26 19:26:44,877: None
[DEBUG]2022-05-26 19:26:44,877: None
[DEBUG]2022-05-26 19:26:44,877: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,878: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,879: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,880: None
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,882: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,883: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,886: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,887: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,889: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,890: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,891: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,893: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,894: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,895: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,897: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,898: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,900: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:26:44,902: None
[DEBUG]2022-05-26 19:27:46,577: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:27:46,577: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:27:46,577: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:27:46,579: None
[DEBUG]2022-05-26 19:27:46,579: None
[DEBUG]2022-05-26 19:27:46,580: None
[DEBUG]2022-05-26 19:27:46,580: None
[DEBUG]2022-05-26 19:27:46,580: None
[DEBUG]2022-05-26 19:27:46,581: None
[DEBUG]2022-05-26 19:27:46,581: None
[DEBUG]2022-05-26 19:27:46,581: None
[DEBUG]2022-05-26 19:27:46,581: None
[DEBUG]2022-05-26 19:27:46,581: None
[DEBUG]2022-05-26 19:27:46,581: None
[DEBUG]2022-05-26 19:27:46,581: None
[DEBUG]2022-05-26 19:27:46,581: None
[DEBUG]2022-05-26 19:27:46,581: None
[DEBUG]2022-05-26 19:27:46,582: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:27:46,582: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:27:46,582: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:27:46,582: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:27:46,582: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:27:46,582: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:27:46,582: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:27:46,582: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:27:46,582: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:27:46,582: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:27:46,582: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:27:46,582: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:27:46,583: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:27:46,583: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:27:46,583: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:27:46,583: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:27:46,583: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:27:46,583: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,584: None
[DEBUG]2022-05-26 19:27:46,585: None
[DEBUG]2022-05-26 19:27:46,585: None
[DEBUG]2022-05-26 19:27:46,585: None
[DEBUG]2022-05-26 19:27:46,585: None
[DEBUG]2022-05-26 19:27:46,585: None
[DEBUG]2022-05-26 19:27:46,585: None
[DEBUG]2022-05-26 19:27:46,585: None
[DEBUG]2022-05-26 19:27:46,585: None
[DEBUG]2022-05-26 19:27:46,585: None
[DEBUG]2022-05-26 19:27:46,586: None
[DEBUG]2022-05-26 19:27:46,586: None
[DEBUG]2022-05-26 19:27:46,586: None
[DEBUG]2022-05-26 19:27:46,586: None
[DEBUG]2022-05-26 19:27:46,586: None
[DEBUG]2022-05-26 19:27:46,586: None
[DEBUG]2022-05-26 19:27:46,586: None
[DEBUG]2022-05-26 19:27:46,586: None
[DEBUG]2022-05-26 19:27:46,586: None
[DEBUG]2022-05-26 19:27:46,586: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,587: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,588: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,589: None
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,590: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,591: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,593: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,594: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,595: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,596: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,597: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,598: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,600: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,603: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,605: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,607: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:27:46,608: None
[DEBUG]2022-05-26 19:30:37,695: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:30:37,695: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:30:37,695: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:30:37,697: None
[DEBUG]2022-05-26 19:30:37,697: None
[DEBUG]2022-05-26 19:30:37,698: None
[DEBUG]2022-05-26 19:30:37,698: None
[DEBUG]2022-05-26 19:30:37,698: None
[DEBUG]2022-05-26 19:30:37,699: None
[DEBUG]2022-05-26 19:30:37,699: None
[DEBUG]2022-05-26 19:30:37,699: None
[DEBUG]2022-05-26 19:30:37,699: None
[DEBUG]2022-05-26 19:30:37,699: None
[DEBUG]2022-05-26 19:30:37,699: None
[DEBUG]2022-05-26 19:30:37,699: None
[DEBUG]2022-05-26 19:30:37,699: None
[DEBUG]2022-05-26 19:30:37,699: None
[DEBUG]2022-05-26 19:30:37,700: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:30:37,700: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:30:37,700: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:30:37,700: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:30:37,700: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:30:37,700: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:30:37,700: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:30:37,700: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:30:37,700: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:30:37,700: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:30:37,700: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:30:37,700: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:30:37,701: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:30:37,701: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:30:37,701: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:30:37,701: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:30:37,701: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:30:37,701: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:30:37,701: None
[DEBUG]2022-05-26 19:30:37,701: None
[DEBUG]2022-05-26 19:30:37,701: None
[DEBUG]2022-05-26 19:30:37,701: None
[DEBUG]2022-05-26 19:30:37,701: None
[DEBUG]2022-05-26 19:30:37,701: None
[DEBUG]2022-05-26 19:30:37,701: None
[DEBUG]2022-05-26 19:30:37,702: None
[DEBUG]2022-05-26 19:30:37,702: None
[DEBUG]2022-05-26 19:30:37,702: None
[DEBUG]2022-05-26 19:30:37,702: None
[DEBUG]2022-05-26 19:30:37,702: None
[DEBUG]2022-05-26 19:30:37,702: None
[DEBUG]2022-05-26 19:30:37,702: None
[DEBUG]2022-05-26 19:30:37,702: None
[DEBUG]2022-05-26 19:30:37,703: None
[DEBUG]2022-05-26 19:30:37,703: None
[DEBUG]2022-05-26 19:30:37,703: None
[DEBUG]2022-05-26 19:30:37,703: None
[DEBUG]2022-05-26 19:30:37,703: None
[DEBUG]2022-05-26 19:30:37,703: None
[DEBUG]2022-05-26 19:30:37,703: None
[DEBUG]2022-05-26 19:30:37,703: None
[DEBUG]2022-05-26 19:30:37,703: None
[DEBUG]2022-05-26 19:30:37,704: None
[DEBUG]2022-05-26 19:30:37,704: None
[DEBUG]2022-05-26 19:30:37,704: None
[DEBUG]2022-05-26 19:30:37,704: None
[DEBUG]2022-05-26 19:30:37,704: None
[DEBUG]2022-05-26 19:30:37,704: None
[DEBUG]2022-05-26 19:30:37,704: None
[DEBUG]2022-05-26 19:30:37,704: None
[DEBUG]2022-05-26 19:30:37,704: None
[DEBUG]2022-05-26 19:30:37,704: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,705: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,706: None
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,708: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,709: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,710: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,712: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,714: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,715: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,716: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,717: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,718: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,719: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,721: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,723: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:30:37,725: None
[DEBUG]2022-05-26 19:35:04,373: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:35:04,373: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:35:04,373: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:35:04,375: None
[DEBUG]2022-05-26 19:35:04,375: None
[DEBUG]2022-05-26 19:35:04,376: None
[DEBUG]2022-05-26 19:35:04,376: None
[DEBUG]2022-05-26 19:35:04,376: None
[DEBUG]2022-05-26 19:35:04,377: None
[DEBUG]2022-05-26 19:35:04,377: None
[DEBUG]2022-05-26 19:35:04,377: None
[DEBUG]2022-05-26 19:35:04,377: None
[DEBUG]2022-05-26 19:35:04,378: None
[DEBUG]2022-05-26 19:35:04,378: None
[DEBUG]2022-05-26 19:35:04,378: None
[DEBUG]2022-05-26 19:35:04,378: None
[DEBUG]2022-05-26 19:35:04,378: None
[DEBUG]2022-05-26 19:35:04,379: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:35:04,379: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:35:04,379: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:35:04,379: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:35:04,379: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:35:04,379: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:35:04,379: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:35:04,379: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:35:04,379: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:35:04,379: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:35:04,379: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:35:04,379: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:35:04,379: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:35:04,379: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:35:04,379: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:35:04,379: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:35:04,379: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:35:04,379: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:35:04,380: None
[DEBUG]2022-05-26 19:35:04,380: None
[DEBUG]2022-05-26 19:35:04,380: None
[DEBUG]2022-05-26 19:35:04,380: None
[DEBUG]2022-05-26 19:35:04,380: None
[DEBUG]2022-05-26 19:35:04,380: None
[DEBUG]2022-05-26 19:35:04,380: None
[DEBUG]2022-05-26 19:35:04,381: None
[DEBUG]2022-05-26 19:35:04,381: None
[DEBUG]2022-05-26 19:35:04,381: None
[DEBUG]2022-05-26 19:35:04,381: None
[DEBUG]2022-05-26 19:35:04,381: None
[DEBUG]2022-05-26 19:35:04,381: None
[DEBUG]2022-05-26 19:35:04,381: None
[DEBUG]2022-05-26 19:35:04,381: None
[DEBUG]2022-05-26 19:35:04,382: None
[DEBUG]2022-05-26 19:35:04,382: None
[DEBUG]2022-05-26 19:35:04,382: None
[DEBUG]2022-05-26 19:35:04,382: None
[DEBUG]2022-05-26 19:35:04,382: None
[DEBUG]2022-05-26 19:35:04,382: None
[DEBUG]2022-05-26 19:35:04,382: None
[DEBUG]2022-05-26 19:35:04,382: None
[DEBUG]2022-05-26 19:35:04,382: None
[DEBUG]2022-05-26 19:35:04,383: None
[DEBUG]2022-05-26 19:35:04,383: None
[DEBUG]2022-05-26 19:35:04,383: None
[DEBUG]2022-05-26 19:35:04,383: None
[DEBUG]2022-05-26 19:35:04,383: None
[DEBUG]2022-05-26 19:35:04,383: None
[DEBUG]2022-05-26 19:35:04,383: None
[DEBUG]2022-05-26 19:35:04,383: None
[DEBUG]2022-05-26 19:35:04,383: None
[DEBUG]2022-05-26 19:35:04,383: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,384: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,385: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: None
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,386: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,387: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,388: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,390: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,391: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,393: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,395: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,397: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,399: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,400: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,402: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,403: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,405: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:35:04,406: None
[DEBUG]2022-05-26 19:37:55,677: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:37:55,678: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:37:55,678: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:37:55,680: None
[DEBUG]2022-05-26 19:37:55,680: None
[DEBUG]2022-05-26 19:37:55,680: None
[DEBUG]2022-05-26 19:37:55,680: None
[DEBUG]2022-05-26 19:37:55,680: None
[DEBUG]2022-05-26 19:37:55,681: None
[DEBUG]2022-05-26 19:37:55,681: None
[DEBUG]2022-05-26 19:37:55,681: None
[DEBUG]2022-05-26 19:37:55,681: None
[DEBUG]2022-05-26 19:37:55,682: None
[DEBUG]2022-05-26 19:37:55,682: None
[DEBUG]2022-05-26 19:37:55,682: None
[DEBUG]2022-05-26 19:37:55,682: None
[DEBUG]2022-05-26 19:37:55,682: None
[DEBUG]2022-05-26 19:37:55,683: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:37:55,683: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:37:55,683: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:37:55,683: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:37:55,683: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:37:55,683: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:37:55,683: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:37:55,683: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:37:55,683: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:37:55,683: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:37:55,683: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:37:55,683: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:37:55,683: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:37:55,683: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:37:55,683: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:37:55,683: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:37:55,683: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:37:55,683: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:37:55,684: None
[DEBUG]2022-05-26 19:37:55,684: None
[DEBUG]2022-05-26 19:37:55,684: None
[DEBUG]2022-05-26 19:37:55,684: None
[DEBUG]2022-05-26 19:37:55,684: None
[DEBUG]2022-05-26 19:37:55,684: None
[DEBUG]2022-05-26 19:37:55,684: None
[DEBUG]2022-05-26 19:37:55,685: None
[DEBUG]2022-05-26 19:37:55,685: None
[DEBUG]2022-05-26 19:37:55,685: None
[DEBUG]2022-05-26 19:37:55,685: None
[DEBUG]2022-05-26 19:37:55,685: None
[DEBUG]2022-05-26 19:37:55,685: None
[DEBUG]2022-05-26 19:37:55,685: None
[DEBUG]2022-05-26 19:37:55,685: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,686: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,687: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,688: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,689: None
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,690: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,691: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,692: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,693: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,694: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,695: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,696: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,697: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,699: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,700: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,702: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,703: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,704: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:37:55,706: None
[DEBUG]2022-05-26 19:44:15,673: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:44:15,673: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:44:15,673: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:44:15,675: None
[DEBUG]2022-05-26 19:44:15,675: None
[DEBUG]2022-05-26 19:44:15,676: None
[DEBUG]2022-05-26 19:44:15,676: None
[DEBUG]2022-05-26 19:44:15,676: None
[DEBUG]2022-05-26 19:44:15,677: None
[DEBUG]2022-05-26 19:44:15,677: None
[DEBUG]2022-05-26 19:44:15,677: None
[DEBUG]2022-05-26 19:44:15,677: None
[DEBUG]2022-05-26 19:44:15,677: None
[DEBUG]2022-05-26 19:44:15,677: None
[DEBUG]2022-05-26 19:44:15,677: None
[DEBUG]2022-05-26 19:44:15,677: None
[DEBUG]2022-05-26 19:44:15,677: None
[DEBUG]2022-05-26 19:44:15,678: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:44:15,678: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:44:15,678: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:44:15,678: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:44:15,678: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:44:15,678: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:44:15,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:44:15,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:44:15,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:44:15,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:44:15,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:44:15,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:44:15,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:44:15,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:44:15,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:44:15,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:44:15,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:44:15,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:44:15,680: None
[DEBUG]2022-05-26 19:44:15,680: None
[DEBUG]2022-05-26 19:44:15,680: None
[DEBUG]2022-05-26 19:44:15,680: None
[DEBUG]2022-05-26 19:44:15,680: None
[DEBUG]2022-05-26 19:44:15,680: None
[DEBUG]2022-05-26 19:44:15,680: None
[DEBUG]2022-05-26 19:44:15,681: None
[DEBUG]2022-05-26 19:44:15,681: None
[DEBUG]2022-05-26 19:44:15,681: None
[DEBUG]2022-05-26 19:44:15,681: None
[DEBUG]2022-05-26 19:44:15,681: None
[DEBUG]2022-05-26 19:44:15,681: None
[DEBUG]2022-05-26 19:44:15,681: None
[DEBUG]2022-05-26 19:44:15,681: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,682: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,683: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,684: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,685: None
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,686: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,688: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,690: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,692: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,694: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,696: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,698: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,700: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,702: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,703: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,705: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,707: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,709: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:44:15,711: None
[DEBUG]2022-05-26 19:46:57,260: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:46:57,260: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:46:57,260: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:46:57,262: None
[DEBUG]2022-05-26 19:46:57,262: None
[DEBUG]2022-05-26 19:46:57,263: None
[DEBUG]2022-05-26 19:46:57,263: None
[DEBUG]2022-05-26 19:46:57,263: None
[DEBUG]2022-05-26 19:46:57,264: None
[DEBUG]2022-05-26 19:46:57,264: None
[DEBUG]2022-05-26 19:46:57,264: None
[DEBUG]2022-05-26 19:46:57,264: None
[DEBUG]2022-05-26 19:46:57,264: None
[DEBUG]2022-05-26 19:46:57,264: None
[DEBUG]2022-05-26 19:46:57,264: None
[DEBUG]2022-05-26 19:46:57,264: None
[DEBUG]2022-05-26 19:46:57,264: None
[DEBUG]2022-05-26 19:46:57,265: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:46:57,265: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:46:57,265: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:46:57,265: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:46:57,265: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:46:57,265: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:46:57,265: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:46:57,265: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:46:57,265: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:46:57,265: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:46:57,265: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:46:57,265: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:46:57,265: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:46:57,265: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:46:57,265: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:46:57,265: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:46:57,265: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:46:57,265: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:46:57,266: None
[DEBUG]2022-05-26 19:46:57,266: None
[DEBUG]2022-05-26 19:46:57,266: None
[DEBUG]2022-05-26 19:46:57,266: None
[DEBUG]2022-05-26 19:46:57,266: None
[DEBUG]2022-05-26 19:46:57,266: None
[DEBUG]2022-05-26 19:46:57,266: None
[DEBUG]2022-05-26 19:46:57,267: None
[DEBUG]2022-05-26 19:46:57,267: None
[DEBUG]2022-05-26 19:46:57,267: None
[DEBUG]2022-05-26 19:46:57,267: None
[DEBUG]2022-05-26 19:46:57,267: None
[DEBUG]2022-05-26 19:46:57,267: None
[DEBUG]2022-05-26 19:46:57,267: None
[DEBUG]2022-05-26 19:46:57,267: None
[DEBUG]2022-05-26 19:46:57,268: None
[DEBUG]2022-05-26 19:46:57,268: None
[DEBUG]2022-05-26 19:46:57,268: None
[DEBUG]2022-05-26 19:46:57,268: None
[DEBUG]2022-05-26 19:46:57,268: None
[DEBUG]2022-05-26 19:46:57,268: None
[DEBUG]2022-05-26 19:46:57,268: None
[DEBUG]2022-05-26 19:46:57,268: None
[DEBUG]2022-05-26 19:46:57,268: None
[DEBUG]2022-05-26 19:46:57,269: None
[DEBUG]2022-05-26 19:46:57,269: None
[DEBUG]2022-05-26 19:46:57,269: None
[DEBUG]2022-05-26 19:46:57,269: None
[DEBUG]2022-05-26 19:46:57,269: None
[DEBUG]2022-05-26 19:46:57,269: None
[DEBUG]2022-05-26 19:46:57,269: None
[DEBUG]2022-05-26 19:46:57,269: None
[DEBUG]2022-05-26 19:46:57,269: None
[DEBUG]2022-05-26 19:46:57,269: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,270: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,271: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,272: None
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: <re.Match object; span=(1736, 1859), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,273: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,274: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,275: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,276: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,277: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,278: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,279: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,280: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,281: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,283: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,284: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,286: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,287: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:46:57,289: None
[DEBUG]2022-05-26 19:47:26,038: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:47:26,038: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:47:26,038: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:47:26,040: None
[DEBUG]2022-05-26 19:47:26,040: None
[DEBUG]2022-05-26 19:47:26,041: None
[DEBUG]2022-05-26 19:47:26,041: None
[DEBUG]2022-05-26 19:47:26,041: None
[DEBUG]2022-05-26 19:47:26,041: None
[DEBUG]2022-05-26 19:47:26,041: None
[DEBUG]2022-05-26 19:47:26,041: None
[DEBUG]2022-05-26 19:47:26,041: None
[DEBUG]2022-05-26 19:47:26,042: None
[DEBUG]2022-05-26 19:47:26,042: None
[DEBUG]2022-05-26 19:47:26,042: None
[DEBUG]2022-05-26 19:47:26,042: None
[DEBUG]2022-05-26 19:47:26,042: None
[DEBUG]2022-05-26 19:47:26,043: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:47:26,043: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:47:26,043: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:47:26,043: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:47:26,043: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:47:26,043: <re.Match object; span=(2006, 2074), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:47:26,043: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:47:26,043: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:47:26,043: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:47:26,043: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:47:26,043: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:47:26,043: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:47:26,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:47:26,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:47:26,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:47:26,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:47:26,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:47:26,044: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:47:26,045: None
[DEBUG]2022-05-26 19:47:26,045: None
[DEBUG]2022-05-26 19:47:26,045: None
[DEBUG]2022-05-26 19:47:26,045: None
[DEBUG]2022-05-26 19:47:26,045: None
[DEBUG]2022-05-26 19:47:26,045: None
[DEBUG]2022-05-26 19:47:26,045: None
[DEBUG]2022-05-26 19:47:26,047: None
[DEBUG]2022-05-26 19:47:26,047: None
[DEBUG]2022-05-26 19:47:26,047: None
[DEBUG]2022-05-26 19:47:26,047: None
[DEBUG]2022-05-26 19:47:26,047: None
[DEBUG]2022-05-26 19:47:26,047: None
[DEBUG]2022-05-26 19:47:26,047: None
[DEBUG]2022-05-26 19:47:26,047: None
[DEBUG]2022-05-26 19:47:26,048: None
[DEBUG]2022-05-26 19:47:26,048: None
[DEBUG]2022-05-26 19:47:26,048: None
[DEBUG]2022-05-26 19:47:26,048: None
[DEBUG]2022-05-26 19:47:26,048: None
[DEBUG]2022-05-26 19:47:26,048: None
[DEBUG]2022-05-26 19:47:26,048: None
[DEBUG]2022-05-26 19:47:26,048: None
[DEBUG]2022-05-26 19:47:26,048: None
[DEBUG]2022-05-26 19:47:26,049: None
[DEBUG]2022-05-26 19:47:26,049: None
[DEBUG]2022-05-26 19:47:26,049: None
[DEBUG]2022-05-26 19:47:26,049: None
[DEBUG]2022-05-26 19:47:26,049: None
[DEBUG]2022-05-26 19:47:26,049: None
[DEBUG]2022-05-26 19:47:26,049: None
[DEBUG]2022-05-26 19:47:26,049: None
[DEBUG]2022-05-26 19:47:26,049: None
[DEBUG]2022-05-26 19:47:26,049: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,050: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,052: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,053: None
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,054: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,055: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,056: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,058: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,059: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,060: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,061: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,063: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,064: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,065: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,067: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,068: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,069: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:47:26,071: None
[DEBUG]2022-05-26 19:48:06,906: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:48:06,906: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:48:06,906: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:48:06,908: None
[DEBUG]2022-05-26 19:48:06,908: None
[DEBUG]2022-05-26 19:48:06,909: None
[DEBUG]2022-05-26 19:48:06,909: None
[DEBUG]2022-05-26 19:48:06,909: None
[DEBUG]2022-05-26 19:48:06,910: None
[DEBUG]2022-05-26 19:48:06,910: None
[DEBUG]2022-05-26 19:48:06,910: None
[DEBUG]2022-05-26 19:48:06,910: None
[DEBUG]2022-05-26 19:48:06,910: None
[DEBUG]2022-05-26 19:48:06,910: None
[DEBUG]2022-05-26 19:48:06,910: None
[DEBUG]2022-05-26 19:48:06,910: None
[DEBUG]2022-05-26 19:48:06,910: None
[DEBUG]2022-05-26 19:48:06,911: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:48:06,911: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:48:06,911: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:48:06,911: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:48:06,911: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:48:06,911: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:48:06,911: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:48:06,911: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:48:06,911: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:48:06,911: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:48:06,911: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:48:06,911: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:48:06,912: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:48:06,912: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:48:06,912: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:48:06,912: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:48:06,912: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:48:06,912: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,913: None
[DEBUG]2022-05-26 19:48:06,914: None
[DEBUG]2022-05-26 19:48:06,914: None
[DEBUG]2022-05-26 19:48:06,914: None
[DEBUG]2022-05-26 19:48:06,914: None
[DEBUG]2022-05-26 19:48:06,914: None
[DEBUG]2022-05-26 19:48:06,914: None
[DEBUG]2022-05-26 19:48:06,914: None
[DEBUG]2022-05-26 19:48:06,914: None
[DEBUG]2022-05-26 19:48:06,914: None
[DEBUG]2022-05-26 19:48:06,915: None
[DEBUG]2022-05-26 19:48:06,915: None
[DEBUG]2022-05-26 19:48:06,915: None
[DEBUG]2022-05-26 19:48:06,915: None
[DEBUG]2022-05-26 19:48:06,915: None
[DEBUG]2022-05-26 19:48:06,915: None
[DEBUG]2022-05-26 19:48:06,915: None
[DEBUG]2022-05-26 19:48:06,915: None
[DEBUG]2022-05-26 19:48:06,915: None
[DEBUG]2022-05-26 19:48:06,915: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,917: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: None
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,918: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,919: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,921: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,922: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,923: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,924: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,926: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,927: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,929: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,931: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,933: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,934: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,936: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:48:06,937: None
[DEBUG]2022-05-26 19:50:23,671: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:50:23,671: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:50:23,672: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:50:23,674: None
[DEBUG]2022-05-26 19:50:23,674: None
[DEBUG]2022-05-26 19:50:23,674: None
[DEBUG]2022-05-26 19:50:23,674: None
[DEBUG]2022-05-26 19:50:23,674: None
[DEBUG]2022-05-26 19:50:23,675: None
[DEBUG]2022-05-26 19:50:23,675: None
[DEBUG]2022-05-26 19:50:23,675: None
[DEBUG]2022-05-26 19:50:23,675: None
[DEBUG]2022-05-26 19:50:23,676: None
[DEBUG]2022-05-26 19:50:23,676: None
[DEBUG]2022-05-26 19:50:23,676: None
[DEBUG]2022-05-26 19:50:23,676: None
[DEBUG]2022-05-26 19:50:23,676: None
[DEBUG]2022-05-26 19:50:23,677: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:50:23,677: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:50:23,677: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:50:23,677: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:50:23,677: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:50:23,677: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:50:23,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:50:23,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:50:23,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:50:23,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:50:23,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:50:23,678: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:50:23,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:50:23,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:50:23,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:50:23,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:50:23,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:50:23,678: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:50:23,680: None
[DEBUG]2022-05-26 19:50:23,680: None
[DEBUG]2022-05-26 19:50:23,680: None
[DEBUG]2022-05-26 19:50:23,680: None
[DEBUG]2022-05-26 19:50:23,680: None
[DEBUG]2022-05-26 19:50:23,680: None
[DEBUG]2022-05-26 19:50:23,680: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,681: None
[DEBUG]2022-05-26 19:50:23,682: None
[DEBUG]2022-05-26 19:50:23,682: None
[DEBUG]2022-05-26 19:50:23,682: None
[DEBUG]2022-05-26 19:50:23,682: None
[DEBUG]2022-05-26 19:50:23,682: None
[DEBUG]2022-05-26 19:50:23,682: None
[DEBUG]2022-05-26 19:50:23,682: None
[DEBUG]2022-05-26 19:50:23,682: None
[DEBUG]2022-05-26 19:50:23,682: None
[DEBUG]2022-05-26 19:50:23,682: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,683: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,684: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,685: None
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,686: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,687: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,688: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,690: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,692: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,694: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,696: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,697: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,698: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,700: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,701: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,702: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,703: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:50:23,705: None
[DEBUG]2022-05-26 19:53:08,458: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:53:08,459: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:53:08,459: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:53:08,461: None
[DEBUG]2022-05-26 19:53:08,461: None
[DEBUG]2022-05-26 19:53:08,461: None
[DEBUG]2022-05-26 19:53:08,461: None
[DEBUG]2022-05-26 19:53:08,461: None
[DEBUG]2022-05-26 19:53:08,462: None
[DEBUG]2022-05-26 19:53:08,462: None
[DEBUG]2022-05-26 19:53:08,462: None
[DEBUG]2022-05-26 19:53:08,462: None
[DEBUG]2022-05-26 19:53:08,463: None
[DEBUG]2022-05-26 19:53:08,463: None
[DEBUG]2022-05-26 19:53:08,463: None
[DEBUG]2022-05-26 19:53:08,463: None
[DEBUG]2022-05-26 19:53:08,463: None
[DEBUG]2022-05-26 19:53:08,464: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:53:08,464: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:53:08,464: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:53:08,464: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:53:08,464: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:53:08,464: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:53:08,464: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:53:08,464: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:53:08,464: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:53:08,464: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:53:08,464: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:53:08,464: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:53:08,464: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:53:08,464: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:53:08,464: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:53:08,464: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:53:08,464: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:53:08,464: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:53:08,465: None
[DEBUG]2022-05-26 19:53:08,465: None
[DEBUG]2022-05-26 19:53:08,465: None
[DEBUG]2022-05-26 19:53:08,465: None
[DEBUG]2022-05-26 19:53:08,465: None
[DEBUG]2022-05-26 19:53:08,465: None
[DEBUG]2022-05-26 19:53:08,465: None
[DEBUG]2022-05-26 19:53:08,466: None
[DEBUG]2022-05-26 19:53:08,466: None
[DEBUG]2022-05-26 19:53:08,466: None
[DEBUG]2022-05-26 19:53:08,466: None
[DEBUG]2022-05-26 19:53:08,466: None
[DEBUG]2022-05-26 19:53:08,466: None
[DEBUG]2022-05-26 19:53:08,466: None
[DEBUG]2022-05-26 19:53:08,466: None
[DEBUG]2022-05-26 19:53:08,467: None
[DEBUG]2022-05-26 19:53:08,467: None
[DEBUG]2022-05-26 19:53:08,467: None
[DEBUG]2022-05-26 19:53:08,467: None
[DEBUG]2022-05-26 19:53:08,467: None
[DEBUG]2022-05-26 19:53:08,467: None
[DEBUG]2022-05-26 19:53:08,467: None
[DEBUG]2022-05-26 19:53:08,467: None
[DEBUG]2022-05-26 19:53:08,467: None
[DEBUG]2022-05-26 19:53:08,468: None
[DEBUG]2022-05-26 19:53:08,468: None
[DEBUG]2022-05-26 19:53:08,468: None
[DEBUG]2022-05-26 19:53:08,468: None
[DEBUG]2022-05-26 19:53:08,468: None
[DEBUG]2022-05-26 19:53:08,468: None
[DEBUG]2022-05-26 19:53:08,468: None
[DEBUG]2022-05-26 19:53:08,468: None
[DEBUG]2022-05-26 19:53:08,468: None
[DEBUG]2022-05-26 19:53:08,468: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,469: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,470: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,471: None
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,472: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,473: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,474: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,476: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,477: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,478: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,479: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,480: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,482: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,485: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,486: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,488: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,490: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:53:08,492: None
[DEBUG]2022-05-26 19:54:29,544: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:54:29,544: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:54:29,544: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:54:29,546: None
[DEBUG]2022-05-26 19:54:29,546: None
[DEBUG]2022-05-26 19:54:29,547: None
[DEBUG]2022-05-26 19:54:29,547: None
[DEBUG]2022-05-26 19:54:29,547: None
[DEBUG]2022-05-26 19:54:29,547: None
[DEBUG]2022-05-26 19:54:29,547: None
[DEBUG]2022-05-26 19:54:29,547: None
[DEBUG]2022-05-26 19:54:29,547: None
[DEBUG]2022-05-26 19:54:29,548: None
[DEBUG]2022-05-26 19:54:29,548: None
[DEBUG]2022-05-26 19:54:29,548: None
[DEBUG]2022-05-26 19:54:29,548: None
[DEBUG]2022-05-26 19:54:29,548: None
[DEBUG]2022-05-26 19:54:29,549: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:29,549: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:29,549: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:29,549: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:29,549: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:29,549: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:29,549: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:29,549: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:29,549: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:29,549: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:29,549: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:29,549: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:29,549: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:29,549: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:29,549: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:29,549: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:29,549: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:29,549: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:29,550: None
[DEBUG]2022-05-26 19:54:29,550: None
[DEBUG]2022-05-26 19:54:29,550: None
[DEBUG]2022-05-26 19:54:29,550: None
[DEBUG]2022-05-26 19:54:29,550: None
[DEBUG]2022-05-26 19:54:29,550: None
[DEBUG]2022-05-26 19:54:29,550: None
[DEBUG]2022-05-26 19:54:29,551: None
[DEBUG]2022-05-26 19:54:29,551: None
[DEBUG]2022-05-26 19:54:29,551: None
[DEBUG]2022-05-26 19:54:29,551: None
[DEBUG]2022-05-26 19:54:29,551: None
[DEBUG]2022-05-26 19:54:29,551: None
[DEBUG]2022-05-26 19:54:29,551: None
[DEBUG]2022-05-26 19:54:29,551: None
[DEBUG]2022-05-26 19:54:29,552: None
[DEBUG]2022-05-26 19:54:29,552: None
[DEBUG]2022-05-26 19:54:29,552: None
[DEBUG]2022-05-26 19:54:29,552: None
[DEBUG]2022-05-26 19:54:29,552: None
[DEBUG]2022-05-26 19:54:29,552: None
[DEBUG]2022-05-26 19:54:29,552: None
[DEBUG]2022-05-26 19:54:29,552: None
[DEBUG]2022-05-26 19:54:29,552: None
[DEBUG]2022-05-26 19:54:29,553: None
[DEBUG]2022-05-26 19:54:29,553: None
[DEBUG]2022-05-26 19:54:29,553: None
[DEBUG]2022-05-26 19:54:29,553: None
[DEBUG]2022-05-26 19:54:29,553: None
[DEBUG]2022-05-26 19:54:29,553: None
[DEBUG]2022-05-26 19:54:29,553: None
[DEBUG]2022-05-26 19:54:29,553: None
[DEBUG]2022-05-26 19:54:29,553: None
[DEBUG]2022-05-26 19:54:29,553: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,554: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,555: None
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,557: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,558: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,559: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,560: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,561: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,562: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,564: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,565: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,566: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,568: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,569: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,570: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,572: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:29,573: None
[DEBUG]2022-05-26 19:54:58,782: <re.Match object; span=(1081, 1956), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-26 19:54:58,782: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'NUMBEROFEVENTS']
[DEBUG]2022-05-26 19:54:58,782: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-26 19:54:58,785: None
[DEBUG]2022-05-26 19:54:58,785: None
[DEBUG]2022-05-26 19:54:58,785: None
[DEBUG]2022-05-26 19:54:58,785: None
[DEBUG]2022-05-26 19:54:58,785: None
[DEBUG]2022-05-26 19:54:58,786: None
[DEBUG]2022-05-26 19:54:58,786: None
[DEBUG]2022-05-26 19:54:58,786: None
[DEBUG]2022-05-26 19:54:58,786: None
[DEBUG]2022-05-26 19:54:58,786: None
[DEBUG]2022-05-26 19:54:58,786: None
[DEBUG]2022-05-26 19:54:58,786: None
[DEBUG]2022-05-26 19:54:58,786: None
[DEBUG]2022-05-26 19:54:58,786: None
[DEBUG]2022-05-26 19:54:58,787: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:58,787: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:58,787: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:58,787: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:58,787: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:58,787: <re.Match object; span=(2025, 2093), match='typedef enum {\n    InitPState,\n    FirstState,\>
[DEBUG]2022-05-26 19:54:58,788: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:58,788: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:58,788: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:58,788: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:58,788: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:58,788: ['InitPState', 'FirstState']
[DEBUG]2022-05-26 19:54:58,788: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:58,788: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:58,788: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:58,788: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:58,788: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:58,788: 
static const char *StateNames[] = {
	"InitPState",
	"FirstState",
};


[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,789: None
[DEBUG]2022-05-26 19:54:58,790: None
[DEBUG]2022-05-26 19:54:58,790: None
[DEBUG]2022-05-26 19:54:58,790: None
[DEBUG]2022-05-26 19:54:58,790: None
[DEBUG]2022-05-26 19:54:58,790: None
[DEBUG]2022-05-26 19:54:58,790: None
[DEBUG]2022-05-26 19:54:58,790: None
[DEBUG]2022-05-26 19:54:58,790: None
[DEBUG]2022-05-26 19:54:58,790: None
[DEBUG]2022-05-26 19:54:58,791: None
[DEBUG]2022-05-26 19:54:58,791: None
[DEBUG]2022-05-26 19:54:58,791: None
[DEBUG]2022-05-26 19:54:58,791: None
[DEBUG]2022-05-26 19:54:58,791: None
[DEBUG]2022-05-26 19:54:58,791: None
[DEBUG]2022-05-26 19:54:58,791: None
[DEBUG]2022-05-26 19:54:58,791: None
[DEBUG]2022-05-26 19:54:58,791: None
[DEBUG]2022-05-26 19:54:58,791: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,792: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,793: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,794: None
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: <re.Match object; span=(1755, 1878), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,795: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,796: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,797: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,798: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,799: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,800: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,801: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,803: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,804: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,805: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,806: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,808: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,809: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-26 19:54:58,811: None
[DEBUG]2022-05-27 14:28:40,429: <re.Match object; span=(1085, 2613), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-27 14:28:40,429: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'MICRO_END', 'ENCODER_TICK', 'ENCODER_DONE', 'ENCODER_SET_TICKS', 'DRIVING', 'DRIVE_FORWARD_FULL', 'DRIVE_FORWARD_HALF', 'DRIVE_REVERSE_FULL', 'DRIVE_REVERSE_HALF', 'TANK_TURN_LEFT_90', 'PIVOT_TURN_LEFT_300', 'NUMBEROFEVENTS']
[DEBUG]2022-05-27 14:28:40,429: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"MICRO_END",
	"ENCODER_TICK",
	"ENCODER_DONE",
	"ENCODER_SET_TICKS",
	"DRIVING",
	"DRIVE_FORWARD_FULL",
	"DRIVE_FORWARD_HALF",
	"DRIVE_REVERSE_FULL",
	"DRIVE_REVERSE_HALF",
	"TANK_TURN_LEFT_90",
	"PIVOT_TURN_LEFT_300",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-27 14:28:40,432: None
[DEBUG]2022-05-27 14:28:40,432: None
[DEBUG]2022-05-27 14:28:40,433: None
[DEBUG]2022-05-27 14:28:40,433: None
[DEBUG]2022-05-27 14:28:40,433: None
[DEBUG]2022-05-27 14:28:40,434: None
[DEBUG]2022-05-27 14:28:40,434: None
[DEBUG]2022-05-27 14:28:40,434: None
[DEBUG]2022-05-27 14:28:40,434: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,435: None
[DEBUG]2022-05-27 14:28:40,436: None
[DEBUG]2022-05-27 14:28:40,436: None
[DEBUG]2022-05-27 14:28:40,436: None
[DEBUG]2022-05-27 14:28:40,436: None
[DEBUG]2022-05-27 14:28:40,436: None
[DEBUG]2022-05-27 14:28:40,436: None
[DEBUG]2022-05-27 14:28:40,436: None
[DEBUG]2022-05-27 14:28:40,437: None
[DEBUG]2022-05-27 14:28:40,437: None
[DEBUG]2022-05-27 14:28:40,437: None
[DEBUG]2022-05-27 14:28:40,437: None
[DEBUG]2022-05-27 14:28:40,437: None
[DEBUG]2022-05-27 14:28:40,437: None
[DEBUG]2022-05-27 14:28:40,437: None
[DEBUG]2022-05-27 14:28:40,437: None
[DEBUG]2022-05-27 14:28:40,438: None
[DEBUG]2022-05-27 14:28:40,438: None
[DEBUG]2022-05-27 14:28:40,438: None
[DEBUG]2022-05-27 14:28:40,438: None
[DEBUG]2022-05-27 14:28:40,438: None
[DEBUG]2022-05-27 14:28:40,438: None
[DEBUG]2022-05-27 14:28:40,438: None
[DEBUG]2022-05-27 14:28:40,438: None
[DEBUG]2022-05-27 14:28:40,438: None
[DEBUG]2022-05-27 14:28:40,440: None
[DEBUG]2022-05-27 14:28:40,440: None
[DEBUG]2022-05-27 14:28:40,440: None
[DEBUG]2022-05-27 14:28:40,440: None
[DEBUG]2022-05-27 14:28:40,440: None
[DEBUG]2022-05-27 14:28:40,440: None
[DEBUG]2022-05-27 14:28:40,440: None
[DEBUG]2022-05-27 14:28:40,440: None
[DEBUG]2022-05-27 14:28:40,440: None
[DEBUG]2022-05-27 14:28:40,440: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,442: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,443: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,444: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,446: None
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,447: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,448: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,451: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,452: None
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,453: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,454: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,455: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,457: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,458: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,459: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,460: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,462: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,463: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,465: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,466: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,468: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,470: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,471: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:28:40,473: None
[DEBUG]2022-05-27 14:30:48,274: <re.Match object; span=(1085, 2613), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-27 14:30:48,275: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'MICRO_END', 'ENCODER_TICK', 'ENCODER_DONE', 'ENCODER_SET_TICKS', 'DRIVING', 'DRIVE_FORWARD_FULL', 'DRIVE_FORWARD_HALF', 'DRIVE_REVERSE_FULL', 'DRIVE_REVERSE_HALF', 'TANK_TURN_LEFT_90', 'PIVOT_TURN_LEFT_300', 'NUMBEROFEVENTS']
[DEBUG]2022-05-27 14:30:48,275: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"MICRO_END",
	"ENCODER_TICK",
	"ENCODER_DONE",
	"ENCODER_SET_TICKS",
	"DRIVING",
	"DRIVE_FORWARD_FULL",
	"DRIVE_FORWARD_HALF",
	"DRIVE_REVERSE_FULL",
	"DRIVE_REVERSE_HALF",
	"TANK_TURN_LEFT_90",
	"PIVOT_TURN_LEFT_300",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-27 14:30:48,277: None
[DEBUG]2022-05-27 14:30:48,277: None
[DEBUG]2022-05-27 14:30:48,278: None
[DEBUG]2022-05-27 14:30:48,278: None
[DEBUG]2022-05-27 14:30:48,278: None
[DEBUG]2022-05-27 14:30:48,279: None
[DEBUG]2022-05-27 14:30:48,279: None
[DEBUG]2022-05-27 14:30:48,279: None
[DEBUG]2022-05-27 14:30:48,279: None
[DEBUG]2022-05-27 14:30:48,280: None
[DEBUG]2022-05-27 14:30:48,280: None
[DEBUG]2022-05-27 14:30:48,280: None
[DEBUG]2022-05-27 14:30:48,280: None
[DEBUG]2022-05-27 14:30:48,280: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,281: None
[DEBUG]2022-05-27 14:30:48,282: None
[DEBUG]2022-05-27 14:30:48,282: None
[DEBUG]2022-05-27 14:30:48,282: None
[DEBUG]2022-05-27 14:30:48,282: None
[DEBUG]2022-05-27 14:30:48,282: None
[DEBUG]2022-05-27 14:30:48,282: None
[DEBUG]2022-05-27 14:30:48,282: None
[DEBUG]2022-05-27 14:30:48,282: None
[DEBUG]2022-05-27 14:30:48,283: None
[DEBUG]2022-05-27 14:30:48,283: None
[DEBUG]2022-05-27 14:30:48,283: None
[DEBUG]2022-05-27 14:30:48,283: None
[DEBUG]2022-05-27 14:30:48,283: None
[DEBUG]2022-05-27 14:30:48,283: None
[DEBUG]2022-05-27 14:30:48,283: None
[DEBUG]2022-05-27 14:30:48,283: None
[DEBUG]2022-05-27 14:30:48,283: None
[DEBUG]2022-05-27 14:30:48,284: None
[DEBUG]2022-05-27 14:30:48,284: None
[DEBUG]2022-05-27 14:30:48,284: None
[DEBUG]2022-05-27 14:30:48,284: None
[DEBUG]2022-05-27 14:30:48,284: None
[DEBUG]2022-05-27 14:30:48,284: None
[DEBUG]2022-05-27 14:30:48,284: None
[DEBUG]2022-05-27 14:30:48,284: None
[DEBUG]2022-05-27 14:30:48,284: None
[DEBUG]2022-05-27 14:30:48,284: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,285: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,287: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,288: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,289: None
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,290: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,295: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,297: None
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,298: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,299: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,300: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,301: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,302: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,303: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,304: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,305: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,306: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,308: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,309: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,311: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,312: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:30:48,314: None
[DEBUG]2022-05-27 14:31:58,020: <re.Match object; span=(1085, 2613), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-27 14:31:58,021: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'MICRO_END', 'ENCODER_TICK', 'ENCODER_DONE', 'ENCODER_SET_TICKS', 'DRIVING', 'DRIVE_FORWARD_FULL', 'DRIVE_FORWARD_HALF', 'DRIVE_REVERSE_FULL', 'DRIVE_REVERSE_HALF', 'TANK_TURN_LEFT_90', 'PIVOT_TURN_LEFT_300', 'NUMBEROFEVENTS']
[DEBUG]2022-05-27 14:31:58,021: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"MICRO_END",
	"ENCODER_TICK",
	"ENCODER_DONE",
	"ENCODER_SET_TICKS",
	"DRIVING",
	"DRIVE_FORWARD_FULL",
	"DRIVE_FORWARD_HALF",
	"DRIVE_REVERSE_FULL",
	"DRIVE_REVERSE_HALF",
	"TANK_TURN_LEFT_90",
	"PIVOT_TURN_LEFT_300",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-27 14:31:58,022: None
[DEBUG]2022-05-27 14:31:58,022: None
[DEBUG]2022-05-27 14:31:58,023: None
[DEBUG]2022-05-27 14:31:58,023: None
[DEBUG]2022-05-27 14:31:58,023: None
[DEBUG]2022-05-27 14:31:58,024: None
[DEBUG]2022-05-27 14:31:58,024: None
[DEBUG]2022-05-27 14:31:58,024: None
[DEBUG]2022-05-27 14:31:58,024: None
[DEBUG]2022-05-27 14:31:58,024: None
[DEBUG]2022-05-27 14:31:58,024: None
[DEBUG]2022-05-27 14:31:58,024: None
[DEBUG]2022-05-27 14:31:58,024: None
[DEBUG]2022-05-27 14:31:58,024: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,025: None
[DEBUG]2022-05-27 14:31:58,026: None
[DEBUG]2022-05-27 14:31:58,026: None
[DEBUG]2022-05-27 14:31:58,026: None
[DEBUG]2022-05-27 14:31:58,026: None
[DEBUG]2022-05-27 14:31:58,026: None
[DEBUG]2022-05-27 14:31:58,026: None
[DEBUG]2022-05-27 14:31:58,026: None
[DEBUG]2022-05-27 14:31:58,026: None
[DEBUG]2022-05-27 14:31:58,027: None
[DEBUG]2022-05-27 14:31:58,027: None
[DEBUG]2022-05-27 14:31:58,027: None
[DEBUG]2022-05-27 14:31:58,027: None
[DEBUG]2022-05-27 14:31:58,027: None
[DEBUG]2022-05-27 14:31:58,027: None
[DEBUG]2022-05-27 14:31:58,027: None
[DEBUG]2022-05-27 14:31:58,027: None
[DEBUG]2022-05-27 14:31:58,027: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,028: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,029: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,030: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,031: None
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,032: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,033: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,034: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,035: None
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,036: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,037: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,038: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,039: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,040: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,041: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,042: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,043: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,044: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,045: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,046: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,047: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:31:58,049: None
[DEBUG]2022-05-27 14:33:51,465: <re.Match object; span=(1081, 2609), match='typedef enum {\n    ES_NO_EVENT, ES_ERROR, /* use>
[DEBUG]2022-05-27 14:33:51,465: ['ES_NO_EVENT', 'ES_ERROR', 'ES_INIT', 'ES_ENTRY', 'ES_EXIT', 'ES_KEYINPUT', 'ES_LISTEVENTS', 'ES_TIMEOUT', 'ES_TIMERACTIVE', 'ES_TIMERSTOPPED', 'BATTERY_CONNECTED', 'BATTERY_DISCONNECTED', 'FL_PRESSED', 'FL_UNPRESSED', 'FR_PRESSED', 'FR_UNPRESSED', 'RL_PRESSED', 'RL_UNPRESSED', 'RR_PRESSED', 'RR_UNPRESSED', 'DF_DETECTED', 'LF_DETECTED', 'DW_DETECTED', 'LW_DETECTED', 'BEACON_WITHIN_ANALOG_RANGE', 'DF_NONE_DETECTED', 'LF_NONE_DETECTED', 'BEACON_NOT_WITHIN_ANALOG_RANGE', 'BEACON_WITHIN_DIGITAL_RANGE', 'BEACON_NOT_WITHIN_DIGITAL_RANGE', 'TW_DETECTED', 'TW_NOT_DETECTED', 'MICRO_END', 'ENCODER_TICK', 'ENCODER_DONE', 'ENCODER_SET_TICKS', 'DRIVING', 'DRIVE_FORWARD_FULL', 'DRIVE_FORWARD_HALF', 'DRIVE_REVERSE_FULL', 'DRIVE_REVERSE_HALF', 'TANK_TURN_LEFT_90', 'PIVOT_TURN_LEFT_300', 'NUMBEROFEVENTS']
[DEBUG]2022-05-27 14:33:51,465: 
static const char *EventNames[] = {
	"ES_NO_EVENT",
	"ES_ERROR",
	"ES_INIT",
	"ES_ENTRY",
	"ES_EXIT",
	"ES_KEYINPUT",
	"ES_LISTEVENTS",
	"ES_TIMEOUT",
	"ES_TIMERACTIVE",
	"ES_TIMERSTOPPED",
	"BATTERY_CONNECTED",
	"BATTERY_DISCONNECTED",
	"FL_PRESSED",
	"FL_UNPRESSED",
	"FR_PRESSED",
	"FR_UNPRESSED",
	"RL_PRESSED",
	"RL_UNPRESSED",
	"RR_PRESSED",
	"RR_UNPRESSED",
	"DF_DETECTED",
	"LF_DETECTED",
	"DW_DETECTED",
	"LW_DETECTED",
	"BEACON_WITHIN_ANALOG_RANGE",
	"DF_NONE_DETECTED",
	"LF_NONE_DETECTED",
	"BEACON_NOT_WITHIN_ANALOG_RANGE",
	"BEACON_WITHIN_DIGITAL_RANGE",
	"BEACON_NOT_WITHIN_DIGITAL_RANGE",
	"TW_DETECTED",
	"TW_NOT_DETECTED",
	"MICRO_END",
	"ENCODER_TICK",
	"ENCODER_DONE",
	"ENCODER_SET_TICKS",
	"DRIVING",
	"DRIVE_FORWARD_FULL",
	"DRIVE_FORWARD_HALF",
	"DRIVE_REVERSE_FULL",
	"DRIVE_REVERSE_HALF",
	"TANK_TURN_LEFT_90",
	"PIVOT_TURN_LEFT_300",
	"NUMBEROFEVENTS",
};


[DEBUG]2022-05-27 14:33:51,467: None
[DEBUG]2022-05-27 14:33:51,467: None
[DEBUG]2022-05-27 14:33:51,468: None
[DEBUG]2022-05-27 14:33:51,468: None
[DEBUG]2022-05-27 14:33:51,468: None
[DEBUG]2022-05-27 14:33:51,469: None
[DEBUG]2022-05-27 14:33:51,469: None
[DEBUG]2022-05-27 14:33:51,469: None
[DEBUG]2022-05-27 14:33:51,469: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,470: None
[DEBUG]2022-05-27 14:33:51,471: None
[DEBUG]2022-05-27 14:33:51,471: None
[DEBUG]2022-05-27 14:33:51,471: None
[DEBUG]2022-05-27 14:33:51,471: None
[DEBUG]2022-05-27 14:33:51,471: None
[DEBUG]2022-05-27 14:33:51,471: None
[DEBUG]2022-05-27 14:33:51,471: None
[DEBUG]2022-05-27 14:33:51,472: None
[DEBUG]2022-05-27 14:33:51,472: None
[DEBUG]2022-05-27 14:33:51,472: None
[DEBUG]2022-05-27 14:33:51,472: None
[DEBUG]2022-05-27 14:33:51,472: None
[DEBUG]2022-05-27 14:33:51,472: None
[DEBUG]2022-05-27 14:33:51,472: None
[DEBUG]2022-05-27 14:33:51,472: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,473: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,474: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,475: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,477: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,478: None
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: <re.Match object; span=(1595, 1710), match='typedef enum {\n    InitPSubState,\n    IdleBumpS>
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,479: ['InitPSubState', 'IdleBumpState', 'DriveForward2in', 'DriveReverse2in']
[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,480: 
static const char *StateNames[] = {
	"InitPSubState",
	"IdleBumpState",
	"DriveForward2in",
	"DriveReverse2in",
};


[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,481: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,482: None
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,483: <re.Match object; span=(1600, 1696), match='typedef enum {\n    InitPSubState,\n    SubFirstS>
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,484: ['InitPSubState', 'SubFirstState', 'BumperPressed']
[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,485: 
static const char *StateNames[] = {
	"InitPSubState",
	"SubFirstState",
	"BumperPressed",
};


[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,486: <re.Match object; span=(2053, 2176), match='typedef enum {\n    InitPState,\n    ActiveSearch>
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,487: ['InitPState', 'ActiveSearch', 'MicroAdjust', 'TowerInSight', 'TapeHandler']
[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,488: 
static const char *StateNames[] = {
	"InitPState",
	"ActiveSearch",
	"MicroAdjust",
	"TowerInSight",
	"TapeHandler",
};


[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,489: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,490: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,491: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,493: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,494: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,495: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,497: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,498: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
[DEBUG]2022-05-27 14:33:51,499: None
